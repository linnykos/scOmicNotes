[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "scOmicNotes",
    "section": "",
    "text": "This is a Quarto book made from the content of BIOST 545 (Biostatistical Methods for Big Omics Data), taught by Dr. Kevin Lin at the University of Washington, Winter 2025. The lecture notes in BIOST 545 are meant to ease you into reading these notes, and the notes are meant to be a gateway to many references where the course’s goal is for you 1) to determine for yourself what areas you find interesting and are relevant to your research goals, and 2) use the references as a portal to find many ideas to bolster your own research. This Quarto book is assembled with the help of many student volunteers at the University of Washington: Xinmei Huang.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Preface</span>"
    ]
  },
  {
    "objectID": "chapter1_intro.html",
    "href": "chapter1_intro.html",
    "title": "2  Introduction",
    "section": "",
    "text": "2.1 Why study cell biology in public health?",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "chapter1_intro.html#why-study-cell-biology-in-public-health",
    "href": "chapter1_intro.html#why-study-cell-biology-in-public-health",
    "title": "2  Introduction",
    "section": "",
    "text": "2.1.1 What are “omics”?\nThe term “omics” refers to a broad field of biology aimed at the comprehensive characterisation and quantification of biological molecules that translate into the structure, function, and dynamics of an organism. At its core, “omics” encapsulates the idea of studying biological systems at a global scale rather than focusing on individual components. This includes genomics (DNA), transcriptomics (RNA), proteomics (proteins), epigenomics, metabolomics (metabolites), and more. Each of these fields leverages high-throughput technologies to generate massive datasets that capture complex interactions within cells, tissues, or organisms.\nThe rise of “omics” has revolutionised biology by enabling researchers to ask holistic questions such as how different genes, proteins, or metabolites interact in health and disease. It emphasises understanding systems as interconnected networks rather than isolated elements. This systems-level approach is particularly powerful in identifying biomarkers, understanding disease mechanisms, and tailoring precision-medicine strategies. In public health, “omics” provides tools to bridge molecular discoveries with population-level outcomes, offering new opportunities to tackle complex health challenges.\n\n\n2.1.2 Some examples of a “cell-biology” question\n\nHow the brain develops (i.e. the longitudinal sequence of events between birth and maturation), shown in Figure 2.1.\n\nHow microglia in the brain gain or lose certain functions during ageing, shown in Figure 2.2.\n\nWhy certain cells (i.e. cancer cells) divide uncontrollably, see Figure 2.3.\n\n\n\n\n\n\n\n\nFigure 2.1: What is the sequence of cell types that emerge (and where) during human brain development? (Zhou, Song, and Ming 2024)\n\n\n\n\n\n\n\n\n\n\n\nFigure 2.2: Microglia (immune cells of the brain) radically change shape during ageing.\nWhat are the functional consequences of this? (Von Bernhardi, Eugenı́n-von Bernhardi, and Eugenı́n 2015)\n\n\n\n\n\n\n\n\n\n\n\nFigure 2.3: Cancer is typically characterised by uncontrollable cell division. What drives this process, how can we detect it early, and how can we stop it? (Source: https://sites.duke.edu/seektobacco/2-the-role-of-tobacco-in-the-development-of-cancer/the-content/)\n\n\n\n\n\n\n2.1.3 How “omics” comes into the picture\nTo answer cell-biology questions we leverage different omics to learn clues about\n1. the cellular functions of a biological system, and\n2. how those functions change during disease, ageing, etc.\nAll these omics are related:\n\nThe central dogma of biology (DNA → RNA → protein) is illustrated in Figure 2.4 and Figure 2.5, linking the three most fundamental omics.\n\nThe epigenome, shown in Figure 2.6, comprises chemical modifications to DNA and histone proteins that regulate gene expression yet are not part of the DNA itself. The figure highlights three commonly studied features: DNA accessibility, DNA methylation, and histone modifications.\n\nThese layers are summarised in Figure 2.7.\n\n\n\n\n\n\n\nFigure 2.4: Central dogma. (Source: https://www.khanacademy.org/science/ap-biology/gene-expression-and-regulation/translation/a/intro-to-gene-expression-central-dogma)\n\n\n\n\n\n\n\n\n\n\n\nFigure 2.5: Central dogma. (Source: https://researchfeatures.com/adding-structure-biologys-central-dogma-cancer-treatments-thyroid-cancer/)\n\n\n\n\n\n\n\n\n\n\n\nFigure 2.6: Epigenetics. (Source: https://en.wikipedia.org/wiki/Epigenetics)\n\n\n\n\n\n\n\n\n\n\n\nFigure 2.7: A non-exhaustive list of omics. (Wen et al. 2022)\n\n\n\n\n\nRemark (Personal opinion: Biology is constantly revising the details).\nStatistical knowledge is rarely revised – its instead mostly refined. We know properties that generalize to much broader settings (i.e., less statistical assumptions) and much more refined statistical rates for the settings studied two decades ago. (1) There’s little revisions, since once someone proves a statistical theorem, it is very unlikely for it to get disproven in the future. (2) Statistics generally focuses on what happens in an “average/typical” scenario.\nBiology, in comparison, has many revisions and refinements. There’s a couple reasons for this: (1) Biology research is driven by technology. Hence, as we can image/sequence/profile new aspects of a cell, design new model organisms, or collect more data, we might revise a lot of understanding of how cells work. (2) While there are broad biological mechanisms that generally hold true, many diseases occur when the general biological principle no longer holds true. For this reasons, a lot of cell biology research is about these exceptions, which cause us to question how universally true a biological mechanism is. (As a simple example – we’re taught humans have 46 chromosomes. However, many conditions such as Down Syndrome, originate from having an abnormal number of chromosomes.)\n\n\nRemark (All the omics we will study in this course are matrices).\nOne of major missions of this course is to answer the following question: Every omic is represented as a matrix (generally, where the rows are cells, and columns are certain features, depending on the omic). In that case, how come some statistical methods designed for one omic isn’t applicable for another omic?\nWhile there are certain statistical answers to this question, most of the answers are based on biology. Certain methods rely on a specific biological premise, and that premise becomes hard to justify as you switch from one omic to another.\nThis is not too dissimilar from a causal analysis. In a causal analysis, the reason certain features get labeled as a confounder, treatment, outcome, instrumental variable, mediator, etc. relies on the context.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "chapter1_intro.html#what-do-we-hope-to-learn-from-single-cell-data",
    "href": "chapter1_intro.html#what-do-we-hope-to-learn-from-single-cell-data",
    "title": "2  Introduction",
    "section": "2.2 What do we hope to learn from single-cell data?",
    "text": "2.2 What do we hope to learn from single-cell data?\n\n2.2.1 Basic biology\nSingle-cell data offer a transformative lens to study the fundamental processes of life at unparalleled resolution. Unlike bulk data, which averages signals across populations of cells, single-cell technologies allow researchers to examine the diversity and complexity of individual cells within a tissue or organism. This level of detail provides insights into key biological phenomena, such as cellular differentiation during development, the plasticity of cell states in response to environmental cues, and the organization of complex tissues. For instance, single-cell RNA-sequencing (scRNA-seq) has uncovered new cell types in the brain and immune system, challenging traditional classifications and offering a more nuanced understanding of cellular identities and functions. These insights are essential for constructing more accurate models of how life operates at a cellular level.\nMany of the examples shown in Figs. Figure 2.1–Figure 2.2 are basic biology questions. Two additional examples are shown in Figure 2.8 and Figure 2.9.\n\n\n\n\n\n\n\nFigure 2.8: How do cancer cells survive successive therapies? (Schaff et al. 2024)\n\n\n\n\n\n\n\n\n\n\n\nFigure 2.9: What deteriorates in a cell as it ages (Silva and Schumacher 2021)\n\n\n\n\n\n\n2.2.2 Benchside-to-bedside applications\nSingle-cell data have enormous potential to revolutionize clinical practice by bridging molecular biology and medicine. After learning basic biology, the next stage is to use our newfound understanding to advance treatments. (We typically call this translation research, to denote translating our basic biology knowledge to therapeutic improvements.) This is also called benchside (for the wet-bench, i.e. laboratory setting) to bedside (for the hospital setting).\nBy mapping cellular heterogeneity in diseased and healthy tissues, researchers can identify specific cell populations driving disease progression and therapeutic resistance. For example, in cancer, single-cell analyses have uncovered rare tumor subclones that evade treatment, providing critical targets for drug development. Similarly, in autoimmune diseases like rheumatoid arthritis, single-cell profiling of synovial tissues has identified inflammatory cell states that correlate with disease severity and treatment response. Beyond diagnostics, this technology enables precision medicine by tailoring treatments to the molecular profiles of individual patients. As single-cell approaches continue to evolve, they are poised to refine drug-discovery pipelines, improve vaccine design, and ultimately transform how diseases are diagnosed and treated.\nThere are a few ways this typically happens. Figure 2.10 shows one example, where single-cell research helps identify the specific cell types and specific edits needed to improve cellular function. Figure 2.11 shows another example, where understanding the cellular functions, we can improve how conventional methods can be used to measure more accurate biomarkers. Cancer research has been (by far) the biggest beneficiary of single-cell research, and Figure 2.12 illustrates how single-cell improves cancer therapies.\n\n\n\n\n\n\n\nFigure 2.10: There are current single-cell therapies that involve extracting blood from a donor, altering the cells outside the body, and then infusing the altered blood back into the donor. (Source: https://www.cancer.gov/news-events/cancer-currents-blog/2020/crispr-cancer-research-treatment)\n\n\n\n\n\n\n\n\n\n\n\nFigure 2.11: After learning the causal mechanisms for specific cell types for Alzheimer’s disease that can be detected from blood draws, we can refine existing biomarkers to monitor Alzheimer’s. (Hansson et al. 2023)\n\n\n\n\n\n\n\n\n\n\n\nFigure 2.12: Example of how insights from single-cell studies transform cancer therapies. (Gohil et al. 2021)\n\n\n\n\n\n\n\n2.2.3 What existed prior to single-cell data?\nWestern blots and flow cytometry.\nBefore the advent of single-cell technologies, biological research relied heavily on methods like western blots and flow cytometry to study cells and molecules. Western blotting (shown in Figure 2.13 and Figure 2.14), developed in the late 1970 s, enabled researchers to detect and quantify specific proteins in a sample, providing insights into cellular pathways and protein-expression levels. However, this technique required lysing entire tissues or cell populations, averaging the signals from thousands or millions of cells. Flow cytometry (shown in Figure 2.15 and Figure 2.16), emerging in the 1980s, represented a major step forward by allowing researchers to analyse individual cells’ physical and chemical characteristics in suspension. While flow cytometry offered single-cell resolution, it was limited to analysing predefined markers and could not capture the full complexity of cellular states or gene expression.\n\n\n\n\n\n\n\nFigure 2.13: Illustration of the Western-blot technique. (Source: https://www.bio-rad.com/en-us/applications-technologies/western-blotting-electrophoresis-techniques)\n\n\n\n\n\n\n\n\n\n\n\nFigure 2.14: Example Western-blot data. (Kepchia et al. 2020)\n\n\n\n\n\n\n\n\n\n\n\nFigure 2.15: Illustration of flow-cytometry technique. (Source: https://www.streck.com/blog/principles-of-flow-cytometry/)\n\n\n\n\n\n\n\n\n\n\n\nFigure 2.16: Example flow-cytometry data. (Verschoor et al. 2015)\n\n\n\n\nMicroarray technology.\nThe 1990s marked the rise of microarray technology (shown in Figure 2.17 and Figure 2.18), which allowed scientists to measure the expression levels of thousands of genes simultaneously. Microarrays revolutionised transcriptomics by enabling high-throughput studies of gene activity in various conditions, tissues, and diseases. Despite its transformative impact, microarray analysis was fundamentally a bulk method, averaging signals across all cells in a sample. It is also based on light intensity, which can be tricky to extract consistently. These limitations obscured cellular heterogeneity, especially in complex tissues where distinct cell types or states contribute uniquely to biological processes or disease mechanisms.\n\n\n\n\n\n\n\nFigure 2.17: Illustration of microarray technique. (Source: https://www.onlinebiologynotes.com/dna-microarray-principle-types-and-steps-involved-in-cdna-microarrays/)\n\n\n\n\n\n\n\n\n\n\n\nFigure 2.18: Example microarray image prior to quantification. (Source: https://online.stat.psu.edu/stat555/node/28/)\n\n\n\n\n\nRemark (Personal opinion: the close history between microarrays and high-dimensional statistics).\nHistorically, the rise of microarray data spurred advances in high-dimensional statistics — e.g. the Lasso (Tibshirani et al. 2005), gene-expression classification for leukaemia (Golub et al. 1999), and empirical-Bayes multiple testing (Efron and Tibshirani 2002).\n\nBulk sequencing technologies.\nIn the 2000s, bulk sequencing technologies for DNA and RNA emerged, further advancing the study of genomes and transcriptomes. RNA-sequencing (RNA-seq) became a powerful tool for capturing the entire transcriptome with greater accuracy and dynamic range than microarrays. Similarly, DNA sequencing enabled comprehensive studies of genetic variation, from point mutations to structural alterations. However, like microarrays, bulk sequencing aggregated signals across many cells, masking rare cell populations and the heterogeneity critical to understanding dynamic processes such as tumour evolution or immune responses. These bulk techniques laid the groundwork for single-cell methods by driving innovations in high-throughput sequencing and data analysis, which would later be adapted for single-cell resolution.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "chapter1_intro.html#when-did-single-cell-data-become-popular-and-how-has-the-technology-advanced",
    "href": "chapter1_intro.html#when-did-single-cell-data-become-popular-and-how-has-the-technology-advanced",
    "title": "2  Introduction",
    "section": "2.3 When did single-cell data become popular, and how has the technology advanced?",
    "text": "2.3 When did single-cell data become popular, and how has the technology advanced?\n\n2.3.1 The rise of single-cell data\nSingle-cell data began gaining prominence in the early 2010s, fuelled by advances in microfluidics and next-generation sequencing. Single-cell RNA-sequencing (scRNA-seq), pioneered around 2009 – 2011, was among the first methods to achieve widespread adoption. It enabled measurement of gene expression in individual cells, uncovering heterogeneity that bulk analyses masked. Early applications revealed new cell types and states, reshaped our understanding of development, and identified rare populations in cancers and neurodegenerative disorders. Popularity grew as throughput increased, costs fell, and workflows became standardised.\nFigure 2.19 and Figure 2.20 contrasts bulk and single-cell sequencing. Figure 2.21 shows how single-cell data tease apart different sources of heterogeneity.\n\n\n\n\n\n\n\nFigure 2.19: Illustrations of how single-cell sequencing improves resolution for studying cancer resistance. (Shalek and Benson 2017)\n\n\n\n\n\n\n\n\n\n\n\nFigure 2.20: Illustrations of how single-cell sequencing improves resolution for studying cancer resistance. (Shalek and Benson 2017)\n\n\n\n\n\n\n\n\n\n\n\nFigure 2.21: Single-cell insights disentangle underlying biological mechanisms. (Lei et al. 2021)\n\n\n\n\n\n\n2.3.2 Expansion into other omics and spatial technologies\nBuilding on single-cell transcriptomics, the field rapidly expanded into other omics. Single-cell proteomics allows detailed analysis of protein expression and signalling pathways. Single-cell ATAC-seq profiles chromatin accessibility; Hi-C and related methods reveal 3D genome architecture. Spatial transcriptomics connects gene expression with tissue context. CRISPR-based single-cell screens enable high-throughput perturbations, and lineage-tracing barcodes add a temporal dimension, charting cell ancestry in development and disease. Together, these advances transformed single-cell biology into a multi-dimensional, integrative discipline.\nMany of these technologies appear in Figure 2.22.\n\n\n\n\n\n\n\nFigure 2.22: Illustration (circa 2020) of technologies that pair various omics at single-cell resolution. (Teichmann and Efremova 2020)",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "chapter1_intro.html#what-is-the-role-of-a-biostatistician-in-a-wet-lab-clinical-world",
    "href": "chapter1_intro.html#what-is-the-role-of-a-biostatistician-in-a-wet-lab-clinical-world",
    "title": "2  Introduction",
    "section": "2.4 What is the role of a biostatistician in a wet-lab / clinical world?",
    "text": "2.4 What is the role of a biostatistician in a wet-lab / clinical world?\nCell biology is vast – especially for students trained primarily in statistics or biostatistics. Many disciplines intersect with cell biology. For example:\n\nStatistics / Biostatistics – statistical models for complex biological processes; translation between maths and biology\nComputational biology – scalable computation, leveraging public data\nBioinformatics / Genetics – tools that draw on large‐consortium resources\nEpidemiology – population-level data and policy recommendations\nBioengineering – new laboratory technologies for cheaper/faster measurement or imaging\nBiology – mechanistic studies in model organisms\nBiochemistry / Molecular biology – structure, function, interactions of specific molecules\nWet-bench medicine – disease mechanisms via tissues, models, cell lines\nClinical-facing medicine – patient treatment and real-world sample collection\nPharmacology – integrating evidence to design new drugs and therapies\n\nGiven so many players, what does a biostatistician contribute?\n\n2.4.1 How a biostatistician perceives the world\nGive me a concrete (ideally cleaned) dataset: the larger the better—and I will analyse it from many angles.\nCausality: A mathematically stricter notion than correlation, usually via (1) counterfactual reasoning, or (2) a directed-acyclic-graph picture of how variables relate.\n\nRemark (Personal opinion: statistical causality for cell biology is extremely difficult). Obstacles: (i) tracking the same cell over time is impossible because sequencing lyses it; (ii) longitudinal human tissue samples are rare. Strong modelling assumptions can help but must withstand biological scrutiny. The bottleneck is often data, not maths—ambitious statisticians who learn enough biology still have a fighting chance.\n\n\nRemark (Single-cell methods are largely an “associative” world): Most single-cell analyses discover mechanisms that are statistically correlational; the causal proof comes from experiments and biology.\n\nThe research inquiry starts and ends with a method: (How to integrate modalities? learn a gene-regulatory network? perform valid post-clustering tests?) Start with a statistical model and a parameter of interest \\(\\theta^*\\), then typically:\n\nDevelop a novel estimator of \\(\\theta^*\\), explaining why current methods fail (e.g. lack robustness, accuracy, power, or are heuristic). Focus on statistical logic: A clear, simple mathematical intuition should show the gap and how the new method fills it.\nProve theorems showing the estimate \\(\\hat\\theta\\) converges to \\(\\theta^*\\) under stated assumptions. Focus on consistency & convergence: More data should provably yield more accurate results (often the highlight of a statistics paper).\nSimulations demonstrating that when the true \\(\\theta^*\\) is known, \\(\\hat\\theta\\) beats competing estimators across many settings. Illustration via benchmarking: Empirically recover the correct answer more often than existing methods.\nReal-data demonstration showing results align with known biology or provide biologically sensible new insights. Focus on practicality: The method must work in real scenarios mirroring its target audience.\n\nMindset: deliver a reliable tool that others can trust as-is. Human validations are often impractical; guard-rails and diagnostics are vital.\nWhy biostatisticians need wet-lab biologists / clinicians: We rarely generate data ourselves, so collaborators supply (i) exciting data with novel questions, (ii) biological context for sensible assumptions, and (iii) experimental validation of statistical findings.\n\n\n2.4.2 How a wet-lab biologist / clinician perceives the world\nExperiments, experiments, experiments: Carefully controlled—even if small—to make downstream analysis straightforward.\nCausality comes from a chain of experiments. Suppose we study a gene’s role in disease:\n\nTemporal evidence, such as change in gene expression preceding a change in cell phenotype. A causal mechanism should occur before the phenotype.\nBiological logic providing explanation of the underlying mechanism (binding factors, protein function, evolutionary rationale, etc.). For example, there must be a coherent pathway from gene → protein → phenotype.\nUniversality of how the described association persists across cell lines or organisms. A causal mechanism should be discoverable in other systems (extent depends on how general the logic is). This is offten the highlight of a biology paper.\nValidation, such as knocking out the gene alters the outcome, whereas similar genes do not. For example, perturbing the specific gene (not its close counterparts) changes the outcome.\n\nInquiry starts and ends with a biological hypothesis: Large intellectual effort goes into proposing explanations and designing experiments to rule them in or out.\nMindset: Assemble overwhelming evidence for a mechanism, combining careful experiments and biological logic.\nWhy wet-lab scientists need biostatisticians: Data are now complex and plentiful; exhaustive experiments for every hypothesis are infeasible. Statistical methods can (i) account for data & biological complexity and (ii) prioritise hypotheses worth experimental investment.\n\nSo how does a biostatistician develop computational / statistical methods for cell biology?\n\n\nBiological context – What is the biological system and the “north-star” question? Which premises are accepted, which ones are to be tested, and why is it important to understand this mechanism better?\nTechnology, experiment, data – How are data collected and why did you choose this particular {technology, experiment, data} trio? What technical artefacts arise?\nBoundaries of current tools – Simple analyses first: what “breaks” in existing workflows? Is there preliminary evidence a new computational method would do better?\nStatistical model – What is the insight that a different computational method could interrogate the biology better? (Here the statistics training begins.)\nDevelop a method & show robustness – Robustness can be defined numerically (i.e., noise tolerance) or biologically (i.e., applicable across contexts/environments). Often, the biological question you study lacks a ground truth, so validity arguments lean on biological logic.\nUncover new / refined biology – Does the method advance our biological understanding? How confident are we that findings generalise beyond the original {technology, experiment, data} trio? (This is usually the crown-jewel of your computational biology paper – it’s not necessary your specific analyses, but the potential that your tool can be used on other biological studies beyond what you’ve demonstrated your method on.)\n\n\n\n\n\n\nEfron, Bradley, and Robert Tibshirani. 2002. “Empirical Bayes Methods and False Discovery Rates for Microarrays.” Genetic Epidemiology 23 (1): 70–86.\n\n\nGohil, Satyen H, J Bryan Iorgulescu, David A Braun, Derin B Keskin, and Kenneth J Livak. 2021. “Applying High-Dimensional Single-Cell Technologies to the Analysis of Cancer Immunotherapy.” Nature Reviews Clinical Oncology 18 (4): 244–56.\n\n\nGolub, Todd R, Donna K Slonim, Pablo Tamayo, Christine Huard, Michelle Gaasenbeek, Jill P Mesirov, Hilary Coller, et al. 1999. “Molecular Classification of Cancer: Class Discovery and Class Prediction by Gene Expression Monitoring.” Science 286 (5439): 531–37.\n\n\nHansson, Oskar, Kaj Blennow, Henrik Zetterberg, and Jeffrey Dage. 2023. “Blood Biomarkers for Alzheimer’s Disease in Clinical Practice and Trials.” Nature Aging 3 (5): 506–19.\n\n\nKepchia, Devin, Ling Huang, Richard Dargusch, Robert A Rissman, Maxim N Shokhirev, Wolfgang Fischer, and David Schubert. 2020. “Diverse Proteins Aggregate in Mild Cognitive Impairment and Alzheimer’s Disease Brain.” Alzheimer’s Research & Therapy 12: 1–20.\n\n\nLei, Yalan, Rong Tang, Jin Xu, Wei Wang, Bo Zhang, Jiang Liu, Xianjun Yu, and Si Shi. 2021. “Applications of Single-Cell Sequencing in Cancer Research: Progress and Perspectives.” Journal of Hematology & Oncology 14 (1): 91.\n\n\nSchaff, Dylan L, Aria J Fasse, Phoebe E White, Robert J Vander Velde, and Sydney M Shaffer. 2024. “Clonal Differences Underlie Variable Responses to Sequential and Prolonged Treatment.” Cell Systems 15 (3): 213–26.\n\n\nShalek, Alex K, and Mikael Benson. 2017. “Single-Cell Analyses to Tailor Treatments.” Science Translational Medicine 9 (408): eaan4730.\n\n\nSilva, Paulo FL da, and Björn Schumacher. 2021. “Principles of the Molecular and Cellular Mechanisms of Aging.” Journal of Investigative Dermatology 141 (4): 951–60.\n\n\nTeichmann, Sarah, and Mirjana Efremova. 2020. “Method of the Year 2019: Single-Cell Multimodal Omics.” Nature Methods 17 (1): 2020.\n\n\nTibshirani, Robert, Michael Saunders, Saharon Rosset, Ji Zhu, and Keith Knight. 2005. “Sparsity and Smoothness via the Fused Lasso.” Journal of the Royal Statistical Society Series B: Statistical Methodology 67 (1): 91–108.\n\n\nVerschoor, Chris P, Alina Lelic, Jonathan L Bramson, and Dawn ME Bowdish. 2015. “An Introduction to Automated Flow Cytometry Gating Tools and Their Implementation.” Frontiers in Immunology 6: 380.\n\n\nVon Bernhardi, Rommy, Laura Eugenı́n-von Bernhardi, and Jaime Eugenı́n. 2015. “Microglial Cell Dysregulation in Brain Aging and Neurodegeneration.” Frontiers in Aging Neuroscience 7: 124.\n\n\nWen, Lu, Guoqiang Li, Tao Huang, Wei Geng, Hao Pei, Jialiang Yang, Miao Zhu, et al. 2022. “Single-Cell Technologies: From Research to Application.” The Innovation 3 (6).\n\n\nZhou, Yi, Hongjun Song, and Guo-li Ming. 2024. “Genetics of Human Brain Development.” Nature Reviews Genetics 25 (1): 26–45.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "chapter2_sequencing.html",
    "href": "chapter2_sequencing.html",
    "title": "3  Single-cell sequencing",
    "section": "",
    "text": "3.1 The sparse count matrix and the negative binomial\nAt the heart of single-cell sequencing data lies the sparse count matrix, where rows represent genes, columns represent cells, and entries capture the number of sequencing reads (or molecules) detected for each gene in each cell. This matrix is typically sparse because most genes are not expressed in any given cell, leading to a prevalence of zeros. The data’s sparsity reflects both the biological reality of selective gene expression and technical limitations such as sequencing depth. To model the variability in these counts, the negative binomial distribution is often employed. This distribution accommodates overdispersion, where the observed variability in gene expression counts exceeds what would be expected under simpler models like the Poisson distribution. By accounting for both biological heterogeneity and technical noise, the negative binomial provides a robust framework for analyzing sparse single-cell data.\nLet \\(X \\in \\mathbb{R}^{n\\times p}\\) denote the single-cell data matrix with \\(n\\) cells (rows) and \\(p\\) features (columns). In a single-cell RNA-seq data matrix, the \\(p\\) features represent the \\(p\\) genes.\nHere are some basic statistics about these matrices (based mainly from my experience):\nBased on these observations, the negative binomial distribution is very commonly used.\nThe negative binomial (NB) distribution is a widely used model in single-cell RNA-seq analysis due to its ability to handle overdispersion, which is common in gene expression data. Overdispersion occurs when the variance of the data exceeds the mean, a phenomenon that cannot be captured by the Poisson distribution. The NB distribution introduces an additional parameter to model this extra variability, making it more flexible for single-cell data.\nLet us focus on the count for cell \\(i\\) and gene \\(j\\), i.e., the value \\(X_{ij}\\). The probability mass function (pmf) of the NB distribution for a random variable ( X_{ij} ) is given by:\n\\[\nP(X_{ij} = k) = \\binom{k + r_j - 1}{k} p_{ij}^r (1 - p_{ij})^k, \\quad k = 0, 1, 2, \\ldots\n\\tag{3.1}\\]\nwhere \\(r_j \\&gt; 0\\) is the dispersion (or “overdispersion”) parameter and \\(p\\_{ij} \\in (0, 1)\\) is the probability of success. This is the “standard” parameterization, mentioned in https://en.wikipedia.org/wiki/Negative_binomial_distribution. This specific parameterization is actually not very commonly used.\nAlternatively, the NB distribution is most commonly parameterized in terms of the mean \\(\\mu_{ij}\\) and the dispersion parameter \\(r_j\\), which is often preferred in single-cell analysis:\n\\[\n\\text{Mean: } \\mu_{ij}, \\quad \\text{Variance: } \\mu_{ij} + \\frac{\\mu_{ij}^2}{r_j} = \\mu_{ij}\\left(1 + \\frac{\\mu_{ij}}{r_j}\\right).\n\\tag{3.2}\\]\n(Compare these relations to the Poisson distribution, where both the mean and variance would be \\(\\mu_{ij}\\).)\nTo relate equation Equation 3.1 to Equation 3.2, observe that we can derive,\n\\[\n\\mu_{ij} = \\frac{r_j (1 - p_{ij})}{p_{ij}}.\n\\]\nWe typically use a different overdispersion parameter \\(r_j\\) for each gene \\(j \\in \\{1,\\ldots,p\\}\\). Here, \\(r_j\\) controls the degree of overdispersion. When \\(r_j \\to \\infty\\), the variance approaches the mean, and the NB distribution converges to the Poisson distribution. For single-cell RNA-seq data, the introduction of \\(r_j\\) allows the model to capture both the biological variability between cells and technical noise, making it robust to the sparse and overdispersed nature of gene expression data.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Single-cell sequencing</span>"
    ]
  },
  {
    "objectID": "chapter2_sequencing.html#the-sparse-count-matrix-and-the-negative-binomial",
    "href": "chapter2_sequencing.html#the-sparse-count-matrix-and-the-negative-binomial",
    "title": "3  Single-cell sequencing",
    "section": "",
    "text": "For \\(n\\), we usually have 10,000 to 500,000 cells. These cells originate from a specific set of samples/donors/organisms1. See Figure 3.2 and Figure 3.3 for larger examples of single-cell datasets.\n\nFor \\(p\\), we usually have about 30,000 genes (but as you’ll see, we usually limit the analysis to 2000 to 5000 genes chosen from this full set).2\n\nIn a typical scRNA-seq matrix, more than 70% of the elements are exactly 0. (And among the remaining 30%, typically half are exactly 1. The maximum count can be in the hundreds, i.e., the distribution is extremely right-skewed.) This is illustrated in ?fig-count1 and ?fig-count2. We’ll see later in ?sec-scrnaseq_tech where these “counts” come from.\n\n\n\n\n\n\n\n\n\n\n\n\n\nIllustration of data from https://satijalab.org/seurat/articles/pbmc3k_tutorial.html showing a snippet of the count matrix (left) or percentage of cells with non-zero counts for each gene (right). (satijalab_tutorial?)\n\n\n\n\n\n\n\n\n\n\n\n\nWhy would genes even have different overdispersions? We’re assuming in most statistical models that: 1) genes are modeled as a negative binomial random variable, and 2) genes have different overdispersion parameters \\(r_j\\). Why is this reasonable? Is there a biomolecular reason for this?\nWe draw upon Sarkar and Stephens (2021), explaining how the NB distribution is justified (both theoretically and empirically) for scRNA-seq data. After reading this paper, you’ll see that the overdispersion originates from the “biological noise” (i.e., the Gamma distribution). This differs from gene to gene because gene expression is subject to many aspects: transcriptomic bursting, the proximity between the gene and the promoter, the mRNA stability and degradation, copy number variation, the cell cycle stage, etc.\n\n\n3.1.0.1 How do you estimate the overdispersion parameter in practice?\nThe easiest way is to use MASS::glm.nb in R. However, this is very noisy for single-cell data (see Remark 3.1). Since we are estimate one dispersion parameter per gene, many methods use an Empirical Bayes framework to “smooth” the overdispersion parameters (Love, Huber, and Anders 2014). More sophisticated methods (such as SCTransform (Hafemeister and Satija 2019)) use the Bioconductor R package called glmGamPoi. Deep-learning methods simply incorporate estimating the dispersion parameter into the architecture and objective function, see scVI (Lopez et al. 2018).\nAlso, note that which we are assuming here that the overdispersion parameter \\(r_j\\) is shared across all the cells for gene \\(j\\), there are methods that also use different overdispersion parameters for different cell populations. See Chen et al. (2018) or the dispersion parameter in scVI (see https://docs.scvi-tools.org/en/stable/api/reference/scvi.model.SCVI.html#scvi.model.SCVI). In general, using different overdispersion parameters for the same gene across different cell populations is not common, so my suggestion is to: 1) have a diagnostic in mind on how would you know if need to use different overdispersion parameters for the same gene, and then 2) try analyzing the genes where each gene only has one overdispersion parameter and see if you have enough concrete evidence that such a model was too simplistic.\n\nPersonal opinion: My preferred parameterization The formulation Equation 3.2 by far is the most common way people write the NB distribution. We typically call \\(r_j\\) the “overdispersion” parameter, since the inclusion of \\(r_j\\) in our modeling is typically to denote that there is more variance than a Poisson. I personally don’t like it because I find it confusing that a larger \\(r_j\\) denotes a distribution with smaller variance. Hence, I usually write the variance as \\(\\mu_{ij}(1+\\alpha_j \\mu_{ij})\\) (where \\(\\alpha_j = 1/r_j\\)). This way, \\(\\alpha_j = 0\\) is a Poisson distribution. However, even though this makes more sense to me, it’s not commonly used. (It’s because this parameterization makes it confusing to work with the exponential-family distributions mathematically.)\nThe main takeaway is to always pay close attention to each paper’s NB parameterization. You’re looking for the mean-variance relation written somewhere in the paper to ensure you understand the author’s notation.\n\n\nRemark 3.1. What makes the negative binomial tricky Let me use an analogy that is based on the more familiar coin toss. Suppose 30 people each are given a weighted coin where the probability of heads is \\(10^{-9}\\) (basically, it’s impossible to get a heads). Everyone coerce and agree to a secret number \\(N\\), and everyone independently flips their own coin \\(N\\) times and records the number of heads. I (the moderator) do not know \\(N\\), but I get to see how many heads each person got during this experiment. My goal is to estimate \\(N\\). What makes this problem very difficult?\nIf \\(N\\) were 10, or 100, or maybe even 10,000, almost everyone would get 0 heads. That is, we cannot reliably estimate \\(N\\) since the log-likelihood function is very flat. The issue is because count data has a finite resolution — 0 is always the smallest possible value, and 1 is always the second smallest value. Hence, unlike continuous values (which have “infinite resolution” in some sense), non-negative integers “lose” information the smaller the range is.\n\nReturning the negative binomials, consider a simple coding example:\n\nset.seed(10)\nmu &lt;- 1\ntrue_overdispersion &lt;- 1000\ntrue_size &lt;- mu / (true_overdispersion - 1)\ndata &lt;- stats::rnbinom(1e5, size = true_size, mu = mu)\noverdispersion_vec &lt;- exp(seq(log(1), log(1e7), length.out = 100))\nlog_likelihood &lt;- sapply(overdispersion_vec, function(overdispersion) {\n  size &lt;- mu / (overdispersion - 1)\n  sum(dnbinom(data, size = size, mu = mu, log = T))\n})\nhist(data,\n     main = paste(\"% 0:\", round(length(which(data == 0)) / length(data) * 100, 2),\n                  \"\\nEmpirical mean:\", round(mean(data), 2),\n                  \"\\nEmpirical variance:\", round(var(data), 2))\n)\nhist(data[data != 0])\nplot(log10(overdispersion_vec), log_likelihood)\nplot(log10(overdispersion_vec[-c(1:5)]), log_likelihood[-c(1:5)])\n\n\n\n\n\n\n\n\nFigure 3.1: (Left) Histogram of a dataset where the true mean is 1 and the overdispersion (i.e., \\(\\alpha = 1/r\\)) is 1000, where almost all the values are 0. Almost 100% of the values are 0 among all 10,000 samples. (Right) The log-likelihood of the overdispersion parameter on the \\(\\log_{10}\\) scale.\n\n\n\n\n\n\n3.1.1 Remembering that these cells come from donors/tissues!\nThe \\(n\\) cells in our single-cell dataset originate from \\(m\\) tissues/samples/donors/etc. That is, the cells are stratified (or hierarchically organized). Based on your scientific question of interest, this is a consideration you might want your analysis to take into account. In general, each of the \\(n\\) cells in your single-cell dataset will have “metadata” (such as which sample the cell came from). See Figure 3.2 and Figure 3.3 as examples. We will see in Section 4.4.12 on how some methods explicitly take into account this “hierarchical” structure of the data. However, most methods that are intended for cell lines or genetically-controlled scenarios do not focus on this hierarchical structure (since all the cell-lines or organisms are nearly identical).\n\n\n\n\n\n\n\nFigure 3.2: 982 individuals, from which roughly 1200 cells were sequenced from each (from the blood) to give rise to roughly \\(n=1.27\\) million cells. (Yazar et al. 2022)\n\n\n\n\n\n\n\n\n\n\n\nFigure 3.3: 1,223 zebrafish embryos, from which roughly 500 cells were sequenced from each to give rise to roughly \\(n=1.25\\) million cells. (Saunders et al. 2023)\n\n\n\n\nTypically, you can expect that the cells in a single-cell analysis come from one of three categories:\n\nCell-lines (In vitro): Cells grown in controlled laboratory conditions, such as HeLa or HEK293, typically on a petri dish, are commonly used for experiments requiring consistency and ease of manipulation. These cells are ideal for studying specific pathways or drug responses in a simplified system.\nModel organisms (In vivo): Cells derived from model organisms (such as zebrafish, genetically engineered mice, yeast, specific plants, etc.) allow researchers to study conserved biological processes in a controlled, organismal context. These systems often provide genetic and developmental insights that are directly relevant to human biology.\nHumans (In vivo): Cells from human tissues or blood samples provide direct insights into human biology, disease mechanisms, and patient-specific variability. They are often used in translational research to bridge findings from cell lines and model organisms to clinical applications.\n\nOther categories, such as xenografts, organoids, and co-culture systems, also play critical roles in capturing specific aspects of cellular behavior and interactions.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Single-cell sequencing</span>"
    ]
  },
  {
    "objectID": "chapter2_sequencing.html#the-role-of-normalization-to-adjust-for-sequencing-depth",
    "href": "chapter2_sequencing.html#the-role-of-normalization-to-adjust-for-sequencing-depth",
    "title": "3  Single-cell sequencing",
    "section": "3.2 The role of normalization to adjust for sequencing depth",
    "text": "3.2 The role of normalization to adjust for sequencing depth\nNormalization is a critical step in the analysis of single-cell sequencing data, addressing the technical variability introduced by differences in sequencing depth across cells. Sequencing depth refers to the total number of reads obtained for each cell, which can vary due to technical factors like library preparation or instrument sensitivity. Without normalization, cells with higher sequencing depth might appear to express more genes simply because of greater read coverage, not biological differences. Normalization methods aim to make gene expression counts comparable across cells by adjusting for these differences, ensuring that downstream analyses reflect true biological variation rather than technical artifacts. This step is foundational for accurate clustering, differential expression analysis, and other interpretative tasks in single-cell studies.\nIt has been known for a long time that when dealing with count data, proper normalization is foundational to properly doing meaningful inference. See (Risso et al. 2014). As we will see in Chapter 3, sequencing technologies cannot control how many reads (i.e., “counts”) are sequenced from each cell – this depends on the biochemistry efficency. Also, larger cells typically have more reads (which is itself a confounder) (Maden et al. 2023). We will describe normalization in more detail in Section 3.3.6.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Single-cell sequencing</span>"
    ]
  },
  {
    "objectID": "chapter2_sequencing.html#the-typical-workflow-for-any-sc-seq-data",
    "href": "chapter2_sequencing.html#the-typical-workflow-for-any-sc-seq-data",
    "title": "3  Single-cell sequencing",
    "section": "3.3 The typical workflow for any sc-seq data",
    "text": "3.3 The typical workflow for any sc-seq data\nWe will now describe the common steps at the start of a single-cell sequencing computational workflow (i.e., the steps that happen after the data has been collected and been aggregated into a matrix). More details about the downstream steps will be discussed in detail in Chapter 3. See (Luecken and Theis 2019; Heumos et al. 2023) for fantastic tutorials on best practices (among many). I’ll like to plug my own paper about best practices (Prater and Lin 2024).\n\n\n\n\n\n\n\nFigure 3.4: Abridged and typical workflow of a sc-seq dataset. (Luecken and Theis 2019)\n\n\n\n\nFor additional reference: See https://www.sc-best-practices.org/ and https://www.bigbioinformatics.org/intro-to-scrnaseq.\n\n3.3.1 (Optional) Ambient reads\n(This step will make more sense once you know a bit about how scRNA-seq data is generated, see Chapter 3.)\nAmbient reads and doublets (see Figure 3.5) are common technical artifacts in single-cell sequencing data that can distort biological interpretations if left unaddressed. Ambient reads arise from background RNA that is captured during sequencing but does not originate from the cell being analyzed. These reads can falsely inflate gene expression levels, particularly for highly abundant transcripts. Detecting and mitigating these artifacts is an optional but valuable step in data preprocessing, as it improves the overall quality and biological relevance of downstream analyses.\n\n\n\n\n\n\n\nFigure 3.5: Cartoon illustrating either ambient RNA or doublets. From https://www.10xgenomics.com/analysis-guides/introduction-to-ambient-rna-correction.\n\n\n\n\n\nInput/Output. The input to ambient detection is a count matrix \\(X\\in \\mathbb{Z}_+^{n\\times p}\\) for \\(n\\) cells and \\(p\\) features (i.e., genes), and the output is \\(X'\\in \\mathbb{Z}_+^{n'\\times p}\\) where \\(X'_{ij} \\leq X_{ij}\\) for all cell \\(i\\) and feature \\(j\\).\n\n\n\n3.3.2 How to do this in practice\nThis is not always done in a standard analysis of 10x scRNA-seq data because the CellRanger pipeline does a pretty good job for you already by default. However, for certain finicky biological systems that deviate from the norm, you might purposely not use CellRanger’s default ambient detection and doublet detection, and instead choose to manually perform your own so that you have more control. In that case, the main ambient RNA detection method I’ve seen used is SoupX (Young and Behjati 2020).\n\n\n3.3.3 Cell filtering (or doublet detection)\nCell filtering is a crucial preprocessing step in single-cell sequencing analysis, aimed at removing low-quality or irrelevant cells to ensure reliable downstream analyses. During the sequencing process, some cells may produce insufficient data due to poor capture efficiency, leading to low gene counts or incomplete profiles. Additionally, some “cells” may actually be empty droplets or doublets. Doublets occur when two cells are captured together in the same droplet or well, leading to mixed gene expression profiles that do not represent any single cell. Filtering typically involves setting thresholds on metrics like the total number of detected genes, the fraction of mitochondrial gene reads (a marker of stressed or dying cells), and overall sequencing depth. By carefully selecting cells that meet quality standards, researchers can reduce noise, improve the robustness of analyses, and focus on biologically meaningful signals. This step helps ensure that the dataset represents a true and interpretable snapshot of cellular diversity.\n(Typically, ambient RNA means you’re trying to subtract “background” counts from your scRNA-seq matrix. The number of cells remains the same. In contrast, cell filtering is removing cells, typically geared to target cells deemed to be empty droplets or doublets.)\n\nInput/Output. The input to cell filtering is a count matrix \\(X\\in \\mathbb{Z}_+^{n\\times p}\\) for \\(n\\) cells and \\(p\\) genes, and the output is \\(X'\\in \\mathbb{Z}_+^{n'\\times p}\\) where \\(n' \\leq n\\), whose rows are a strict subset of those in \\(X\\).\n\n\n\n3.3.4 How to do this in practice\nThis is commonly using the subset function in R, where we commonly filter based on nFeature_RNA (i.e., the number of genes that are expressed in a cell) and percent.mt (i.e., the fraction of counts that are originating from mitochondrial genes). The latter is usually computed using Seurat::PercentageFeatureSet3. See Figure 3.6 for an illustration. There is no commonly used threshold for these filters, but it typically depends on removing the extreme quantiles in your dataset. If this simple filter isn’t sophisticated enough to detect doublets (and you have good biological/technical reasons to suspect doublets, typically due to either the cell isolation or droplet formulation step), the doublet detection method I’ve seen used is DoubletFinder (McGinnis, Murrow, and Gartner 2019).\nNote: In Seurat, the cells are denoted as columns and features (such as genes) as rows. This is the transpose of the typical statistical notation.\n\n\n\n\n\n\n\nFigure 3.6: The filtering in the Seurat tutorial dataset goes from 2700 cells to 2638 cells. See the tutorial in https://satijalab.org/seurat/articles/pbmc3k_tutorial.html.\n\n\n\n\nWe usually filter based on nFeature_RNA because cells with too few genes are potentially deemed as empty droplets, and cells with too many genes are potentially deemed as doublets. High percentage of gene expression from mitochondrial genes is typically an indicator of poor sample quality4.\n\n\n3.3.5 A brief note on other approaches\nSee (Xi and Li 2021) for a benchmarking of doublet detection methods.\n\n\n3.3.6 Normalization\nNormalization is a key step in single-cell sequencing analysis, designed to adjust raw data so that gene expression measurements are comparable across cells. Variability in sequencing depth and technical artifacts can cause discrepancies in the total number of reads captured per cell, making raw counts unsuitable for direct comparison. Normalization methods address this by scaling or transforming the data to account for these differences, ensuring that observed expression levels more accurately reflect true biological variation. Approaches can range from simple scaling based on total counts to more sophisticated strategies that model the underlying distribution of the data. Normalization not only improves the accuracy of downstream analyses, such as clustering and differential expression, but also enhances the interpretability of results by reducing technical noise.\nTypically, the normalization has the following form:\n\\[\nX_{ij} \\leftarrow \\log\\Big(\\frac{10,000 \\cdot X_{ij}}{\\sum_{j'=1}^{p}X_{ij'}}+1\n\\Big).\n\\tag{3.3}\\]\nThe fraction \\(X_{ij}/\\sum_{j'=1}^{p}X_{ij'}\\) allows us to model the relative proportions (instead of absolute counts) of gene expression in each cell. The \\(\\log(\\cdot)\\) is to handle the right-skewed nature of the data (since an entry of \\(X_{ij}\\) is still 0 even after computing the fraction, and taking a fraction doesn’t adjust for the skewed nature by itself). The \\(+1\\) is handle the fact that we cannot take \\(\\log(0)\\). The only arbitrary thing in the factor of 10,000 – it’s simply for convenience to scale all the values (remember, \\(\\log(AB) = \\log(A) + \\log(B)\\), so essentially, this normalization is shifting all the fractions up by \\(\\log(10,000)\\)). The number of 10,000 (or sometimes 1 million) became commonplace because we can now interpret the number \\(10,000 \\cdot (X_{ij}/\\sum_{j'=1}^{p}X_{ij'})\\) as the hypothetical number of counts we would’ve gotten in cell \\(i\\) for gene \\(j\\) if the sequencing depth of cell \\(i\\) were 10,000.\n\n\n3.3.7 How to do this in practice\nSee the Seurat::LogNormalize function, illustrated in Figure 3.7.\n\n\n\n\n\n\n\nFigure 3.7: The normalization step in the Seurat tutorial. See the tutorial in https://satijalab.org/seurat/articles/pbmc3k_tutorial.html.\n\n\n\n\n\nInput/Output. The input to normalization is a count matrix \\(X\\in \\mathbb{Z}_+^{n\\times p}\\) for \\(n\\) cells and \\(p\\) features (i.e., genes), and the output is \\(X'\\in \\mathbb{R}^{n\\times p}\\).\n\n\n\n3.3.8 A brief note on other approaches\nThere’s actually a lot of normalization methods since normalizing count data has existed ever since bulk-sequencing. However, three notable mentions are: SCTransform (Hafemeister and Satija 2019) which uses a NB GLM model to normalize data and GLM-PCA (Townes et al. 2019) which uses a GLM matrix factorization to adjust for sequencing depth, where both methods use adjust using the observed sequencing depth for each cell. Deep-learning methods like scVI (Lopez et al. 2018) include the library size as a latent variable to be estimated itself. See (Lause, Berens, and Kobak 2021; Ahlmann-Eltze and Huber 2023) for benchmarkings.\n\nRemark (Personal opinion: The log-transformation and lack of the negative binomial). It is well documented that this log-normalization is not best – see (Townes et al. 2019) and (Hafemeister and Satija 2019) for in-depth discussions. The issues stem from “discrete-ness” of the log transformation. However, surprisingly, as shown in papers such as (Ahlmann-Eltze and Huber 2023), the log-transformation is actually quite robust.\n\n\n\n3.3.9 Feature selection\nFeature selection is a critical step in single-cell sequencing analysis that focuses on identifying the most informative genes for downstream analyses. Single-cell datasets often include thousands of genes, many of which may be uninformative due to low variability or consistent expression across all cells. By narrowing the focus to a subset of highly variable genes (HVGs), feature selection reduces noise, enhances computational efficiency, and highlights the genes most likely to drive biological differences. These selected features are used in clustering, dimensionality reduction, and other tasks where capturing meaningful variation is essential. Effective feature selection ensures that the resulting analyses are both interpretable and biologically relevant.\n\nInput/Output. The input to feature selection is a count matrix \\(X\\in \\mathbb{Z}_+^{n\\times p}\\) for \\(n\\) cells and \\(p\\) features (i.e., genes)5, and the output is \\(X'\\in \\mathbb{R}^{n\\times p'}\\) where \\(p' \\leq p\\), whose columns are a strict subset of those in \\(X\\).\n\n\n\n3.3.10 The standard procedure: Variance Stabilizing Transformation\nThe vst (variance stabilizing transformation) procedure is a commonly used method in single-cell RNA-seq analysis for identifying highly variable genes. It is designed to account for the relationship between a gene’s mean expression and its variability, ensuring that variability is measured in a way that is independent of mean expression levels. The procedure involves the following steps:\n\nFitting the Mean-Variance Relationship:\n\nFirst, the relationship between the log-transformed variance and log-transformed mean of gene expression values is modeled using local polynomial regression, commonly referred to as loess. This step captures the expected variance for a given mean expression level. Let \\(\\mu_j\\) denote the mean expression of gene \\(j\\) and \\(\\sigma_j^2\\) its variance. The loess fit provides the expected variance, \\(\\hat{\\sigma}_j^2\\), as a smooth function of \\(\\log(\\mu_j)\\).\n\nStandardizing Gene Expression Values:\n\nThe observed expression values for each gene are then standardized to account for the expected variance: \\[\nZ_{ij} = \\frac{X_{ij} - \\mu_j}{\\sqrt{\\hat{\\sigma}_j^2}},\n\\] where \\(X_{ij}\\) is the observed expression value for gene \\(j\\) in cell \\(i\\), \\(\\mu_j\\) is the observed mean for gene \\(j\\), and \\(\\hat{\\sigma}_j^2\\) is the expected variance given by the fitted loess line. This standardization ensures that variability is measured relative to what is expected for genes with similar mean expression levels.\n\nClipping and Variance Calculation: To prevent outliers from dominating the analysis, the standardized values \\(Z_{ij}\\) are clipped to a maximum value, determined by a parameter such as clip.max. The variance of each gene is then calculated based on the clipped standardized values. Genes with the highest variance are selected as highly variable and prioritized for downstream analyses, such as clustering and trajectory inference.\n\nThis procedure addresses the inherent bias where genes with higher mean expression tend to exhibit greater variance, even if this variance is not biologically meaningful. By standardizing variability against the expected mean-variance relationship, the vst method provides a robust approach to identifying genes that truly capture biological heterogeneity across cells.\n\nRemark (Feature selection, agnostic of the rest of the analysis). For the statistical students, feature selection might seem a bit odd. After all, we’re selecting the genes to use in our analysis (again, typically about 2000 genes among 30,000 genes) before we do any other modeling. This is unlike the Lasso, where the feature selection is done while we’re doing a downstream task (i.e., regression in this case).\nIn a scRNA-seq analysis, we typically use the HVGs upfront, and use only these genes for all remaining downstream analyses. This is mainly for pragmatic reasons – most genes are 0’s in almost all the cells, so there’s no need to involve these genes in any of our downstream analysis.\n\n\n\n3.3.11 How to do this in practice\nSee the Seurat::FindVariableFeatures function, illustrated in Figure 3.8.\n\n\n\n\n\n\n\nFigure 3.8: The feature selection step in the Seurat tutorial, which selects the highly variable 2000 genes (from the 13,714 genes sequenced). See the tutorial in https://satijalab.org/seurat/articles/pbmc3k_tutorial.html.\n\n\n\n\n\n\n3.3.12 A brief note on other approaches\nSee (Zhao et al. 2024) for an overview of feature selection methods. This is a interesting statistical modeling question in the sense that the goal for these methods is often how to distinguish between “technical variance” (i.e., variation attributed to sequencing depth) from “biological variance” (i.e., if a gene has different expressions across cells in the tissue).\n\n\n3.3.13 (Optional) Imputation\nImputation refers to methods used to infer missing or undetected values in single-cell sequencing data, particularly addressing the zeros that dominate scRNA-seq datasets. Early in the development of single-cell technologies, these zeros were often attributed to “dropouts,” where lowly expressed genes failed to be captured due to technical limitations. Zero-inflated models were developed to distinguish between “true” biological zeros – where a gene is genuinely not expressed – and dropout zeros, filling in the latter to provide a more complete representation of gene expression. However, with advancements like unique molecular identifiers (UMIs), scRNA-seq data have become more reliable and less prone to dropout artifacts. As a result, the need for imputation has diminished, and modern workflows often bypass it entirely, favoring raw or minimally processed data that more accurately reflect true biological variation. Imputation remains an optional step, typically reserved for specific analyses where reconstructing missing data is critical. See (Hou et al. 2020) for a review of many methods in this category.\nSee (Kharchenko, Silberstein, and Scadden 2014) for the landmark paper that originally discussed dropouts. However, see Remark 4.2 for why these “dropouts” are no longer common to worry about in your single-cell analysis.\n\n\n3.3.14 How to do this in practice\nI’ve see MAGIC (Markov Affinity-based Graph Imputation of Cells) (Van Dijk et al. 2018) used quite often, if there’s a data imputation being performed. This method imputes missing gene expression values by leveraging similarities among cells using a graph-based approach. MAGIC constructs a nearest-neighbor graph where cells are nodes, and edges represent biological similarity. Through data diffusion, information is shared across similar cells to denoise and recover underlying gene expression patterns. See Figure 3.9.\n\n\n\n\n\n\n\nFigure 3.9: Schematic of the MAGIC method (Van Dijk et al. 2018).\n\n\n\n\n\n\n3.3.15 Dimension reduction\nDimension reduction, particularly methods like Principal Component Analysis (PCA) and Singular Value Decomposition (SVD), serves as a cornerstone in single-cell sequencing analysis. The primary goal is twofold: first, to obtain a low-dimensional representation of the data, which is critical for visualizing complex datasets and enabling computationally efficient downstream analyses such as clustering and trajectory inference. By condensing thousands of genes into a smaller number of principal components, researchers can focus on the dominant patterns of variation that drive biological differences. Second, dimension reduction helps denoise the data by filtering out technical noise and minor variations that are less biologically relevant. This makes the resulting analysis more robust and interpretable, allowing researchers to capture meaningful cellular heterogeneity while mitigating the impact of sparsity and noise inherent to single-cell datasets.\n\nInput/Output. The input to dimension reduction is a matrix \\(X\\in \\mathbb{R}^{n\\times p}\\) for \\(n\\) cells and \\(p\\) features (i.e., genes). The output is \\(Z \\in \\mathbb{R}^{n\\times k}\\) where \\(k \\ll p\\) (where there are \\(k\\) latent dimensions, typically between 5 to 50). We call \\(Z\\) the score matrix. Most dimension reduction (typically only linear ones – i.e., ones based on a matrix factorization) also return: (1) gene loading matrix \\(W \\in \\mathbb{R}^{p \\times k}\\), and (2) “denoised” matrix \\(X'\\in \\mathbb{R}^{n\\times p}\\), which is some form of \\(X' = ZW^\\top\\).\n\n\n\n3.3.16 The standard procedure: PCA\nPrincipal Component Analysis (PCA) is a dimensionality reduction technique widely used in single-cell RNA-seq analysis to simplify complex datasets while retaining the most important patterns of variation. By transforming high-dimensional gene expression data into a smaller set of principal components, PCA captures the dominant trends in the data, such as differences between cell types or states. This reduced representation helps to mitigate the noise and sparsity inherent in single-cell data, making downstream tasks like clustering, trajectory inference, and visualization more efficient and interpretable. PCA serves as a foundational step in many single-cell workflows, offering both computational efficiency and biological insight.\n\n\n\n\n\n\n\nFigure 3.10: Illustration of the PCA of a \\(p=2\\)-dimensional dataset reduced to one dimension (\\(K=1\\)). (Left) Showing the maximization or minimization perspective of PCA.\n\n\n\n\n\n\n\n\n\n\n\nFigure 3.11: Showing how to interpret PCA as a matrix approximation. Here, the “component” is \\(\\hat{W}\\), and the “loading” is \\(\\hat{Z}=X\\hat{W}\\).\n\n\n\n\nI’ll describe the PCA in a bit more detail here since it’s can be a bit confusing.\n\nTheorem (Equivalent formulations of PCA). Let \\(X \\in \\mathbb{R}^{n\\times p}\\) be a centered matrix ( i.e., \\(\\overline{X}_{\\cdot j} = 0\\) for all \\(j\\in\\{1,\\ldots,p\\}\\)) and \\(K\\) be a pre-chosen latent dimensionality (such that \\(k \\ll p\\)). Let \\(\\hat{\\Sigma} = X^\\top X/n\\) denote the empircial covariance matrix.\nThe following four estimated embeddings \\(\\hat{Z} \\in \\mathbb{R}^{n\\times k}\\) are “equivalent.”\n\nMaximization of information captured by the covariance (shown in Figure 3.10 (left)): Define \\(\\hat{Z} = X\\hat{W}\\) where \\[\n\\hat{W} = \\argmax_{W \\in \\mathbb{R}^{p\\times K}}\\tr\\Big(W^\\top \\hat{\\Sigma} W\\Big),\n\\quad \\text{such that} \\quad W^\\top W = I_K.\n\\tag{3.4}\\]\nMinimization of reconstruction error (via squared Euclidean loss) (shown in Figure 3.10 (left)): Define \\(\\hat{Z} = X \\hat{W}\\) where \\[\n\\hat{W} = \\argmin_{W \\in \\mathbb{R}^{p\\times K}}\\frac{1}{n}\\sum_{i=1}^{n}\\Big\\|X_{i\\cdot} - WW^\\top X_{i\\cdot}\\Big\\|^2_F\n\\quad \\text{such that} \\quad W^\\top W = I_K.\n\\tag{3.5}\\]\nLow-rank approximation of the interpoint distances (via squared Euclidean distances): Let \\(D_X \\in \\mathbb{R}^{n\\times n}_+\\) denote the matrix of squared Euclidean distances among all \\(n\\) samples in \\(X\\), i.e., \\([D_X]_{i_1,i_2} = \\|X_{i_1,\\cdot} - X_{i_2,\\cdot}\\|^2_F\\) for all \\(i_1,i_2 \\in \\{1,\\ldots,n\\}\\). (This is a function of \\(X\\).) Then, construct \\(\\hat{Z}=X\\hat{W}\\) where \\[\n\\hat{W} = \\argmin_{W \\in \\mathbb{R}^{p\\times K}} \\sum_{i_1,i_2 \\in \\{1,\\ldots,n\\}}  \\big[D_X\\big]_{i_1,i_2} - \\big[D_{XW}\\big]_{i_1,i_2} \\quad \\text{such that} \\quad W^\\top W = I_K,\n\\tag{3.6}\\] and \\(D_{XW}  \\in \\mathbb{R}^{n\\times n}_+\\) is the matrix of squared Euclidean distances constructed from \\(XW\\).\n\n\nNotice that Formulation #3 is simply the sum of differences (not squared) since projections are non-expansive, so the interpoint Euclidean distances necessarily decrease. We are not accurately describing the identifiability conditions above to formalize what “equivalence” technically means.\nSome remarks:\n\nRelation to eigen-decompositions: PCA is fundamentally tied to eigen-decompositions due to the Low-Rank Approximation theorem6 (more formally, the Eckart-Young-Mirsky theorem). Specifically, \\(\\hat{W}\\) is the eigenvalues of \\(\\hat{\\Sigma}\\), the covariance matrix. See Figure 3.11 (right).\n\n(If you are familiar with how to manipulate eigen-decompositions, you can convince yourself that Formulation 2 is most directly related to the Low-Rank Approximation.)\n\nInterpretation of Formulation #1: In Formulation 1, we want to project the data \\(X\\) onto a lower-dimensional subspace defined by \\(\\hat{W}\\) such the low-dimensional data \\(\\hat{Z}\\) has as much variance as possible. This is by far the most common explanation of PCA. Part of its appeal is that it’s easy to explain what the “population model’s target quantity” is through this interpretation, but 1) it requires you to intrinsically understand why preserving covariance is something useful when we’re more interested in about the cells themselves, and 2) does not give insight to the more popular extensions of PCA.\n\nAdjustable aspects to obtain other dimension-reduction methods: 1) Choosing a more suitable estimate of the population covariance \\(\\Sigma = \\mathbb{E}[X^\\top X]/n\\) (or its correlation counterpart), or 2) enforcing additional structure (such as sparsity) onto the columns of \\(\\hat{W}\\).\n\nInterpretation of Formulation #2: In Formulation 2, we want to project the data \\(X\\) onto a lower-dimensional subspace defined by \\(\\hat{W}\\) such that the ambient-dimensional data is as close to the original data as possible (i.e., the projection “disturbs” the data the least). This interpretation reveals that PCA is trying to find the subspace that “distorts” each cell’s expression the least. While this won’t be used to motivate more modern embedding methods, it 1) offers a formal relation between PCA and matrix denoising, and 2) is the motivation for autoencoders later on.\n\nAdjustable aspects to obtain other dimension-reduction methods: 1) How to measure the “error” between each cell’s expression and its reconstructed expression, 2) how this reconstruction is constructed given a cell’s low-dimensional representation?\n\nInterpretation of Formulation #3: In Formulation 3, we conceptually think about the cells’ interpoint distances (i.e., the distances between any two pairs of cells). Then, we want to project the data \\(X\\) onto a lower-dimensional subspace defined by \\(\\hat{W}\\) such the low-dimensional data \\(\\hat{Z}\\) preserves the distances between any two pairs of cells as much as possible. This perspective is perhaps the most intuitive, and also most revealing on the shortcomings of PCA. PCA is choosing to preserve the pairwise distances in a very specific fashion, via the squared Euclidean distances. There are a two aspects that reveal the deficiency of PCA:\n\n\nPCA is trying to preserve the squared Euclidean distance, so it’s going to put most of its attention on pairs of points that are very far away from one another.\nWe consider all pairs of points.\n\nThese two aspects combined yield the qualitative statement that “PCA favors a global embedding that preserve far-away points”.7 In some sense, this is the exact opposite of what we want – qualitatively, we probably care more about getting the relative distances of each points and its immediate/local neighbors (so we can accurately see the subtle shifts in cells, as in trajectory inference).\nAdjustable aspects to obtain other dimension-reduction methods: 1) How we’re measuring distance in \\(X\\) or in \\(Z\\) we’re using (perhaps using a distance that adapts to the geometry of the data), 2) how to measure the “distortion” in the pairwise distances, 3) which pairs of cells do we care about preserving their distances?\n\nReferences for the proofs: Relating one and two is mainly an exercise in matrix algebra. To show that Formulation #3 is also PCA, see Theorem 14.4.1 in (Kent, Bibby, and Mardia 1979).\n\n\nRemark (The words we use to call the columns of \\(\\hat{W}\\) after doing a linear-dimension reduction method like PCA). Note that \\(\\hat{W}\\) is a \\(p\\)-by-\\(K\\) matrix. That is, each column of \\(\\hat{W}\\) has one number for each feature (i.e., gene). We typically call each column one of a few things: “gene program” or “pathway” (both more biology-facing) or “eigen-gene” or “topic” (both more statistics-facing). Regardless, these words is to denote that each column of \\(\\hat{W}\\) denotes a set of genes that work together, based on the magnitude and sign that feature has in this column.\n\n\n\n3.3.17 How to do this in practice\nSee the Seurat::RunPCA function, illustrated in Figure 3.12. The resulting visualization is shown in Figure 3.13.\n\n\n\n\n\n\n\nFigure 3.12: The PCA step. See the tutorial in https://satijalab.org/seurat/articles/pbmc3k_tutorial.html.\n\n\n\n\n\n\n\n\n\n\n\nFigure 3.13: Using the Seurat::DimPlot(pbmc, reduction = \"pca\") function to visualize the first two PCs. See the tutorial in https://satijalab.org/seurat/articles/pbmc3k_tutorial.html.\n\n\n\n\n\n\n3.3.18 A brief note on other approaches\nThe distinction between “imputation” and “dimension reduction” gets murky because 1) computationally, many imputation methods rely on a dimension reduction, and 2) statistically, due to the low-rank approximation property of PCA, you can interpret many dimension reductions methods as an imputation method. When I say that “imputation is optional,” what I really mean is that modeling zero-inflation is typically optional.\nReviews of imputation methods such as (Hou et al. 2020) contain overview of dimension-reduction methods. eSVD (Lin, Qiu, and Roeder 2024) and GLM-PCA (Townes et al. 2019) are dimension reduction methods that leverage the fact that the NB is in the exponential family (among many). FastTopics (Carbonetto et al. 2021) is a popular non-negative matrix factorization method (among many) for modeling single-cell data. (We won’t have time to discuss non-negative matrix factorization in this course.) All these mentioned methods are able to perform normalization with dimension reduction simultaneously. Also, dimension-reductions are commonly folded into a method that aims to do multiple tasks simultaneously (for example, see scINSIGHT (Qian et al. 2022), among many examples). See (Ghojogh et al. 2021) for a massive review of common dimension-reduction frameworks.\nHowever, by far the most popular method nowadays is using VAEs, since it is easy to combine dimension reduction with other downstream tasks. We’ll discuss VAEs in more detail in ?sec-vae.\n\nRemark (Personal opinion: Considerations for picking an appropriate dimension-reduction method). The categorizations of “linear” vs. “non-linear” is a bit blurry. Personally, I would call methods like eSVD (Lin, Qiu, and Roeder 2024) and GLM-PCA (Townes et al. 2019) as “linear” (in addition to PCA and fastTopics (Carbonetto et al. 2021)) since you estimate a matrix factorization and there’s a fixed transformation that relates the observed count \\(X_{ij}\\) to the inner product between a cell’s latent vector \\(Z_{i,\\cdot}\\) and a gene’s latent vector \\(W_{j,\\cdot}\\).\nTypically, people refer to non-linear dimension reductions as methods that do not use a matrix factorization (think of diffusion maps (Haghverdi, Buettner, and Theis 2015) or deep-learning methods (Lopez et al. 2018)). Since non-linear methods can capture more complex relations than linear methods, what are some considerations you should make to pick a particular method?\n\nMean-variance relation: PCA is intimately connected to modeling the data with constant Gaussian noise (i.e., every entry of \\(X_{ij}\\) is observed with the same amount of Gaussian error (Tipping and Bishop 1999). However, you might want to use a method where you expect the amount of variability in the data increases as the mean increases (such as a Poisson distribution). See (Lin, Qiu, and Roeder 2022) for more details.\nGene programs: Methods that do not use a matrix factorization often do not give you a built-in way to interpret collections of genes. In contrast, after using a matrix factorization approach like PCA, you can interpret how genes are coordinating through the estimated matrix \\(\\hat{W}\\).\n“Distance” between cells: As you saw in Formulation #3 Equation 3.6, PCA cares about the Euclidean distance between any two cells. Sometimes, such as in a diffusion map (see Palantir for instance (Setty et al. 2019)), you have in mind a more appropriate way to measure how “different” two cells are.\n\n(Notice that by itself, the fact that “non-linear methods can capture non-linear structure” is not really a good enough reason to use a non-linear method. This is because this statement itself is somewhat vacuous. By the low-rank approximation theorem (https://en.wikipedia.org/wiki/Low-rank_approximation), as long as you use enough latent dimensions, any linear method can also capture non-linear structures. The only advantage of non-linear methods in this setting is that the non-linear method can represent this non-linear structure with “less numbers” (i.e., an information-compression perspective).)\nIn general, there is never a “strictly better” option. Every reasonable method has its own niche on what kind of {technology, experiment, data, biological-question} setting it outshines other competitors. Your job as a thoughtful researcher is to: 1) understand the conceptual differences between all these methods, and 2) have a concrete strategy on how you would make an informed decision on which method you want to apply.\n\n\n\n3.3.19 Batch correction/Covariate adjustment\nBatch correction is a vital step in single-cell sequencing analysis that addresses technical variability introduced by differences in experimental conditions, such as processing time, reagent batches, or sequencing runs. These batch effects can obscure true biological signals and create artificial differences between groups of cells. Batch correction methods aim to align data from different batches while preserving meaningful biological variation. Techniques range from simple scaling adjustments to advanced algorithms that model batch effects explicitly. As single-cell studies increasingly combine datasets from multiple experiments or institutions, effective batch correction ensures that comparisons and integrative analyses reflect biological reality rather than technical artifacts. See ?fig-batch1 for an illustration of this.\nWe will talk about this a bit more when we discuss integration methods for cell-type labeling Section 4.6.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIllustration of what the goal of batch correction is. All these are UMAPs (see Section 3.3.23). The top row colors cells by their batch, and the bottom row colors cells by cell type. (Left) Original data showing batch effects. (Middle) Intermediate processing. (Right) The batch-corrected data. (Tran et al. 2020)\n\n\nInput/Output. The input to batch correction is (1) either the normalized matrix \\(X \\in \\mathbb{R}^{n\\times p}\\) or the score matrix \\(Z \\in \\mathbb{R}^{n\\times k}\\) and (2) an categorical vector \\(C \\in \\{1,\\ldots,B\\}^n\\) which denotes which cell belongs to which batch. (Certain batch correction methods might require more information.) In a literal sense, both \\(X\\) and \\(Z\\) are technically row-wise concatenations of many datasets.\n\nIf the input is a normalized matrix, the output is a batch-corrected normalized matrix \\(X'   \\in \\mathbb{R}^{n\\times p}\\). If the input is a score matrix \\(Z\\), the output is a batch-corrected score matrix \\(Z'   \\in \\mathbb{R}^{n\\times k}\\).\n\nRemark (What makes this task statistically possible?). There are many sources of “noise” (i.e., things unrelated to the biology we’re trying to study) in a single-cell dataset.\n\nSequencing noise: This comes from the fact that we “randomly” get counts from each cell, and we can’t control how effective each cell is at producing counts. We can think of this as “mean-zero, i.i.d. across all cells” in some sense.\nBatch noise: This is the “noise” that originates from a particular batch. It is probably more statistically appropriate to think of this as a “bias,” because it is not mean-zero. Instead, we conceptually think of this as a shift occurring to all the cells in a batch more-or-less uniformly (but could impact different genes differently).\nBiological confounding noise: Say you want to study how lung tissue changes during aging, but some of your tissue samples come from donors who smoke. The aging biological signature you’re hoping to find would likely be confounded by a smoking signature. This “noise” is also not mean-zero, and it could be different across different cell types. However, given a cell type, this biological confounding effect should be the same across batches. (The trouble is that you might not be aware of all the confounders during an analysis.)\n\nHence, it is possible to “remove” batch effects because: 1) it’s a constant “shift” for all the cells in the same batch, and 2) we always know the “batches,” since it is purely an artifact of how data is generated. Most batch-correction papers are statistically motivated, but do not have formal theoretical properties. This is primarily due to the fact that in practice, it’s very hard to know how to model a batch effect rigorously. However, there are a few papers that try to leverage this intuition formally in a statistical framework, see (Ma et al. 2024).\n\n\nRemark (The term “batch” is very overloaded). There are many steps during a single-cell analysis (see Chapter 3). These are some of the things a “batch” could refer to: 1) cells processed together during droplet/gem formation, 2) cells processed during during PCR amplification, 3) cells processed together during sequencing (this is most common usage of the word “batch”), 4) cells processed using different protocols, 5) cells processed by different labs, 6) cells of different donors/organisms, among many more. (The first three steps are similar in “resolution,” but the last three are more “coarse” in how a batch is defined.)\nTechnically, the statistical logic of most batch-correction methods isn’t suitable for trying to align cells from different donors/organisms since in this setting, the “batches” are based on biology, not a technical artifact. For example, the differences between cells from two donors could be much more complicated than simply cells in two different sequencing batches.\nIn general, be sure to discuss with the people who generated the data (who likely will have a lot more experience on what technical artifacts are worth worrying about) on how to think about batch effects.\n\n\n\n3.3.20 What’s the difference between “batch-correcting” and “adjusting for covariates”?\nTechnically, there are some batch-correction methods whose premise is to treat each batch as simply a covariate to be adjusted for. The primary example is COMBAT (Zhang, Parmigiani, and Johnson 2020). However, most batch-correction methods do not do this. There is no formal reason why. I personally feel it’s because batch effects is such a critical bottleneck for almost every single-cell analysis that it’s imperative to use a method that is as (sensibly) flexible as possible. See my remark later in Remark 3.2. See (Tran et al. 2020; Luecken et al. 2022) for benchmarking multiple batch correction methods.\n\n\n3.3.21 A typical choice: Harmony\nHarmony (Korsunsky et al. 2019) is one of the most commonly used methods to integrate single-cell datasets from different experiments, technologies, or biological conditions into a shared low-dimensional embedding. The method begins with a principal component analysis (PCA) embedding and iteratively adjusts it to remove batch effects while preserving biological variation. Harmony groups cells into clusters using soft clustering, which assigns cells probabilistically to multiple clusters. These clusters account for technical and biological differences while capturing shared cell types and states. Correction factors are then computed for each cluster and applied to individual cells, ensuring that the final embedding reflects intrinsic cellular phenotypes without being confounded by dataset-specific biases. See Figure 3.14.\n\n\n\n\n\n\n\nFigure 3.14: Schematic of the Harmony (Korsunsky et al. 2019).\n\n\n\n\n\n\n3.3.22 How to do this in practice\nThere is no standardize default for batch correction. The usual practice is to: 1) decide upfront (with your collaborators) on how you would deem what is a “successful” batch correction. This usually involves understanding the data generation protocol and the biology question of interest. This will involve a blend of biological logic (i.e., statements that should be true, given the biological context), qualitative evaluations (i.e., based on plots), and numerical metrics (i.e., based on some score where you decide upfront how the score relates to a desirable batch correction). Then, 2) you try many batch correction methods8.\n\nRemark 3.2. Remark (Personal opinion: Batch correction is single-handedly the most precarious step in almost every analysis). While a cautious statistician might be doubtful for “cherry-picking” a good batch-correction method, the reality is that there is no guaranteed procedure to always work. This is because there are so many types of “batches,” and the underlying data generation pipeline, technology, and biology differs from lab to lab. Also, doing a “bad” batch correction is extremely detrimental. Unlike many other steps in a single-cell analysis where most choices of how to perform a step are “reasonable” (but some methods might have slightly better power or slightly more robust), a bad batch correction can single-handedly invalidate almost all other aspects of a single-cell analysis regardless of how sophisticated those methods are.\nAlso: batch correction is limited by the experimental design. No “real” way to validate this if you’re only given datasets – the validations need to be decided during the planning of the experimental design. For example, if you are studying cancer, and you put all the cancer donors’ cells in one batch and all the healthy donors’ cells in another batch, then you have no ability to disentangle the batch effects from the biological effect.\nTo aid validation of batch correction, a common experimental design is to put one reference tissue (where it’s possible to obtain many samples from this one tissue) in every sequencing batch.\n\n\n\n3.3.23 Visualization\nVisualization is a key step in single-cell sequencing analysis, offering a way to explore and interpret complex datasets intuitively. One of the most popular visualization techniques is Uniform Manifold Approximation and Projection (UMAP), which creates a low-dimensional embedding designed to preserve local and global structure in the data. UMAP is particularly effective for capturing non-linear relationships and revealing clusters of similar cells, making it a powerful tool for visualizing cellular heterogeneity. However, UMAP coordinates are less reliable than those obtained through methods like PCA for quantitative analysis. Unlike PCA, which is grounded in linear transformations and retains a direct link to the original data, UMAP embeddings are highly dependent on parameter choices and random initializations, making them less reproducible. Despite these limitations, UMAP excels as a visualization tool, helping researchers intuitively explore relationships between cells and identify patterns that guide deeper analyses.\n\nInput/Output. The input to visualization is typically the score matrix \\(Z\\in \\mathbb{R}^{n\\times k}\\) for \\(n\\) cells and \\(k\\) latent dimensions, and the output is matrix with \\(n\\) cells and 2 (sometimes 3) columns, where the visualization is literally plotting the values in the first column against the second column as a scatterplot.\n\n\n\n3.3.24 The standard procedure: UMAP\nUniform Manifold Approximation and Projection (UMAP) (Becht et al. 2019) is a dimensionality reduction technique designed to capture both local and global structure in high-dimensional data. UMAP builds on principles of manifold learning, aiming to preserve the topology of the original data in a lower-dimensional space.\n\nConstructing the high-dimensional graph: UMAP begins by modeling the local neighborhood relationships in the high-dimensional space:\n\n\nFor each data point \\(i\\), a probability distribution \\(p_{ij}\\) is constructed over its neighbors \\(j\\) based on distances, typically using a kernel function.\nThe resulting graph captures the high-dimensional structure of the data.\n\n\nOptimizing the low-dimensional embedding: In the low-dimensional space, UMAP aims to construct a graph with similar relationships. It models pairwise probabilities \\(q_{ij}\\) for the low-dimensional embedding using a smooth, differentiable cost function: \\[\nC = \\sum_{i,j} \\left( - p_{ij} \\log q_{ij} - (1 - p_{ij}) \\log (1 - q_{ij}) \\right).\n\\] Here:\n\n\n\\(p_{ij}\\) and \\(q_{ij}\\) represent probabilities of connectivity in the high- and low-dimensional spaces, respectively.\nThe first term encourages similar points in the high-dimensional space to remain close, while the second term discourages unrelated points from being artificially clustered.\n\n\nGradient descent: The low-dimensional coordinates are iteratively optimized using gradient descent to minimize \\(C\\), aligning the local relationships in the low-dimensional embedding with those in the original space.\n\nUMAP excels at preserving local neighborhoods while maintaining some global structure, making it particularly effective for visualizing high-dimensional single-cell RNA-seq data. However, the resulting embeddings depend on hyperparameters (e.g., number of neighbors, minimum distance) and are not designed for quantitative analysis, as they do not preserve metric properties of the original data. See https://github.com/jlmelville/uwot for great in-depth discussions on UMAPs.\n\nRemark (Yes, UMAPs are also a “dimension reduction,” but they serve a very different purpose). You can think of UMAPs as a very specific dimension reduction where \\(k\\) is always 2 or 3. However, UMAPs serve a very different role – very few single-cell analyses relies on the UMAP coordinates, but many single-cell methods rely upon the low-dimensional vector \\(Z_{i,\\cdot}\\in\\mathbb{R}^k\\) from a dimension reduction method.\nThe reason is that UMAPs are usually solely for visualizations and nothing else. There is almost no concrete relation between the distance between any two cells based on their UMAP coordinates and their true dissimilarity based on their gene expression profiles. The most common analogy is to think of visualizing the Earth on a 2D map, see Figure 3.15. No matter how you try to draw the world on a sheet of paper, there’s always some unnatural distortion. If you interpret this map very literally, it seems like California is further away from Japan than Spain is, and Antartica is almost as large as all the other continents combined. The point is, every low-dimensional projection always sacrifices some aspects, and when you try projecting high-dimensional data to specifically only 2 dimensions, a lot of large-scale qualities “break.”\nSee (Prater and Lin 2024) for more discussions about how to think about UMAPs, Figure 3.16. There’s a big debate on what is “acceptable” or “not acceptable” to infer from UMAPS. See (Chari and Pachter 2023; Lause, Berens, and Kobak 2024), and a recent large controversy in genetics (https://www.science.org/content/article/huge-genome-study-confronted-concerns-over-race-analysis).\nMy take: UMAPs are a useful visualization tool (in the sense that it’ll be ridiculous to claim we should never visualize our data, and we should just accept every visualization tool will have its own drawbacks). However, you should have quantitative metrics planned out prior to visualization so you’re not solely relying on UMAPs for your analysis. UMAPs are useful for giving you a sense of the data quality and broad cellular relations before investing time to carefully quantify the biology of interest. Your biological evidence should not solely rely on UMAPs.\n\n\n\n\n\n\n\n\nFigure 3.15: Map of the world\n\n\n\n\n\n\n\n\n\n\n\nFigure 3.16: (Top row): UMAP computed from 3 different random seeds, to illustrated the “arbitrary” nature of how large “continents” of cells relate to one another. (Bottom left): t-SNE, which often are a lot more “spread out” than UMAPs in terms of how separated the “continents” are. (Bottom right): PCA, which is reproducible (i.e., no unexplainable extrinsic randomness during the computation), statistically rigorous and transparent (i.e., we know how to mathematically interpret any pair of cells). However, unlike UMAP and t-SNE, we often need many PCs to appropriate represent the data, and we can only visualize 2 PCs at a time. (Prater and Lin 2024)\n\n\n\n\n\n\n3.3.25 Relation to PCA\nUMAPs are most related to the Formulation #3 of PCA Equation 3.6. Specifically, instead of “\\(D_X\\)” and “\\(D_{XW}\\)” (originally measuring the distance between two cells using Euclidean distance), UMAPs instead use an adaptive kernel on a cell-cell graph to measure the similarity between two cells, and the loss function isn’t simply a difference between the two similarities.\n\n\n3.3.26 How to do this in practice\nSee the Seurat::RunUMAP function, illustrated in Figure 3.17. The resulting visualization is shown in Figure 3.18.\n\n\n\n\n\n\n\nFigure 3.17: The UMAP visualization step. See the tutorial in https://satijalab.org/seurat/articles/pbmc3k_tutorial.html.\n\n\n\n\n\n\n\n\n\n\n\nFigure 3.18: Using the Seurat::DimPlot(pbmc, reduction = \"umap\") function to visualize the first two PCs. See the tutorial in https://satijalab.org/seurat/articles/pbmc3k_tutorial.html.\n\n\n\n\n\n\n3.3.27 A brief note on other approaches\nBecause visualizing high-dimensional data will always be a need, and there’s never going to be an “optimal” way to do it, the visualization method of choice is going to change based on the community’s desires every 5-10 years. While currently UMAP is king (which dethroned t-SNE, who was the previous king), there’s definitely methods trying to dethrone UMAP. The method I’ve seen the most popularity to dethrone UMAP so far is PaCMAP, but as of 2024-25, UMAP is still by far the most common visualization method. See (Huang et al. 2022) for a broad benchmarking of such methods.\nThere are two lines of work I’ll mention that might be of interest for the statistical students. One is developing methods to assess how “distorted” the visualization is, see (Johnson, Kath, and Mani 2022; Xia, Lee, and Li 2024). Another is to trying to prove (using a formal statistical model) how well these visualization methods actually “cluster” the cells, see (Arora, Hu, and Kothari 2018; Cai and Ma 2022).\n\n\n\n\nAhlmann-Eltze, Constantin, and Wolfgang Huber. 2023. “Comparison of Transformations for Single-Cell RNA-Seq Data.” Nature Methods, 1–8.\n\n\nArora, Sanjeev, Wei Hu, and Pravesh K Kothari. 2018. “An Analysis of the t-Sne Algorithm for Data Visualization.” In Conference on Learning Theory, 1455–62. PMLR.\n\n\nBecht, Etienne, Leland McInnes, John Healy, Charles-Antoine Dutertre, Immanuel WH Kwok, Lai Guan Ng, Florent Ginhoux, and Evan W Newell. 2019. “Dimensionality Reduction for Visualizing Single-Cell Data Using UMAP.” Nature Biotechnology 37 (1): 38.\n\n\nCai, T Tony, and Rong Ma. 2022. “Theoretical Foundations of t-Sne for Visualizing High-Dimensional Clustered Data.” Journal of Machine Learning Research 23 (301): 1–54.\n\n\nCarbonetto, Peter, Abhishek Sarkar, Zihao Wang, and Matthew Stephens. 2021. “Non-Negative Matrix Factorization Algorithms Greatly Improve Topic Model Fits.” arXiv Preprint arXiv:2105.13440.\n\n\nChari, Tara, and Lior Pachter. 2023. “The Specious Art of Single-Cell Genomics.” PLOS Computational Biology 19 (8): e1011288.\n\n\nChen, Wenan, Yan Li, John Easton, David Finkelstein, Gang Wu, and Xiang Chen. 2018. “UMI-Count Modeling and Differential Expression Analysis for Single-Cell RNA Sequencing.” Genome Biology 19 (1): 70.\n\n\nGhojogh, Benyamin, Ali Ghodsi, Fakhri Karray, and Mark Crowley. 2021. “Factor Analysis, Probabilistic Principal Component Analysis, Variational Inference, and Variational Autoencoder: Tutorial and Survey.” arXiv Preprint arXiv:2101.00734.\n\n\nHafemeister, Christoph, and Rahul Satija. 2019. “Normalization and Variance Stabilization of Single-Cell RNA-seq Data Using Regularized Negative Binomial Regression.” Genome Biology 20 (1): 1–15.\n\n\nHaghverdi, Laleh, Florian Buettner, and Fabian J Theis. 2015. “Diffusion Maps for High-Dimensional Single-Cell Analysis of Differentiation Data.” Bioinformatics 31 (18): 2989–98.\n\n\nHeumos, Lukas, Anna C Schaar, Christopher Lance, Anastasia Litinetskaya, Felix Drost, Luke Zappia, Malte D Lücken, et al. 2023. “Best Practices for Single-Cell Analysis Across Modalities.” Nature Reviews Genetics 24 (8): 550–72.\n\n\nHou, Wenpin, Zhicheng Ji, Hongkai Ji, and Stephanie C Hicks. 2020. “A Systematic Evaluation of Single-Cell RNA-Sequencing Imputation Methods.” Genome Biology 21 (1): 1–30.\n\n\nHuang, Haiyang, Yingfan Wang, Cynthia Rudin, and Edward P Browne. 2022. “Towards a Comprehensive Evaluation of Dimension Reduction Methods for Transcriptomic Data Visualization.” Communications Biology 5 (1): 719.\n\n\nJohnson, Eric M, William Kath, and Madhav Mani. 2022. “EMBEDR: Distinguishing Signal from Noise in Single-Cell Omics Data.” Patterns 3 (3).\n\n\nKent, JT, John Bibby, and KV Mardia. 1979. Multivariate Analysis. Academic Press Amsterdam.\n\n\nKharchenko, Peter V, Lev Silberstein, and David T Scadden. 2014. “Bayesian Approach to Single-Cell Differential Expression Analysis.” Nature Methods 11 (7): 740.\n\n\nKorsunsky, Ilya, Nghia Millard, Jean Fan, Kamil Slowikowski, Fan Zhang, Kevin Wei, Yuriy Baglaenko, Michael Brenner, Po-ru Loh, and Soumya Raychaudhuri. 2019. “Fast, Sensitive and Accurate Integration of Single-Cell Data with Harmony.” Nature Methods, 1–8.\n\n\nLause, Jan, Philipp Berens, and Dmitry Kobak. 2021. “Analytic Pearson Residuals for Normalization of Single-Cell RNA-Seq UMI Data.” Genome Biology 22: 1–20.\n\n\n———. 2024. “The Art of Seeing the Elephant in the Room: 2D Embeddings of Single-Cell Data Do Make Sense.” bioRxiv.\n\n\nLin, Kevin Z, Yixuan Qiu, and Kathryn Roeder. 2022. “eSVD: Cohort-Level Differential Expression in Multi-Individual Single-Cell RNA-Seq Data Using Exponential-Family Embeddings.” (In Preparation).\n\n\n———. 2024. “eSVD-DE: Cohort-Wide Differential Expression in Single-Cell RNA-Seq Data Using Exponential-Family Embeddings.” BMC Bioinformatics 25 (1): 113.\n\n\nLopez, Romain, Jeffrey Regier, Michael B Cole, Michael I Jordan, and Nir Yosef. 2018. “Deep Generative Modeling for Single-Cell Transcriptomics.” Nature Methods 15 (12): 1053.\n\n\nLove, Michael I, Wolfgang Huber, and Simon Anders. 2014. “Moderated Estimation of Fold Change and Dispersion for RNA-Seq Data with DESeq2.” Genome Biology 15 (12): 550.\n\n\nLuecken, Malte D, Maren Büttner, Kridsadakorn Chaichoompu, Anna Danese, Marta Interlandi, Michaela F Müller, Daniel C Strobl, et al. 2022. “Benchmarking Atlas-Level Data Integration in Single-Cell Genomics.” Nature Methods 19 (1): 41–50.\n\n\nLuecken, Malte D, and Fabian J Theis. 2019. “Current Best Practices in Single-Cell RNA-Seq Analysis: A Tutorial.” Molecular Systems Biology 15 (6): e8746.\n\n\nMa, Rong, Eric D Sun, David Donoho, and James Zou. 2024. “Principled and Interpretable Alignability Testing and Integration of Single-Cell Data.” Proceedings of the National Academy of Sciences 121 (10): e2313719121.\n\n\nMaden, Sean K, Sang Ho Kwon, Louise A Huuki-Myers, Leonardo Collado-Torres, Stephanie C Hicks, and Kristen R Maynard. 2023. “Challenges and Opportunities to Computationally Deconvolve Heterogeneous Tissue with Varying Cell Sizes Using Single-Cell RNA-Sequencing Datasets.” Genome Biology 24 (1): 288.\n\n\nMcGinnis, Christopher S, Lyndsay M Murrow, and Zev J Gartner. 2019. “DoubletFinder: Doublet Detection in Single-Cell RNA Sequencing Data Using Artificial Nearest Neighbors.” Cell Systems 8 (4): 329–37.\n\n\nPrater, Katherine E, and Kevin Z Lin. 2024. “All the Single Cells: Single-Cell Transcriptomics/Epigenomics Experimental Design and Analysis Considerations for Glial Biologists.” Glia.\n\n\nQian, Kun, Shiwei Fu, Hongwei Li, and Wei Vivian Li. 2022. “scINSIGHT for Interpreting Single-Cell Gene Expression from Biologically Heterogeneous Data.” Genome Biology 23 (1): 1–23.\n\n\nRisso, Davide, John Ngai, Terence P Speed, and Sandrine Dudoit. 2014. “Normalization of RNA-Seq Data Using Factor Analysis of Control Genes or Samples.” Nature Biotechnology 32 (9): 896–902.\n\n\nSalzberg, Steven L. 2018. “Open Questions: How Many Genes Do We Have?” BMC Biology 16 (1): 94.\n\n\nSarkar, Abhishek, and Matthew Stephens. 2021. “Separating Measurement and Expression Models Clarifies Confusion in Single Cell RNA-Seq Analysis.” Nature Genetics 53 (6): 770–77.\n\n\nSaunders, Lauren M, Sanjay R Srivatsan, Madeleine Duran, Michael W Dorrity, Brent Ewing, Tor H Linbo, Jay Shendure, et al. 2023. “Embryo-Scale Reverse Genetics at Single-Cell Resolution.” Nature 623 (7988): 782–91.\n\n\nSetty, Manu, Vaidotas Kiseliovas, Jacob Levine, Adam Gayoso, Linas Mazutis, and Dana Pe’er. 2019. “Characterization of Cell Fate Probabilities in Single-Cell Data with Palantir.” Nature Biotechnology 37 (4): 451–60.\n\n\nTipping, Michael E, and Christopher M Bishop. 1999. “Probabilistic Principal Component Analysis.” Journal of the Royal Statistical Society: Series B (Statistical Methodology) 61 (3): 611–22.\n\n\nTownes, F William, Stephanie C Hicks, Martin J Aryee, and Rafael A Irizarry. 2019. “Feature Selection and Dimension Reduction for Single-Cell RNA-seq Based on a Multinomial Model.” Genome Biology 20 (1): 1–16.\n\n\nTran, Hoa Thi Nhu, Kok Siong Ang, Marion Chevrier, Xiaomeng Zhang, Nicole Yee Shin Lee, Michelle Goh, and Jinmiao Chen. 2020. “A Benchmark of Batch-Effect Correction Methods for Single-Cell RNA Sequencing Data.” Genome Biology 21 (1): 1–32.\n\n\nVan Dijk, David, Roshan Sharma, Juozas Nainys, Kristina Yim, Pooja Kathail, Ambrose J Carr, Cassandra Burdziak, et al. 2018. “Recovering Gene Interactions from Single-Cell Data Using Data Diffusion.” Cell 174 (3): 716–29.\n\n\nXi, Nan Miles, and Jingyi Jessica Li. 2021. “Benchmarking Computational Doublet-Detection Methods for Single-Cell RNA Sequencing Data.” Cell Systems 12 (2): 176–94.\n\n\nXia, Lucy, Christy Lee, and Jingyi Jessica Li. 2024. “Statistical Method scDEED for Detecting Dubious 2D Single-Cell Embeddings and Optimizing t-SNE and UMAP Hyperparameters.” Nature Communications 15 (1): 1753.\n\n\nYazar, Seyhan, Jose Alquicira-Hernandez, Kristof Wing, Anne Senabouth, M Grace Gordon, Stacey Andersen, Qinyi Lu, et al. 2022. “Single-Cell eQTL Mapping Identifies Cell Type-Specific Genetic Control of Autoimmune Disease.” Science 376 (6589): eabf3041.\n\n\nYoung, Matthew D, and Sam Behjati. 2020. “SoupX Removes Ambient RNA Contamination from Droplet-Based Single-Cell RNA Sequencing Data.” Gigascience 9 (12): giaa151.\n\n\nZhang, Yuqing, Giovanni Parmigiani, and W Evan Johnson. 2020. “ComBat-Seq: Batch Effect Adjustment for RNA-Seq Count Data.” NAR Genomics and Bioinformatics 2 (3): lqaa078.\n\n\nZhao, Ruzhang, Jiuyao Lu, Weiqiang Zhou, Ni Zhao, and Hongkai Ji. 2024. “A Systematic Evaluation of Highly Variable Gene Selection Methods for Single-Cell RNA-Sequencing.” bioRxiv, 2024–08.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Single-cell sequencing</span>"
    ]
  },
  {
    "objectID": "chapter2_sequencing.html#footnotes",
    "href": "chapter2_sequencing.html#footnotes",
    "title": "3  Single-cell sequencing",
    "section": "",
    "text": "You can have a simple hierarchical model in your head – each human donor contributes one (or more) tissue sample. Each tissue sample contains many cells.↩︎\nHow many genes are there in the human body? This is not a well-defined questions. If you want to only ask about protein-coding genes, there’s probably about 24,000 of them (Salzberg 2018). However, most gene callers (such as CellRanger https://www.10xgenomics.com/support/software/cell-ranger/latest, which is what we usually use for 10x single-cell data) also label genes that don’t translate. We’ll talk about this in Section 4.8.↩︎\nTypically, the feature selection step doesn’t use the normalized matrix even though normalization happens before feature selection. See https://github.com/satijalab/seurat/blob/ece572a/R/preprocessing.R#L3995. This is because it’s preferable to normalize using all the reads, even from genes you don’t actually include in your analysis.↩︎\nSee https://en.wikipedia.org/wiki/Low-rank_approximation.↩︎\nTypically, the feature selection step doesn’t use the normalized matrix even though normalization happens before feature selection. See https://github.com/satijalab/seurat/blob/ece572a/R/preprocessing.R#L3995. This is because it’s preferable to normalize using all the reads, even from genes you don’t actually include in your analysis.↩︎\nSee https://en.wikipedia.org/wiki/Low-rank_approximation.↩︎\nSometimes, people use the word “overcrowding” to refer to the fact that embedding methods might collapse nearby points too aggressively.↩︎\nSee Seurat’s recommendation in https://satijalab.org/seurat/articles/seurat5_integration.↩︎",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Single-cell sequencing</span>"
    ]
  },
  {
    "objectID": "chapter3_rna.html",
    "href": "chapter3_rna.html",
    "title": "4  Single-cell RNA-sequencing",
    "section": "",
    "text": "4.1 Some important nouns and verbs",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Single-cell RNA-sequencing</span>"
    ]
  },
  {
    "objectID": "chapter3_rna.html#some-important-nouns-and-verbs",
    "href": "chapter3_rna.html#some-important-nouns-and-verbs",
    "title": "4  Single-cell RNA-sequencing",
    "section": "",
    "text": "Sequencing (verb): The process of determining the order of nucleotides (A, T, C, G) in a DNA or RNA molecule, providing the primary structure of these biomolecules. Sequencing technologies have evolved to be high-throughput, enabling the analysis of entire genomes or transcriptomes.\nSequencing depth, read depth, library size (noun; all synonyms): These terms refer to the number of times a specific nucleotide or region of the genome is sequenced in an experiment. Greater depth provides more accurate detection of rare variants or lowly expressed genes but requires increased computational and financial resources.\nChromosome, DNA, RNA, protein (noun):\n\nChromosome: A large, organized structure of DNA and associated proteins that contains many genes and regulatory elements.\n\nDNA: The molecule that encodes genetic information in a double-helical structure.\n\nRNA: A single-stranded molecule transcribed from DNA that can act as a messenger (mRNA), a structural component (rRNA), or a regulator (e.g., miRNA). When we talk about scRNA-seq, we are usually referring to exclusively measuring mRNA.\n\nProtein: The functional biomolecule synthesized from RNA via translation, performing structural, enzymatic, and regulatory roles in cells.\n\nGenome vs. gene vs. intergenic region (noun):\n\nGenome: The complete set of DNA in an organism, encompassing all of its genetic material, including coding genes, non-coding regions, and regulatory elements. The genome is the blueprint that defines the biological potential of the organism.\n\nGene: A specific sequence within the genome that encodes a functional product, typically a protein or functional RNA. Genes include regions such as exons (coding sequences), introns (non-coding regions within a gene), and regulatory sequences (e.g., promoters and enhancers) that control gene expression. We will see more about the architecture of a gene in Section 7.1.\n\nIntergenic region: The stretches of DNA between genes that do not directly code for proteins or RNA. Intergenic regions were once considered “junk DNA,” but they often contain regulatory elements, such as enhancers and silencers, that influence the expression of nearby or distant genes. These regions also play roles in chromatin organization and genome stability.\n\nGenetics vs. genomics (noun): Genetics typically focuses on the role of the DNA among large populations (of people, of species, etc.), while genomics can encapsulate any omic, and does not necessarily imply studies across a large population1.\n“Next generation sequencing” (noun)2: A collection of high-throughput technologies that allow for the parallel sequencing of millions of DNA or RNA molecules. It has revolutionized biology by enabling large-scale studies of genomes, transcriptomes, and epigenomes.\nRead fragment (noun): A short sequence of DNA or RNA produced as an output from high-throughput sequencing. Fragments are typically between 50 bp and 300 bp long, depending on the sequencing technology, and they represent segments of the original molecule being sequenced.\nReference genome (noun): A curated, complete assembly of the genomic sequence for a species, used as a template to align and interpret sequencing reads. It serves as a baseline for identifying genetic variations, such as mutations or structural changes, and for annotating functional elements.\nCoding genes vs. non-coding genes (noun):\n\nCoding genes: Genes that contain instructions for producing proteins. They are transcribed into mRNA, which is then translated into functional proteins that perform structural, enzymatic, or regulatory roles in cells.\n\nNon-coding genes: Genes that do not produce proteins but instead generate functional RNA molecules, such as rRNA, tRNA, miRNA, or lncRNA, which regulate gene expression, maintain genomic stability, or perform other cellular functions. Non-coding genes highlight the complexity of gene regulation and cellular processes beyond protein synthesis.\n\nEpigenetics vs. epigenomics (noun): Epigenetics studies modifications to DNA and histones (e.g., methylation, acetylation) that regulate gene expression without altering the DNA sequence. Epigenomics examines these modifications across the entire genome.\nTranscriptome (noun): The complete set of RNA transcripts expressed in a cell or tissue at a given time, reflecting dynamic gene activity.\nProteome (noun): The full complement of proteins expressed in a cell, tissue, or organism, representing functional output.\nSingle-cell sequencing (noun): Sequencing technologies applied at the resolution of individual cells, allowing for the study of heterogeneity in gene expression, epigenetics, or genetic variation across cell populations.\nBulk sequencing (noun): Sequencing technologies that aggregate material (e.g., RNA, DNA) from many cells, providing an average profile of the population but masking individual cell variability.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Single-cell RNA-sequencing</span>"
    ]
  },
  {
    "objectID": "chapter3_rna.html#sec-chapter_3_tech",
    "href": "chapter3_rna.html#sec-chapter_3_tech",
    "title": "4  Single-cell RNA-sequencing",
    "section": "4.2 How scRNA-seq works as a technology",
    "text": "4.2 How scRNA-seq works as a technology\n\nRemark (Single-cell vs. single-nuclei). While I use the word “cell,” sometimes in certain biological tissues, the more accurate word is “nuclei.” The computational methods for single-cell RNA-seq data (scRNA-seq) is essentially the same as single-nuclei RNA-seq data (snRNA-seq). What’s different is the biological context. For instance, some biological processes happen only in the nucleus, so when you collect snRNA-seq data, you might be overly enriched to discover those processes. See (Denisenko et al. 2020; Ding et al. 2020) for example.\n\nSee Figure 4.1 for an illustration of how the 10x protocol works. We’ll explain this next (and more importantly, why it’s important for a statistician to know how single-cell sequencing works)3.\n\n\n\n\n\n\n\nFigure 4.1: Illustration of the how scRNA-seq works (this is specific for 10x Chromium 3’, but most single-cell protocols follow this rough strategy). (Swaminath and Russell 2024)\n\n\n\n\n\nTissue dissociation and cell isolation: The tissue of interest is dissociated into a suspension of individual cells using enzymatic or mechanical methods. Single cells are isolated, often using fluorescence-activated cell sorting (FACS) or microfluidic techniques. This step is why some biological systems require “single-nuclei” instead of “single-cell.”\n\n\nRemark (Tissue dissociation is typically invasive). The main non-invasive ways is through blood, skin, and urine/feces. Otherwise, unlike MRIs, this is not easy to access tissues in humans. Hence, human samples from most non-accessible biological systems (i.e., brain, lung, heart, etc.) are usually obtain with prior consent from donors after surgery, biopsy, transplant, etc.\n\n\nDroplet formation: Cells are encapsulated into tiny droplets along with barcoded beads. Each bead contains unique molecular identifiers (UMIs) and cell-specific barcodes to label RNA molecules from individual cells. This step is the how we can keep track and eventually figure out which data came from which cell.4\nCell lysis and RNA capture: Cells are lysed within the droplets, and the released RNA molecules hybridize to oligonucleotides on the barcoded beads. This step ensures that all RNA from a single cell is tagged with the same cell-specific barcode.\n\n\nRemark (Lysing prevents longitudinal profile). This step is why, by default, scRNA-seq cannot do longitudinal experiments on literally the same cells. You have to destroy the cell to sequence it.\n\n\nReverse transcription, cDNA synthesis, and PCR amplification: The captured RNA is reverse-transcribed into complementary DNA (cDNA), incorporating the barcodes and UMIs to track the origin of each molecule. The cDNA is amplified via PCR to generate enough material for sequencing5. UMIs help correct for amplification biases by identifying and collapsing duplicate reads from the same original RNA molecule. See Figure 4.2 for the benefit the UMI.\n\n\n\n\n\n\n\n\nFigure 4.2: Illustration of the importance of UMIs. From https://help.geneiousbiologics.com/hc/en-us/articles/4781289585300-Understanding-Single-Cell-technologies-Barcodes-and-UMIs.\n\n\n\n\n\n\n\n\n\n\n\nFigure 4.3: How the Poly(dT) on the 10x bead sequence binds to the Poly(A) tail at the 3’ end of an mRNA fragment. From https://www.10xgenomics.com/support/universal-three-prime-gene-expression/documentation/steps/library-prep/chromium-gem-x-single-cell-3-v4-gene-expression-user-guide.\n\n\n\n\n\nRemark (The importance and impact of PCR). Some biological modalities cannot be PCR’d reliably. This is why (as we’ll see later in the course) certain omics are a lot harder to get data of at single-cell resolution. The PCR step is important because you can imagine it’s very hard to sequence every fragment in a cell. There might be many fragments, but you won’t be able to sequence many of them. By amplifying the content in a cell, we can more reliably sequence the contents in that cell. The UMIs become very important because we want to make sure our eventual gene expression counts are the fragments from the original cell, not counts due to PCR amplification.\n\n\nLibrary preparation and high-throughput sequencing: Amplified cDNA is fragmented (if necessary) and adapters are added to prepare the material for sequencing. These adapters are required for sequencing compatibility and indexing. The prepared library is sequenced on a next-generation sequencing platform6, generating short reads7 that include both the transcript sequence and the associated barcodes and UMIs\n\n\nRemark (The impact of “short reads”). Short reads, typically around 50-400 base pairs long8, are the output of most high-throughput sequencing platforms (i.e., a limitation of using Illumina sequencing, for example). While they provide highly accurate and cost-effective data, their limited length can pose challenges in resolving complex regions of the genome, such as repetitive sequences, or distinguishing between transcript isoforms in RNA-seq data. These limitations can obscure biological insights, particularly in applications requiring full-length transcript information or precise structural variation analysis.\n\n\nRemark (Limitation of budget). The sequencing step is a costly step (in terms of money) in a data generation process. The more money you spend, the more sequencing depth you can get. (Of course, this is also dictated by the number of cells in your experiment, the cell quality, the efficacy of the sequencing protocol, etc.) However, if you don’t sequence using a large financial budget, then your count matrix \\(X\\) will have even more 0’s. This means you have less “resolution” to discover biological insights9.\n\n\nMapping and alignment: Sequencing reads are mapped to a reference genome or transcriptome to identify the originating genes. UMIs are used to remove PCR duplicates, ensuring accurate quantification of transcripts. This is a classic bioinformatics task – given a sequencing fragment (i.e., the literal basepair sequence) and a reference genome, figure out where in the reference genome this sequencing fragment should map to. If you are doing a typical 10x scRNA-seq experiment, the software to do this (made by 10x) is called CellRanger10.\n\n\nRemark 4.1. Remark (A lot of fascinating biology is thrown out). During the mapping and alignment step, many sequencing reads are often discarded because they do not align to the reference genome or transcriptome used in the analysis. This includes reads from bacteria and viruses, which could reveal insights into host-microbe interactions or infections (Arabi et al. 2023; Sato et al. 2018). Similarly, long non-coding RNAs (lncRNAs) (Mattick et al. 2023), genetic variation (including allele-specific expression) (Robles-Espinoza et al. 2021), alternative splicing (J. Chen and Weiss 2015), and untranslated regions (UTRs) of mRNAs are frequently overlooked in standard analyses despite their crucial roles in gene regulation, transcript stability, and translation (Arora et al. 2022). While these regions and features are often excluded for simplicity or due to lack of annotation, they represent a wealth of biological information that could lead to fascinating discoveries if properly explored.\n\n\nRemark 4.2. Remark (Why zero-inflation is not currently as popular for scRNA-seq analyses). As I mentioned in Section 3.3.13, modeling zero-inflation is not very common anymore. (This is also why we typically do not use an imputation step beyond the usual dimension reduction.) This was shown for droplet-based sequencing protocols (Svensson 2020), alongside its replies and responses (Cao et al. 2021; Svensson 2021). You might also be interested as well to read more about where the 0’s in a count matrix could come from during the entire sequencing protocol (Jiang et al. 2022), and how UMIs have contributed to not needing to worry about zero-inflation as much anymore (W. Chen et al. 2018; Kim, Zhou, and Chen 2020).",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Single-cell RNA-sequencing</span>"
    ]
  },
  {
    "objectID": "chapter3_rna.html#clustering",
    "href": "chapter3_rna.html#clustering",
    "title": "4  Single-cell RNA-sequencing",
    "section": "4.3 Clustering",
    "text": "4.3 Clustering\n\nInput/Output.\nThe input to clustering is a normalized matrix \\(X\\in \\mathbb{R}^{n\\times p}\\) for \\(n\\) cells and \\(p\\) features (i.e., genes) and typically a clustering resolution, and the output is a partitioning of all the cells. That is, if there are estimated to be \\(K\\) clusters, each cell is assigned to one of the \\(K\\) clusters.\n\n\n4.3.1 What is a “cell type”? No, seriously. What is it?\nThe concept of a “cell type” is foundational yet complex in biology. Historically, cell types have been defined by shared structural and functional characteristics, making them distinct from other cells in an organism. However, this simplicity belies a deeper challenge: what features truly define a cell type? Modern research has shown that cell types exhibit diverse properties across molecular (i.e., the mRNA fragments and proteins in the cell), morphological (i.e., the shape of the cell), spatial (i.e., where the cell is in the human body), ancestry (i.e., where the cell originated from), and functional (i.e., the purpose of this cell) dimensions, often making it difficult to draw clear boundaries. For example:\n\nExample of obvious distinctions: Obvious differences in cells are often rooted in their structure and function. Heart muscle cells contract using striated fibers, while neurons transmit signals via dendrites and axons, making their structures and functions unmistakably distinct.\nExample of not-obvious distinctions: Neurons in the brain have been categorized based on their shape, connectivity, and gene expression patterns, but these dimensions do not always align, leading to ambiguities in classification.\n\nFor example, in many “atlas” projects (i.e., big scientific collaborators that aim to exhaustively profile many cells to understand the full diversity of cells), there is a very fundamental question: “How many cell types are there?” This is illustrated in Figure 4.411, where after exhaustively profile 4 brains from multiple brain regions, the authors defined 31 “superclusters” (shown as different colors) that separate into 3313 “subclusters.”\n\n\n\n\n\n\n\nFigure 4.4: From (Siletti et al. 2023).\n\n\n\n\nAdvances in single-cell transcriptomics have revolutionized how we define cell types. By profiling thousands of genes simultaneously, researchers can cluster cells into groups based on gene expression patterns, creating detailed cell taxonomies. Yet, even this high-resolution approach raises questions about granularity—should closely related clusters represent distinct cell types or variations within the same type? Additionally, transcriptomic definitions often need validation through other modalities, such as spatial organization, connectivity, or functional roles. See Figure 4.5 for illustrations of other biotechnology assays to define cell types. Despite these challenges, integrating these diverse perspectives is essential for understanding how cells contribute to the structure and function of tissues and organs in both health and disease.\n\n\n\n\n\n\n\nFigure 4.5: Illustrating how to define cell types (in this case, specific to the brain). (Zeng 2022)\n\n\n\n\n\nRemark (Personal opinion: Being stunlocked on how to define “cell type” in your paper is the rite of passage to becoming a cell biologist). The more you work closer to biology, the more you’ll realize that answering “What is a cell type?” transforms from a seemingly useless pedagogical question into insanely difficult question that requires you to dig deep into biology. For instance, aging research is currently at the forefront of a lot of biomedical research. However, consider Figure 4.6. Does a cell switch it’s “cell type” as we age? (Clearly, the answer must be “yes” to some degree, since all our cells originate from an embryo.) However, when we age from 70 to 80 years old, do our cells change their “cell type” as certain cells start losing their intended function?\nThe questions can get even crazier: Suppose I “discover a new cell type” in my high-profile scRNA-seq analysis. What does that mean? How do I convey to another researcher what defines this cell type? How am I confident that this “cell type” can be found in donors not in my dataset? (Our notation of cell type would be quite useless if it only existed in one donor or one dataset.)\n\n\n\n\n\n\n\n\nFigure 4.6: From (Zeng 2022).\n\n\n\n\nWe will focus on how to cluster cells in the remainder of this section, but we’ll discuss how to label the clusters as “cell types” in Section 4.6, and how to infer temporal relations in Section 4.7.\n\n\n4.3.2 Clustering cells into cell types or cell states\nClustering is a central step in single-cell RNA-sequencing analysis, allowing researchers to group cells with similar gene expression profiles into distinct clusters that represent cell types or states. Methods like Louvain or Leiden clustering are commonly used for this purpose, leveraging the low-dimensional representation from Principal Component Analysis (PCA) to identify patterns of cellular heterogeneity. These algorithms operate on a graph-based representation of the data, where cells are nodes and edges reflect similarities in their PCA embeddings. The goal is to partition cells into cohesive groups that capture biologically meaningful variation, such as distinct immune cell types or developmental stages. By clustering cells, researchers can uncover the diversity within a tissue or system and generate hypotheses about the roles of different cell populations in health and disease.\n\n\n4.3.3 The standard procedure: Louvain clustering\nLouvain clustering is a graph-based community detection algorithm widely used in single-cell RNA-seq (scRNA-seq) analysis to group cells into clusters representing cell types or states. The algorithm operates on a nearest-neighbor graph constructed from the low-dimensional representation of the data, such as the first few principal components obtained via Principal Component Analysis (PCA). This methods needs one tuning parameter \\(\\gamma\\), which denotes the “resolution” of the method.\n\nInitialization (Graph construction): The first step in Louvain clustering is to construct a graph \\(G = (V, E)\\), where:\n\\(V\\) represents the set of nodes (cells),\n\\(E\\) represents the edges between nodes, with weights \\(w_{ij}\\) quantifying the similarity between cells \\(i\\) and \\(j\\).\n\nThe edge weights \\(w_{ij}\\) are typically computed using a similarity metric, such as Euclidean distance or cosine similarity, and thresholded to retain only the \\(k\\)-nearest neighbors for each node.\n\nThe objective (Modularity optimization): The goal of Louvain clustering is to maximize the modularity \\(Q\\) of the graph, defined as: \\[\nQ = \\frac{1}{2m} \\sum_{i,j} \\left( w_{ij} - \\gamma \\frac{k_i k_j}{2m} \\right) \\delta(c_i, c_j),\n\\] where:\n\\(w_{ij}\\) is the weight of the edge between nodes \\(i\\) and \\(j\\),\n\\(\\gamma\\) is the resolution of the desired clustering (a larger number means smaller cluster sizes),\n\\(k_i = \\sum_j w_{ij}\\) is the sum of edge weights for node \\(i\\),\n\\(m = \\frac{1}{2} \\sum_{i,j} w_{ij}\\) is the total weight of all edges in the graph,\n\\(c_i\\) is the community assignment for node \\(i\\),\n\\(\\delta(c_i, c_j)\\) is an indicator function that equals 1 if nodes \\(i\\) and \\(j\\) belong to the same community, and 0 otherwise.\n\nThe modularity measures the quality of a partition by comparing the observed edge weights within communities to those expected under a random graph with the same degree distribution. (Conceptually, you can see that \\(k_i k_j/(2m)\\) represents the expected edge weight under a random graph model – a sort of “background distribution” adjustment.)\n\nThe estimation procedure (Iterative refinement): Louvain clustering proceeds iteratively:\n\n\nEach node is initially assigned to its own community.\nNodes are moved to neighboring communities if this increases the modularity \\(Q\\).\nCommunities are aggregated into “super-nodes,” and the process repeats on the coarsened graph.\n\nThe algorithm terminates when no further modularity improvement is possible.\nIn the context of scRNA-seq, Louvain clustering is applied to the nearest-neighbor graph of cells constructed from their PCA embeddings. The resulting clusters correspond to groups of cells with similar gene expression profiles, often representing distinct cell types or states. This method is computationally efficient and well-suited for the large, sparse graphs typical of scRNA-seq data. Louvain clustering’s modularity-based approach provides a flexible framework for uncovering cellular heterogeneity, making it a cornerstone of single-cell analysis pipelines.\n\nRemark (Leiden as an improvement over Louvain). The Leiden algorithm (Traag, Waltman, and Van Eck 2019) improves upon Louvain by addressing issues of cluster quality and stability. While Louvain can produce disconnected or poorly connected clusters, Leiden guarantees that clusters are well-connected and more robust. This makes Leiden particularly suitable for high-dimensional and noisy datasets, such as those in single-cell RNA-seq analyses.\n\n\nRemark (You specify a resolution, not the number of clusters). In many clustering algorithms, particularly graph-based methods like Louvain or Leiden, you specify a resolution parameter that influences the granularity of the clustering. A higher resolution typically results in more, smaller clusters, while a lower resolution produces fewer, larger clusters. The number of clusters is not fixed beforehand but emerges as a result of the resolution and the underlying structure of the data.\n\n\n\n4.3.4 How to do this in practice\nSee the Seurat::FindClusters function, illustrated in Figure 4.7. The resulting visualization is shown in Figure 4.8.\n\n\n\n\n\n\n\nFigure 4.7: The Louvian clustering step. See the tutorial in https://satijalab.org/seurat/articles/pbmc3k_tutorial.html.\n\n\n\n\n\n\n\n\n\n\n\nFigure 4.8: Using the Seurat::DimPlot(pbmc, reduction = \"pca\", group.by = \"RNA_snn_res.0.5\") (left) function to visualize the clusters.\n\n\n\n\n\n\n\n\n\n\n\nFigure 4.9: Using the Seurat::DimPlot(pbmc, reduction = \"umap\", group.by = \"RNA_snn_res.0.5\") (right) function to visualize the clusters. See the tutorial in https://satijalab.org/seurat/articles/pbmc3k_tutorial.html.\n\n\n\n\n\nRemark 4.3. Remark (Clustering is often an exploratory step, which then allows you focus on key populations of interest later on in your research project). As you can see here, the clustering role (together with the previous visualization steps and the cell-type labeling to be discussed in Section 4.6) is to provide you a high-level overview of what your dataset contains. After all, when you get a scRNA-seq data fresh out of a wetlab experiment, you don’t actually know what kind of cells are in your dataset. (No dataset comes automatically labeled with cell types.)\nUsually in your paper, after determining the clusters (and their cell types), you will spend a considerable portion of the paper going in-depth on just a few key cell types.\n\n\nRemark (Personal opinion: Make a bit too many clusters, and manually adjust/merge). Starting with a higher number of clusters can capture finer granularity and prevent important subpopulations from being overlooked. You can then manually combine clusters based on biological knowledge or other criteria, ensuring the final groupings are both meaningful and interpretable.\nWhile this might seem sacrilegious to statistical hard-liners, the reality of scRNA-seq analyses is that: 1) you don’t want technical artifacts (from sequencing) or numerical quirks (based on the literal computational method being used) to dictate certain cell clusters (sometimes certain clusters are way too small to be meaningful), and 2) for the reality mentioned in Remark 4.3, it might not be great use to time to worry about the “perfect clustering straight out of a method.” As long as you can justify your actions biologically, you’ll be in good hands.\n\n\nRemark (Personal opinion: If you’re goal is to make an atlas, consider hierarchical clustering methods). Recall Figure 4.5. If the goal of your project is to delineate all the different types of biological variation in your dataset, you’re probably better off using a method that gives you a hierarchy of cell clusters (rather than one fixed clustering). Methods like PAGA (Wolf et al. 2019) and MRTree (Peng et al. 2021) are some (among many) that are useful for this exact task.\n\n\n\n4.3.5 A brief note on other approaches\nSee (S. Zhang et al. 2020; Yu et al. 2022) on benchmarking of various ways to cluster cells.\n\n\n4.3.6 Clustering cells into “meta-cells”\nClustering cells into “meta-cells” is a strategy primarily aimed at simplifying the analysis of single-cell data or increasing the robustness of downstream analyses. In this approach, individual cells are grouped into larger aggregates, or meta-cells, based on their similarity in gene expression profiles. Unlike clustering aimed at identifying biologically meaningful cell types or states, meta-cells are often created to reduce noise, handle sparsity, or improve computational efficiency by working with fewer, more aggregated units. By combining the counts of multiple cells into a single meta-cell, this technique can also mitigate technical variability, making patterns in the data easier to detect. While meta-cells may not represent distinct biological entities, they serve as a practical tool for gaining insights from large and noisy datasets.\n\n\n4.3.7 How to do this in practice\nThe method I’ve seen most commonly used for this task is MetaCell (Baran et al. 2019). These metacells are constructed using a graph-based partitioning method that leverages k-nearest neighbor (K-nn) similarity graphs to identify groups of cells with highly similar gene expression profiles. By grouping cells into metacells, the method effectively reduces noise while preserving meaningful biological variance, allowing for robust and unbiased exploration of transcriptional states, gradients, and cell types. This is illustrated in Figure 4.10.\n\n\n\n\n\n\n\nFigure 4.10: Schematic of Metacell. (Baran et al. 2019)\n\n\n\n\n\n\n\n\n\n\n\nFigure 4.11: Visualization of the cells and their meta-cells. (Baran et al. 2019)\n\n\n\n\n\n\n4.3.8 A brief note on other approaches\nSee a review in (Bilous et al. 2024).",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Single-cell RNA-sequencing</span>"
    ]
  },
  {
    "objectID": "chapter3_rna.html#differential-expression",
    "href": "chapter3_rna.html#differential-expression",
    "title": "4  Single-cell RNA-sequencing",
    "section": "4.4 Differential expression",
    "text": "4.4 Differential expression\nDifferential expression (DE) analysis, illustrated in Figure 4.12, aims to identify genes that are expressed at significantly different levels between two groups of cells. We will discuss two primary scenarios in the following section: 1) either where the groups are estimated from data, or 2) where the groups are determined by the experimental design. This comparison helps uncover genes that may play critical roles in the biological processes or phenotypic changes under investigation. In the context of single-cell RNA-seq, DE analysis must account for the unique challenges of sparsity and variability in the data. The primary goal is to highlight key molecular drivers of the experimental conditions, providing insights into underlying mechanisms or potential targets for therapeutic intervention. This analysis is foundational for linking cellular behavior to experimental manipulations or disease states.\n\n\n\n\n\n\n\nFigure 4.12: Illustration of how to think about DE. From https://www.sc-best-practices.org/conditions/differential_gene_expression.html.\n\n\n\n\nSee https://www.sc-best-practices.org/conditions/differential_gene_expression.html for more background.\n\nInput/Output. The input to differential expression is matrix \\(X\\in \\mathbb{R}^{n\\times p}\\) for \\(n\\) cells and \\(p\\) features (i.e., genes) split into two groups, and the output is two numbers per gene. One is the p-value for the gene (denoting how significant that gene deviates from the null distribution where there is no difference in the gene expression between the two groups. A smaller p-value denotes more evidence against the null), and the other is log fold change (denoting, roughly, how much larger the mean expression in one group is larger than the mean expression of the other group). The p-value is a number between \\(0\\) and \\(1\\), and the log-fold change is any real value where both the sign and magnitude are important.\n\n\nRemark (Intent of Differential Expression Analysis). The primary intent of differential expression (DE) analysis in single-cell RNA-seq is not usually to provide definitive evidence for interventions, such as proving a drug’s efficacy. Instead, DE in single-cell studies is often exploratory, aimed at uncovering basic biological insights. It addresses questions like, “We know there is a difference between these two conditions, but what is driving that difference at the cellular level?” The goal is to identify genes that exhibit meaningful changes in expression, contributing to our collective understanding of gene functions and their roles in cellular processes. These findings expand the compendium of knowledge that informs future experiments and hypotheses.\n\n\nRemark (Pleiotropy and the Need for Continued DE Analyses). There are a ton of existing databases that document what the function of each gene is. For instance, you can see collections of genes (https://www.genome.jp/kegg/kegg2.html and https://www.gsea-msigdb.org/gsea/msigdb) or individual genes (https://www.ncbi.nlm.nih.gov/gene and https://www.genecards.org/). You might wonder – given this wealth of knowledge, why bother do any more DE analyses on your own?\nPleiotropy, where a single gene influences multiple, seemingly unrelated biological processes, underscores the importance of continued differential expression (DE) analyses even in the presence of well-annotated pathways like KEGG. While these resources provide invaluable insights into known gene functions and pathways, they often fail to capture the full complexity of gene roles across diverse cellular contexts, conditions, or tissues. DE analysis allows us to uncover novel functions or unexpected roles for genes, especially in underexplored biological systems or conditions. Pleiotropic effects are context-dependent, and without systematically exploring gene expression across varied conditions, we risk oversimplifying or missing critical aspects of cellular and molecular biology.\n\n\n4.4.1 Hold on… isn’t DE just a t-test?\nSo why is DE even an interesting problem? Couldn’t we just use a t-test (parametric, asymptotic), Wilcoxon rank-sum test (nonparametric, asymptotic), or permutation test (nonparametric, exact)? Yes, you can.\nSo why is there a huge field studying DE in genomics, and why are there so many methods? Ultimately, the focus is on achieving greater statistical power or applying the methods more broadly across diverse datasets and experimental conditions. It boils down to engineering the underlying statistical model to do the following two things effectively:\n\nExtract the “meaningful” signal: While we could run any of the aforementioned tests on the observed single-cell data, the results might be misleading due to the presence of unwanted covariates. For example, significant genes might simply reflect technical artifacts, such as the correlation between gene expression and the number of cells with non-zero counts for that gene.\n\nAs we’ve discussed, these are cases where technical noise (i.e., noise induced by the measurement or sequencing process, and theoretically removable with perfect technology) has not been properly accounted for. The challenge, then, is to design a statistical model that “removes” this noise, isolating the “meaningful” biological signal. Without this step, DE results may reflect experimental artifacts rather than true biological differences.\n\nSharing information across genes to increase power, while controlling Type-1 error: Single-cell data is often much sparser than bulk sequencing data, leading to fewer detectable signals. This raises the question: can we pool information across genes to enhance the statistical power of our tests? For example, one might consider smoothing the expression matrix to reduce noise.\n\n(Recall that 70%+ of a single-cell dataset is 0’s. This means you should expect little power by default. Hence, different DE methods deploy different strategies to improve the power as much as possible.)\nHowever, pooling or smoothing introduces a delicate tradeoff. While it can increase power by borrowing strength from other genes, it risks inflating false positives if overdone. If the smoothing is too aggressive, what might have been a single DE gene could appear as a broader, artificial signal across multiple genes. Designing models that balance this tradeoff, while maintaining statistical validity, is a key challenge in single-cell DE analyses.\nHence, DE can be approached with classical tests, the nuances of single-cell data – ranging from technical noise to sparse data and confounding factors – necessitate specialized models and methods. The ultimate goal is to extract biologically meaningful insights while ensuring robust statistical inference.\n\n\n4.4.2 DE between two data-driven grouping of cells\nPerforming differential expression (DE) analysis between two data-driven groupings of cells, such as clusters identified during analysis, poses unique statistical challenges. A key issue is circularity: the same genes used to define the cell clusters may bias the DE results, complicating the interpretation of identified marker genes. This lack of statistical independence can undermine the validity of formal inference. However, despite these limitations, this type of DE analysis holds substantial exploratory value. It provides a practical way to highlight key genes that distinguish cell types or states. These genes are often called marker genes. The marker genes identified in this manner can still serve as useful entry points for understanding the biological roles of different cell groups, even if their statistical rigor is limited.\n\n\n4.4.3 Wilcoxon Rank-Sum Test for Differential Expression Testing\nThe Wilcoxon rank-sum test is a non-parametric statistical test used to assess whether the distributions of a gene’s expression values differ significantly between two groups of cells. It is particularly well-suited for single-cell RNA-seq data that has been normalized, as it does not assume the data follows a specific distribution, such as normality. The test is based on the ranks of the data rather than the raw expression values, making it robust to outliers and noise.\n\nRemark (Wilcoxon test after normalization and feature selection). The test below is typically done after we’ve normalized and found HVGs. As we’ll discuss in Section 4.4.15 next, this is typically before we any imputation or PCA (and we are not worried about batch effects in this scenario).\n\nBelow, we explain the Wilcoxon rank-sum test, generically applied to gene \\(j\\) (i.e., the \\(j\\)-th column of the normalized scRNA-seq matrix \\(X\\)). We will slightly overload the notation just to keep the notation of the Wilcoxon test itself simple.\n\nSetting up the hypothesis: Let the expression values in two groups of cells be \\(X_1, X_2, \\ldots, X_m\\) (group 1) and \\(Y_1, Y_2, \\ldots, Y_n\\) (group 2). The null and alternative hypotheses are: \\[\nH_0: \\text{The distributions of } X \\text{ and } Y \\text{ are identical.}\n\\] \\[\nH_a: \\text{The distribution of } X \\text{ is shifted relative to } Y.\n\\]\nRanking the data: All observations from both groups are combined and ranked from smallest to largest. Tied values are assigned the average of their ranks. Let \\(R(X_i)\\) represent the rank of \\(X_i\\) in the combined data.\nTest statistic: The test statistic \\(W\\) is calculated as the sum of ranks for one of the groups, typically group 1: \\[\nW = \\sum_{i=1}^m R(X_i).\n\\] Under the null hypothesis, \\(W\\) is expected to follow a known distribution based on the ranks.\nExpected Value and Variance Under \\(H_0\\): Under the null hypothesis, the expected value and variance of \\(W\\) are given by: \\[\n\\mathbb{E}(W) = \\frac{m(m + n + 1)}{2},\n\\] \\[\n\\text{Var}(W) = \\frac{mn(m + n + 1)}{12}.\n\\]\np-Value calculation:\n\nThe p-value is computed by comparing the observed \\(W\\) to its null distribution. For large sample sizes, \\(W\\) can be approximated by a normal distribution: \\[\nZ = \\frac{W - \\mathbb{E}(W) }{\\sqrt{\\text{Var}(W)}}.\n\\] The p-value is then derived from the standard normal distribution: \\[\np = 2 \\cdot P(Z &gt; |z|),\n\\] where \\(z\\) is the observed value of \\(Z\\).\nIn single-cell RNA-seq data, the Wilcoxon rank-sum test is used to compare the expression of each gene between two groups of cells, such as treated versus untreated cells or two clusters identified through clustering. Its non-parametric nature makes it robust to the sparsity and variability inherent in single-cell datasets, providing a reliable method for detecting genes with differential expression.\n\nRemark (Reminder: Invalid p-value in a literal statistical sense). Since the cell groups were defined by clustering, you are likely to find significant genes regardless. This is the “double-dipping” phenomenon. After all, the cells were organized into separate clusters because there were differences between the two cell groups.\nAnother way to describe this is that the null hypothesis is mis-calibrated. A typical Wilcoxon test is assuming under the null hypothesis that the two distributions \\(X\\) and \\(Y\\) are identical. This is not the case when you’re applying a Wilcoxon test on two cell clusters. This results in p-values that are more significant than they are actually.\nHowever, this is does not mean it’s useless to perform hypothesis testing in this situation. After all, our goal is to simply find marker genes to describe a cell cluster, and using hypothesis testing gives us a convenient tool to determine which genes are the most meaningful ones to describe what this cluster represents.\n\n\n\n4.4.4 How to do this in practice\nSee the Seurat::FindMarkers function, with more details described in https://satijalab.org/seurat/articles/de_vignette. This is illustrated in Figure 4.13.\n\n\n\n\n\n\n\nFigure 4.13: The differential expression step, where this example is done to find the “marker genes” for Cluster 2. By default, this is using the Wilcoxon test. You typically don’t need to run logfc.threshold = 0, min.pct = 0, min.cells.feature = 0, min.cells.group = 0. This is primarily done to ensure all the highly variable genes are tested. See the tutorial in https://satijalab.org/seurat/articles/pbmc3k_tutorial.html and https://satijalab.org/seurat/articles/de_vignette.\n\n\n\n\n\n\n4.4.5 What if you want “valid” p-value?\nThere are a few instances where you truly valid p-values. That is, you want a way to perform hypothesis testing that doesn’t inflate the p-values (i.e., does not make the p-values more significant than they should be). Two papers you can look into towards this end are count splitting (Neufeld et al. 2022) or modifying the null distribution (Song et al. 2023).\n\n\n4.4.6 A brief note on other approaches\nThere are an endless number of review and benchmarking papers for this topic. See (Das, Rai, and Rai 2022) for an overview of many methods, and (Dal Molin, Baruzzo, and Di Camillo 2017; Jaakkola et al. 2017; T. Wang et al. 2019; Li et al. 2022) for benchmarkings. This will also help you get a sense of how diversity of DE methods. Note that all the methods we mentioned so far are about differential mean (i.e., there is a shift in the average expression, relative to the variance). There are also mentions dedicated to differential variance (see (J. Liu, Kreimer, and Li 2023) for example) and differential distribution (see (Schefzik, Flesch, and Goncalves 2021) for example).\n\n\n4.4.7 (A brief reminder about multiple testing)\nIn many scientific studies, particularly in genomics and high-throughput experiments, researchers perform thousands of statistical tests simultaneously. For example, in differential expression analysis of RNA-seq data, each gene is tested for association with a condition or phenotype. However, performing multiple tests increases the likelihood of false positives—tests that appear significant purely by chance. This challenge necessitates methods to control error rates, ensuring that conclusions drawn from these analyses are reliable. While traditional corrections like the Bonferroni method are overly stringent and reduce power, modern approaches such as the Benjamini-Hochberg procedure provide a balance between identifying true positives and controlling the rate of false discoveries.\n\n\n4.4.8 Benjamini-Hochberg procedure\nThe Benjamini-Hochberg (BH) procedure is a widely used method to control the False Discovery Rate (FDR), defined as the expected proportion of false positives among all significant results. The procedure is particularly suited for large-scale testing scenarios where identifying as many true positives as possible is critical, while still limiting false discoveries.\n\nOrdered p-values: Let \\(p_1, p_2, \\ldots, p_m\\) represent the p-values for \\(m\\) hypothesis tests. First, these p-values are ordered in ascending order: \\[\np_{(1)} \\leq p_{(2)} \\leq \\cdots \\leq p_{(m)}.\n\\] The index \\((i)\\) denotes the position of the p-value in the sorted list.\nCritical threshold: For a chosen FDR level \\(\\alpha\\), the BH procedure identifies the largest \\(k\\) such that: \\[\np_{(k)} \\leq \\frac{k}{m} \\alpha.\n\\] Here:\n\\(k\\) is the rank of the p-value,\n\\(m\\) is the total number of hypotheses tested,\n\\(\\alpha\\) is the desired FDR threshold (e.g., 0.05).\nSignificant results: Once \\(k\\) is identified, all hypotheses corresponding to \\(p_{(1)}, p_{(2)}, \\ldots, p_{(k)}\\) are considered significant. This ensures that the expected proportion of false discoveries among these selected hypotheses is controlled at \\(\\alpha\\).\n\nThe BH procedure achieves a balance between discovery and error control. Unlike family-wise error rate (FWER) methods such as Bonferroni, which aim to control the probability of any false positives, the BH method allows for a controlled proportion of false positives. This flexibility makes it more powerful in scenarios with a large number of tests, where the likelihood of finding true discoveries would otherwise be severely diminished.\nThe Benjamini-Hochberg procedure is a cornerstone of modern statistical analysis in high-dimensional data contexts. By controlling the FDR, it provides a practical and interpretable way to identify meaningful signals while accounting for the multiple testing problem. This approach is particularly valuable in genomics, proteomics, and other fields involving large-scale hypothesis testing.\n\n\n4.4.9 How to do this in practice\nMost DE methods compute the adjusted p-values for you. However, if you need to to do it manually, you can use the stats::p.adjust function with the setting method=\"BH\".\n\n\n4.4.10 A brief note on other approaches\nBH can control a particular family of dependency structure called PRDS (Benjamini and Yekutieli 2001).\n\n\n4.4.11 The volcano plot\nA volcano plot is a scatterplot used in differential expression analysis to visualize the relationship between statistical significance and fold change for each gene. Genes are plotted with the magnitude of fold change on the x-axis and the negative logarithm of the p-value on the y-axis, making it easy to identify genes that are both significantly and highly differentially expressed. This intuitive layout highlights genes of interest as points far from the origin, often with up- and downregulated genes in separate clusters. See Figure 4.12 for an example of a volcano plot, and Figure 4.14 on how to make one.\n\n\n\n\n\n\n\nFigure 4.14: Using the EnhancedVolcano::EnhancedVolcano(cluster2.markers, lab = rownames(cluster2.markers), x = 'avg_log2FC', y = 'p_val') function to make the volcano plot. See the tutorial in https://bioconductor.org/packages/devel/bioc/vignettes/EnhancedVolcano/inst/doc/EnhancedVolcano.html.\n\n\n\n\n\n\n4.4.12 DE in human cohorts\nDifferential expression (DE) analysis in human cohorts introduces additional complexity due to the presence of numerous confounding variables. Factors such as age, sex, smoking status, genetic background, and even environmental exposures can influence gene expression and obscure the true biological signal related to the condition of interest. Effective DE analysis in this context requires robust statistical frameworks to adjust for these confounders, ensuring that observed differences in gene expression are genuinely associated with the biological or clinical variable being studied. While these adjustments add layers of complexity, they are critical for generating biologically meaningful and reproducible insights that can translate to broader human populations.\nThe broad strategies are:\n\nPseudo-bulk analysis (the most common approach): Pseudo-bulk analysis aggregates single-cell data from each individual into a “bulk” profile by summing or averaging gene expression counts across cells of the same type. This approach treats each individual as a unit of analysis, enabling the application of well-established bulk RNA-seq differential expression methods, such as edgeR (Robinson and Smyth 2007) or DESeq2 (Love, Huber, and Anders 2014). (This methods were created for bulk-sequencing data.) By effectively reducing the dimensionality of the data, pseudo-bulk analysis accounts for inter-individual variability, which is critical in human cohorts. This method is particularly advantageous in case-control studies, where differences in gene expression between cases and controls can be analyzed while maintaining statistical power and controlling for confounders like age, sex, or sequencing depth.\n\nPseudo-bulk samples are created by aggregating single-cell gene expression data across cells within each sample/replicate/donor (depending on the context of the analysis). For donor \\(r\\), the pseudo-bulk expression count \\(\\tilde{X}_{rj}\\) for gene \\(j\\) is obtained by summing the observed counts across all \\(n_{r}\\) cells belonging to that donor: \\[\n\\tilde{X}_{rj} = \\sum_{i \\in \\text{donor }r} X_{ij},\n\\] where \\(X_{ij}\\) is the observed count for gene \\(j\\) in cell \\(i\\) that came from donor \\(r\\). This aggregation reduces the sparsity inherent in single-cell data. Since some of the donors are “cases” and some are “controls”, pseudob-bulking allowing the use of standard bulk RNA-seq differential expression methods while preserving biological replicate structure.\n\nMixture modeling: Mixture modeling is a more nuanced approach that acknowledges the heterogeneity within individual samples by modeling gene expression distributions across all cells. Instead of aggregating data, this approach identifies subpopulations of cells with distinct expression profiles and estimates the contribution of each subpopulation to the overall gene expression. In case-control studies, mixture models can distinguish changes in cellular composition (e.g., shifts in cell type proportions) from changes in gene expression within a given cell type. Mixture modeling is computationally intensive but offers a detailed view of the biological processes underlying disease states in human cohorts. This is mainly using the lme4 R package (or packages that build upon this, like MAST::zlm), such as in (Y. Liu et al. 2023), or NEBULA (He et al. 2021).\n\nBriefly, in its simplest form, a mixture model accounts for the hierarchical structure of the data, where cells are nested within donors. Consider a single gene \\(j\\). The observed expression \\(X_{i(r),j}\\) for cell \\(i\\) from donor \\(r\\) is modeled as: \\[\nX_{i(r),j} \\sim P(X \\mid \\mu_r, \\sigma^2),\n\\] where \\(\\mu_r\\) is the donor-specific mean expression, and \\(\\sigma^2\\) captures the residual variability across cells within the donor. The donor-specific means \\(\\mu_r\\) are modeled as: \\[\n\\mu_r  \\sim \\mathcal{N}(\\beta_0 + \\beta_1 z_r, \\tau^2),\n\\] where \\(z_r\\) is an indicator for case (\\(z_r = 1\\)) or control (\\(z_r = 0\\)) status, \\(\\beta_1\\) is the effect of the condition, and \\(\\tau^2\\) captures the variability in expression across donors. This hierarchical mixture approach explicitly separates within-donor variability from between-donor differences, ensuring that the analysis correctly attributes variability to its appropriate source.\n\nDistributional analysis: Another strategy is to leverage the fact that you have a distribution of cells for each donor. Hence, you can compute the mean and variance of the gene expression for each donor, and compare the donors through their mean and variance. One example of this is eSVD-De (Lin, Qiu, and Roeder 2024). However, this can also be done fully non-parametrically, such as in IDEAS (M. Zhang et al. 2022).\n\n\n\n4.4.13 The standard procedure: DESeq2 (Pseudo-bulk analysis)\nDESeq2 (Love, Huber, and Anders 2014) models read counts \\(X_{ij}\\) for gene \\(j\\) in sample \\(i\\) using a negative binomial (NB) distribution12: \\[\nX_{ij} \\sim \\text{NB}(\\mu_{ij}, r_j),\n\\] where \\(X_{ij}\\) is the total counts in sample \\(i\\) for gene \\(j\\) (which is the sum across all the cells in sample \\(j\\)), and \\(\\mu_{ij} = s_i q_{ij}\\). Here, \\(s_j\\) is a normalization factor accounting for sequencing depth, and \\(q_{ij}\\) represents the normalized mean expression for gene \\(j\\) in sample \\(i\\). The NB distribution’s overdispersion is captured by \\(r_j\\), which varies across genes.\nThe design matrix \\(Z\\) specifies the \\(r\\) covariates of the samples (one of which is the experimental condition). Then, the log of the normalized mean expression \\(q_{ij}\\) is modeled as: \\[\n\\log q_{ij} = \\sum_{r} Z_{ir} \\beta_{jr},\n\\] where \\(\\beta_{ir}\\) are coefficients relating the covariates to the gene expression.\nDispersion parameters \\(r_j\\) are estimated using a shrinkage approach, where gene-wise estimates are pulled toward a trend fitted across genes with similar mean expression. Hypothesis testing for differential expression is based on Wald tests for the corresponding value of \\(\\beta_{jr}\\).\n\n\n4.4.14 A brief note on other approaches\nSee (Squair et al. 2021) and (Junttila, Smolander, and Elo 2022) for more references.\n\n\n4.4.15 Aside: DE testing on normalized vs. count data\nThere are two fundamentally different approaches to performing differential expression (DE) analysis in single-cell RNA-seq data:\n\nDE on the Original Count Data: This approach involves applying statistical methods directly to the raw count data obtained from sequencing. It accounts for the inherent technical noise and sparsity characteristic of single-cell data by using models tailored to handle count distributions (e.g., negative binomial models). This method preserves the original variability and avoids introducing biases from data manipulation. Most of the different DE methods occur in this category (which we’ll discuss more in Section 4.4.12).\n\n\nRemark 4.4. Remark (Personal guideline on when to use). In general, a lot of biological replicates (see Section 4.4.12) or have many covariates to adjust for, this is a more appealing option. Generally, you want to default to this option when you really want to have “valid” p-values (i.e., not just markers for convenient usage). That is, you expect your markers to be investigated in detail in followup work. This is because by modeling the original count nature, if you have an appropriate statistical model, you are more likely to have validity.\n\n\nDE on Processed Data: In this paradigm, the data undergoes preprocessing steps such as normalization, scaling, or transformation before DE analysis. Typically, when you’re using strategy, most people defer to the Wilcoxon test.\n\n\nRemark (Personal guideline on when to use). In general, this option is most appealing when you want something “quick and dirty,” such as getting some interesting genes in a preliminary analysis to look at. This is because you’re off-loading all your concerns about statistical modeling to how the data was processed (i.e., the normalization, batch correction, etc.).\n\nCaution on Processed Data: Do not impute or denoise your data by pooling information across genes or cells prior to DE analysis – unless you are fully aware of the consequences. Imputation or aggressive smoothing can introduce artificial correlations and inflate the signal, potentially leading to false positives and erroneous conclusions. This is because the “signal” from “true DE genes” is smoothed to impact the null genes. These processes can mask true biological variability and create spurious patterns that reflect the imputation model rather than the underlying biology. See Figure 4.15 for an illustration of this. There are some exceptions of this though – see eSVD-DE (Lin, Qiu, and Roeder 2024) and lvm-DE (Boyeau et al. 2023) for example.\n\n\n\n\n\n\n\nFigure 4.15: (Left) DE using the raw or normalized counts, which is what you should use. (Right) DE using the smoothed counts where the data is “smoothed” across all the genes. (Prater and Lin 2024)\n\n\n\n\nIn summary, while both paradigms aim to identify differentially expressed genes, they rely on different assumptions and have different risks associated with them. Performing DE on the original count data is generally safer and more reliable, provided that appropriate statistical models are employed. If you choose to perform DE on processed data, proceed with caution and be mindful of the potential pitfalls associated with data manipulation.\nSee (H. C. Nguyen et al. 2023) for empirical evidence on how DE interacts with batch-correction across different methods.\n\n\n4.4.16 Pooling of overdispersion parameters is usually the most DE methods “share information across genes,” if at all\nMost DE methods analyze one gene at a time, where each gene’s analysis does not influence another gene. As we mentioned above in Remark 4.4, we typically do not perform DE methods on the smoothed data. However, if any information is shared across genes, usually it is at most the overdispersion parameters \\(r_j\\) that is often “averaged/shrunk” across all the genes. See DESeq2 (Love, Huber, and Anders 2014).\n\n\n4.4.17 “DE” for a continuous covariate\nAs we’ll see later in Section 4.7, sometimes you want to see if a gene is correlated with a continuous covariate (often the estimated developmental stage of a cell). Typically, the way this is done is: fit a regression model (typically a form of GLM) to predict the continuous covariate based on a gene’s expression, and then perform a hypothesis test on whether the gene was relevant for the prediction. See (Hou et al. 2023) and its related papers for how methods do this.\n\nRemark (Personal opinion: The distinct between categorical and continuous phenotypes). If you study a clinical phenotype (typically about the organism or overall tissue), you typically want to treat the phenotype as binary (or categorical). After all, a doctor cannot declare someone to “kinda” have cancer. You either have it or you don’t. (Think about how chaotic medication prescriptions, health insurance, follow-up treatments, etc. would be if doctors gave “kinda” assessments.) In medical practice, doctors are constantly updating the guidelines on how to diagnose samples accordingly discrete buckets of categorizations.\nIf you study a basic biology phenotype, you typically want to treat the phenotype as continuous variable. After all, nothing about a cell is ever discrete. Nothing is truly either “on” or “off”, and most ways to understand cells is along a gradient. For example, if you study DNA damage, it’s not very useful to simply know when a cell’s DNA is damaged. (It probably always is – however, most DNA damage present in a cell is probably minor and infrequent.)",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Single-cell RNA-sequencing</span>"
    ]
  },
  {
    "objectID": "chapter3_rna.html#pathway-analysis",
    "href": "chapter3_rna.html#pathway-analysis",
    "title": "4  Single-cell RNA-sequencing",
    "section": "4.5 Pathway analysis",
    "text": "4.5 Pathway analysis\nPathway analysis is a critical step in single-cell RNA-sequencing studies, providing a systems-level understanding of the biological processes and pathways underlying gene expression changes. Tools like Gene Ontology (GO) and Gene Set Enrichment Analysis (GSEA) are commonly used to identify functional themes within a set of differentially expressed or highly variable genes. Gene Ontology categorizes genes into hierarchical groups based on their roles in biological processes, molecular functions, or cellular components, offering a structured framework for interpreting gene expression patterns. GSEA takes this further by testing whether predefined gene sets, representing pathways or functional categories, are enriched in a given cell cluster or condition. These approaches are particularly valuable in single-cell analysis, where individual genes may have noisy or sparse expression patterns. By focusing on groups of related genes, pathway analysis mitigates noise, enhances biological interpretability, and highlights broader functional insights that single genes alone may not reveal.\n\nInput/Output. The input to a pathway analysis is: 1) a vector of \\(p\\) values, one for each gene, and 2) a database that contains many pathways (and which genes belong to that pathway). Importantly, this must be a named vector (i.e., you know which value corresponds to which gene). The output is one p-value per pathway which denotes how significant the genes in the pathway are not randomly distributed based on their value. That is, a significant pathway is one where many of genes are have simultaneously very large (or very small) values.\n\n\n4.5.1 The standard procedure: GSEA\nGene Set Enrichment Analysis (GSEA) is a widely used computational method designed to determine whether predefined sets of genes exhibit statistically significant differences in expression between two biological states. Unlike single-gene analyses, which focus on individual genes, GSEA evaluates groups of related genes (gene sets) to identify coordinated changes in expression patterns. This approach provides a more systems-level understanding of the underlying biology, particularly in settings where individual genes show subtle expression changes.\nThe goal of GSEA is to test whether a predefined gene set \\(S\\), such as a pathway or functional group, is overrepresented among the genes most differentially expressed between two conditions. GSEA leverages ranked gene lists, focusing on the distribution of gene set members within the list to detect enrichment. See Figure 4.16 for an illustration of how the method works visually.\n\nInput data: GSEA requires the following inputs:\n\n\nA ranked list of genes \\(G = \\{g_1, g_2, \\ldots, g_N\\}\\), sorted by their differential expression scores (e.g., fold change, t-statistics, or signal-to-noise ratio) between two conditions.\nA predefined gene set \\(S \\subseteq G\\), typically representing a biological pathway, molecular function, or cellular process.\n\n\nThe test statistic (Enrichment score, i.e., ES): The core of GSEA is the calculation of an enrichment score (ES), which reflects the degree to which the genes in \\(S\\) are concentrated at the top (or bottom) of the ranked list \\(G\\). The ES is computed by walking down the ranked list and increasing a running-sum statistic when encountering a gene in \\(S\\), or decreasing it otherwise: \\[\n\\text{ES} = \\max_k \\left| P_S(k) - P_G(k) \\right|,\n\\] where:\n\\(P_S(k)\\): Cumulative sum of weights for genes in \\(S\\) up to rank \\(k\\).\n\\(P_G(k)\\): Cumulative sum of weights for all genes up to rank \\(k\\).\n\nThe weights often depend on the absolute value of the gene’s differential expression score, emphasizing genes with larger effects.\n\nThe null distribution: To assess the significance of the observed ES, GSEA employs a permutation-based strategy:\n\n\nPermute the condition labels to generate randomized ranked lists.\nRecalculate the ES for the gene set \\(S\\) in each randomized list.\nCompare the observed ES to the null distribution of ES values from the permutations to compute a p-value.\n\n\nMultiple testing adjustment: Since many gene sets are tested in a typical GSEA analysis, corrections for multiple hypothesis testing are essential. GSEA uses the false discovery rate (FDR) to control for false positives, reporting gene sets with significant enrichment after correction.\n\n\n\n\n\n\n\n\nFigure 4.16: The typical “random walk” illustration of a GSEA. (Subramanian et al. 2005)\n\n\n\n\n\n\n\n\n\n\n\nFigure 4.17: The typical “random walk” illustration of a GSEA. (Subramanian et al. 2005)\n\n\n\n\nGSEA outputs enriched gene sets ranked by their statistical significance and direction of change (positive or negative ES). These results highlight biological pathways or processes that are upregulated or downregulated between conditions. For example: (1) In cancer studies, GSEA might identify pathways like “cell cycle” or “apoptosis” as significantly enriched. (2) In immune response research, pathways such as “inflammatory response” or “antigen processing” may be highlighted.\nSome advantages of GSEA:\n\nSensitivity to Subtle Changes: GSEA detects coordinated changes in groups of genes, even when individual genes show modest differential expression.\nBiological Context: By focusing on gene sets, GSEA provides results that are easier to interpret in the context of known biological processes or pathways.\nRobustness: GSEA is less affected by noise or variability in individual genes, as it aggregates signals across entire gene sets.\n\nDespite its strengths, GSEA has limitations:\n\nGene Set Overlap: Many gene sets share overlapping genes, complicating interpretation.\nRanking Dependence: Results depend heavily on the ranking metric used.\nPredefined Gene Sets: GSEA relies on the quality and relevance of predefined gene sets, which may not fully capture novel or context-specific biology.\n\n\n\n4.5.2 A brief note on other approaches\nExtensions to GSEA address some of these issues, including pathway-specific weighting, time-series GSEA, and single-cell adaptations of the method. One example to illustrate this is iDEA (Ma et al. 2020). These methods aren’t hugely popular since this procedure is quite literally often one of the last stages of a single-cell analyses – using a fancy method here usually requires you to have faith that every analyses beforehand was performed reliably. (For instance, if you don’t think you performed batch correction properly, it doesn’t matter if you use the fanciest variant of GSEA – you’ll probably still find nothing biologically relevant.) See (Mubeen et al. 2022) for an overview of many methods.\n\n\n4.5.3 How to do this in practice\nThe most popular package to perform a GSEA analysis is clusterProfiler::gseGO. See https://yulab-smu.top/biomedical-knowledge-mining-book/clusterprofiler-go.html for tutorials on how to do this. If you’re working on human data, the database used for GSEA is often the org.Hs.eg.db package, see https://bioconductor.org/packages/release/data/annotation/html/org.Hs.eg.db.html. See the following code snippet and the outputs in Figure 4.18 and Figure 4.20 as an example.\n\nteststat_vec &lt;- cluster2.markers$avg_log2FC names(teststat_vec) &lt;- rownames(cluster2.markers) teststat_vec &lt;- sort(teststat_vec, decreasing = TRUE) set.seed(10) gse &lt;- clusterProfiler::gseGO( teststat_vec, ont = “BP”, # what kind of pathways are you interested in keyType = “SYMBOL”, OrgDb = “org.Hs.eg.db”, pvalueCutoff = 1, # p-value threshold for pathways minGSSize = 10, # minimum gene set size maxGSSize = 500 # maximum gene set size ) head(as.data.frame(gse))\n\n\n\n\n\n\n\n\nFigure 4.18: Output of head(as.data.frame(gse))\n\n\n\n\n\n\n\n\n\n\n\nFigure 4.19: Output of head(as.data.frame(gse))\n\n\n\n\n\n\n\n\n\n\n\nFigure 4.20: Output of clusterProfiler::dotplot(gse, showCategory=30)",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Single-cell RNA-sequencing</span>"
    ]
  },
  {
    "objectID": "chapter3_rna.html#sec-celltype_labeling",
    "href": "chapter3_rna.html#sec-celltype_labeling",
    "title": "4  Single-cell RNA-sequencing",
    "section": "4.6 Cell-type labeling, transfer learning",
    "text": "4.6 Cell-type labeling, transfer learning\nCell-type labeling is a critical step in single-cell RNA-sequencing analysis, where the goal is to assign meaningful biological identities to cell clusters or groups. Traditionally, this process relies on manual annotation using known marker genes, which can be time-consuming and subjective. Transfer learning has emerged as a powerful alternative, leveraging reference datasets with well-annotated cell types to predict labels for new datasets. By applying machine learning models trained on these references, transfer learning enables automated, scalable, and more consistent cell-type annotation. This approach is particularly valuable for studies with large datasets or when analyzing data from underexplored tissues or conditions. Despite its utility, challenges remain, such as aligning datasets across technical platforms or accounting for differences in cell-state diversity, but the method continues to refine and enhance the accuracy and efficiency of cell-type labeling.\n\nInput/Output. The input to cell-type labeling is two matrices, a reference dataset \\(X^{(\\text{ref})} \\in \\mathbb{R}^{n_1\\times p}\\) for \\(n_1\\) cells and \\(p\\) features (i.e., genes) where all \\(n_1\\) cells are labeled (and hence, why it’s called a “reference” dataset), and another dataset which is unlabeled and is the interest of your study, \\(X^{(\\text{target})} \\in \\mathbb{R}^{n_2\\times p}\\) for \\(n_2\\) cells and the same \\(p\\) features. If there are \\(K\\) clusters in \\(X^{(\\text{ref})}\\), the goal is to label each of the \\(n_2\\) cells in \\(X^{(\\text{target})}\\) with one (or more, or possible none) of the \\(K\\) clusters.\n\n\n4.6.1 Strategy 1: Good’ol marker genes\nCell-type identification using marker genes is a typical choice in single-cell RNA-seq analysis. This is typically performed after clustering cells into groups with similar gene expression profiles. This process involves leveraging existing literature to associate marker genes identified for each cluster with known cell types. While this approach requires significant manual effort and domain expertise – making it a human-in-the-loop process – this can be both its strength and its limitation. The manual aspect ensures transparency and allows researchers to contextualize results within the biology of the experiment, drawing on their understanding of the literature and experimental design.\nSome drawbacks of this approach: 1) It can be labor-intensive, dependent on the quality of prior knowledge, and requires the data analyst to have quite some expertise with the biological system. After all, you will need to figure out the most reliable set of genes to use – this will inevitably require you know have read quite a few papers to see which markers are commonly used by the community. 2) A more limiting drawback is that you will not be able to label “new” cell types in your dataset that do not have already established marker genes. After all, if you are “missing” the marker genes for a particular cell type, you might not even realize that that cell type is in your dataset.\nDespite these challenges, this method remains the most widely used because it minimizes the risk of major errors going unnoticed, making it a reliable approach for annotating cell types.\n\n\n\n\n\n\n\nFigure 4.21: The cell-type labeling step. See the tutorial in https://satijalab.org/seurat/articles/pbmc3k_tutorial.html.\n\n\n\n\n\n\n\n\n\n\n\nFigure 4.22: The markers for various cell types in this system.\n\n\n\n\n\n\n\n\n\n\n\nFigure 4.23: Using the DimPlot(pbmc, reduction = \"umap\", label = TRUE, pt.size = 0.5) + Seurat::NoLegend() function to visualize the data with the cell-type labels. (By default, the “labels” come from Seurat::Idents, which is set to the latest clustering by default. See the tutorial in https://satijalab.org/seurat/articles/pbmc3k_tutorial.html.\n\n\n\n\n\n\n4.6.2 In relation to scoring a gene-set\nRecall in Section 3.3.3 that we often create a score for the percentage of expression originating from the mitochondria genes for cell-filtering. The Seurat::PercentageFeatureSet function to do this does exactly what it sounds like – it computes the percentage of counts originating from the genes in the gene set (relative to all the counts in the cell).\nThere are fancier methods to compute this enrichment score (i.e., a score where a higher number denotes that that gene set is “more active” in a cell). Two popular methods for this account for the “background distribution” (UCell, (Andreatta and Carmona 2021)) or the gene regulatory network (AUCell, (Aibar et al. 2017)).\n\n\n4.6.3 Strategy 2: Deploying a classifier/Transfer learning\nIn the earlier days of single-cell analyses, there were quite a few methods that had you build a cell-type classifier on a reference dataset which had cell-type labels (typically developed by a large consortia, where you trust the cell-type labels) and you deploy the classifier on your dataset of interest. The classifier here predicts the cell type based on the gene expression. For instance, you can see (Abdelaal et al. 2019) which has relevant references. While these are probably the most statistically transparent, it usually takes a bit of time to learn the details of these methods to understand how statistically sound they are.\nThere are a few aspects of statistical interest in this direction:\n\nClassification with abstain/rejection: It is possible to design a classifier with a “reject” or “abstain” option. This way, if the classifier is unsure about the cell type label, then it can refuse to give a cell-type prediction. For instance, see scPred (Alquicira-Hernandez et al. 2019) and Hierarchical Reject (Theunissen et al. 2024) for one way this can be done.\nConformal inference: Conformal inference is a large statistical theoretical field. Essentially, instead of predicting one cell type, the method returns a set of potential cell types. (This is a different way to design methods with an abstain option, since a cell with an empty prediction set would essentially “abstain.”) See (Khatri and Bonn 2022) for an example.\nTransfer learning: This is the more commonly option done nowadays in this category. The term “transfer learning” refers to training a classifier on the reference dataset and then slightly modifying it (i.e., “transfer”) in order to your dataset of interest. Some examples of this is scArches (Lotfollahi et al. 2022) and its extension in treeArches (Michielsen et al. 2023).\n\nSome drawbacks: The main drawback is due to batch effects. After all, “by definition,” the dataset you’re analyzing is very likely coming from a different research lab/consortium that produced the reference dataset. While statistical theory offers great ways to diagnose a classifer assuming the training and test data originate from the same source, it is much harder to take advantage of this statistical theory if you blatantly know this is not the case.\n\n\n4.6.4 Strategy 3: Data integration\nDataset integration has become a widely used approach for cell-type labeling, especially when marker genes are not readily available. This strategy involves integrating a new dataset with an existing reference, often using methods that align the datasets in a shared space. Once integrated, cells in the new dataset are labeled based on their nearest neighbors in the reference. While this approach is powerful, it has limitations. A key advantage of this method is its visual interpretability; researchers can assess the alignment of the datasets in a low-dimensional embedding, adding a layer of protection against mislabeling or other errors. See Figure 4.24 for a schematic.\n\n\n\n\n\n\n\nFigure 4.24: Illustration of how to conceptualize data integration. (Stuart et al. 2019)\n\n\n\n\nA few notes:\n\nWe sometimes use the verb “align” two datasets or “project” one dataset onto another. Note that we’re just using these verbs conceptually, not in a literal statistical sense.\nMany methods used for batch correction (see Section 3.3.19) can be repurposed for this task.\nBe warned though: integration can sometimes “collapse” distinct points in the data, potentially masking subtle differences or even preventing the discovery of new cell types.\n\nFor some canonical examples of these methods: Using CCA ((Butler et al. 2018) and its followup, (Stuart et al. 2019)), using cell-cell graphs (MNN (Haghverdi et al. 2018) and Harmony (Korsunsky et al. 2019)), and regression (COMBAT-seq (Yuqing Zhang, Parmigiani, and Johnson 2020)). However, by far the most common way to do this currently is through deep-learning (which can be interpreted as a form of transfer learning, see scANVI (Xu et al. 2021) for example).\nJust to give you small taste of some of these above methods:\n\nAnchor pairs via CCA: (Stuart et al. 2019) essentially is a 3 step process: 1) first find many pairs of cells (one in your dataset, one in the reference) that are similar based on CCA, and then 2) use those pairs of cells to learn a transformation on how to convert the cells in your dataset into the cells in the reference dataset. Then, apply this transformation to all cells in your dataset.\nClustering and shrinking via Harmony: (Korsunsky et al. 2019) essentially is a 2 step process: 1) first cluster all the cells in both datasets together (yours with the reference dataset), where you want a clustering where each cluster represents a good mixture of cells from each dataset, then 2) “shrink” all the cells in each cluster towards its cluster center. Essentially, you treat the differences between cluster as “biological signal,” while the variability within a cluster as “technical noise.”\nDeep-learning (i.e., a really fancy regression), via scANVI: (Xu et al. 2021) essentially use one framework to: 1) learn a way to project all the cells in both datasets into one low-dimensional space where the low-dimensional space is “independent” of the dataset label (i.e., given a cell’s low-dimensional space, you can’t predict which dataset the cell came from), and then 2) combine a cell’s low-dimensional space with its dataset label to reconstruct the original gene expression (which is to ensure that the low-dimensional space was a meaningful representation).\n\n\n\n4.6.5 How to do this in practice\nThere’s not standardize way to do this, but I would personally recommend data integration using Harmony, where you integrate your (unlabeled) dataset of interest with a reference dataset with cell-type labels. See Section 3.3.19.\n\n\n4.6.6 A brief note on other approaches\nSee (Abdelaal et al. 2019; Mölbert and Haghverdi 2023) for benchmarking of cell-type labeling methods.\nNote that cell-type labeling is popularly being integrating into web-based all-in-one (i.e., “one-stop-shop”) platforms that automatically label your cells (see Azimuth (https://azimuth.hubmapconsortium.org/) and CellTypist (https://www.celltypist.org/) as an example). This is because cell-type labeling through writing your own code can be quite fickle that requires a lot of biological expertise to know what is “sensible”, so it’s beneficial to offload this concern to a platform. See (Tran et al. 2020; Luecken et al. 2022; Lance et al. 2022) (among many) that benchmark the dataset integration methods.\n\nRemark (The big challenges in cell-type integration). Broadly speaking, there are three major challenges in cell-type integration:\n\nHow do you pick the appropriate reference dataset?: (Mölbert and Haghverdi 2023) discusses the impact of the reference dataset itself. (Of course, using a different reference dataset will change your cell type labeling, so it’s important to plan beforehand how you will defend the critique of whether you even have an appropriate reference dataset.)\nHow “heavy-handed” do you want your integration to be?: If you have longitudinal samples (i.e., tissue from the same donors at different points, say, based on followup visits after therapy), these samples might be on different sequencing batches. This presents a unique conundrum – how can you differentiate between a “batch effect” and a “true biological effect due to different timepoints”? You might be interested to see papers such as CellANOVA for this (Z. Zhang et al. 2024). Even if you don’t have longitudinal samples, sometimes certain integration methods to overboard and merge too much together. For example, one of the reasons some researchers prefer reciprocal PCA to do integration (see https://satijalab.org/seurat/articles/integration_rpca.html) is precisely because it’s more “conservative” (i.e., is less aggressive in trying to remove batch effects). How will you, as the data analyst, determine how much is too much?\nHow do you know if your dataset contains cell types not in the reference?: If your dataset of interest has many cell types that aren’t in the reference, your data integration method might unknowingly wipe all this signal away since it is doing its job – it’s trying to integrate the two datasets together, under the pretense that both datasets are “similar.” This is where different methods start to exhibit different behavior. You might be interested in looking at methods such as popV (Ergen et al. 2024) that try to build a “uncertainty score.” (Many modern dataset integration methods now have this feature. However, you should always take these scores with a grain of salt since you can’t be too sure how calibrated these scores are.) CASi (Y. Wang et al. 2024) offers a different perspective on how to answer “in a longitudinal experiment, how do I even know if a new celltype emerges?”\n\nMy personal opinion? The best batch correction strategy is to do careful experimental design. One common strategy is to have a “control” tissue that you put into every sequencing run. That way, even across your different sequencing batches, you will have one set of cells that should be the same across every batch. This helps you get some additional clues on when a batch correction method is performing well.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Single-cell RNA-sequencing</span>"
    ]
  },
  {
    "objectID": "chapter3_rna.html#sec-trajectory",
    "href": "chapter3_rna.html#sec-trajectory",
    "title": "4  Single-cell RNA-sequencing",
    "section": "4.7 Trajectory analysis",
    "text": "4.7 Trajectory analysis\nTrajectory analysis aims to reconstruct the dynamic processes underlying cellular transitions, such as differentiation or response to stimuli, by organizing cells along a pseudotime axis. This is particularly valuable in single-cell RNA-sequencing studies, where cells are often sampled as a snapshot, rather than longitudinally, making it challenging to infer temporal relationships. Methods for trajectory analysis typically rely on one of two approaches: geometric relationships or biophysical models. Geometric methods use structures like cell-cell nearest-neighbor graphs to infer trajectories and identify branching points, capturing transitions and bifurcations in cell states. Alternatively, biophysical models leverage biological priors, such as splicing kinetics, gene-regulatory network dynamics, or metabolic states, to assign cells to pseudotime. Despite the complexities of inferring trajectories from static data, these approaches have proven effective in uncovering developmental pathways, understanding disease progression, and identifying rare transitional cell states. Trajectory analysis thus provides a framework to explore cellular dynamics in the absence of direct time-course experiments.\n\nInput/Output. The input to trajectory analysis is typically a matrix \\(X\\in \\mathbb{R}^{n\\times k}\\) for \\(n\\) cells and \\(k\\) latent dimensions. Depending on which trajectory method you’re using, you might need more inputs (such as cell clusters, specific cells that denote the start or end of the trajectory, etc.). The output is typically two things: 1) the pseudotime for each cell (i.e., a number between \\(0\\) and \\(1\\) for each cell), and 2) the trajectories (i.e., the order of which cells or cell clusters develop/reprogram into which other cells or cell clusters).\n\n\n4.7.1 A typical choice: Monocle\nMonocle (Trapnell et al. 2014) is a computational framework designed to infer the trajectory of single-cell gene expression profiles as they progress through a dynamic biological process, such as differentiation or reprogramming. It constructs a “pseudotime” ordering, which assigns a continuous value to each cell based on its transcriptional state, representing its progression along the biological process. This method is illustrated as a schematic in Figure 4.25.\nThe method begins by representing the gene expression profile of each cell as a point in a high-dimensional space \\(\\mathbb{R}^d\\), where \\(d\\) is the number of genes measured. To reduce noise and computational complexity, Monocle uses dimensionality reduction techniques, such as Independent Component Analysis (ICA), to project the data into a lower-dimensional space.\nNext, Monocle constructs a Minimum Spanning Tree (MST) in this reduced space. Each cell is treated as a node, and edges represent transcriptional similarity between cells, with weights corresponding to distances in the reduced space. The MST serves as the backbone for the trajectory and is used to identify the longest connected path, representing the main pseudotemporal progression.\nMathematically, pseudotime \\(\\tau_i\\) for a cell \\(i\\) is defined along this trajectory as: \\[\n\\tau_i = \\sum_{j=1}^{i} d(c_j, c_{j+1}),\n\\] where \\(d(c_j, c_{j+1})\\) is the geodesic distance between successive cells \\(c_j\\) and \\(c_{j+1}\\) along the path.\n\n\n\n\n\n\n\nFigure 4.25: From (Trapnell et al. 2014).\n\n\n\n\n\n\n4.7.2 How to do this in practice\nThere is no standardized way for trajectory analysis. However, Monocle13 is quite popular because: 1) it was one of the first ways developed to do trajectory analyses, 2) it is quite modular (so different researchers can switch out specific aspects for another), 3) each step is quite transparent mathematically, and 4) the software is well maintained and runs reasonably quickly.\n\n\n4.7.3 A highly active area of research: How much biology does your premise assume is true?\nMethods such as Monocle intrinsically assume that two cells in gene expression is a good proxy of both cells at a similar biological stage. In general, this is a huge assumption, and it has been shown to not hold in various settings. For instance, see (Saunders et al. 2023), or multi-omics in Chapter 5 and lineage-tracing in Chapter 8. (It’s possible that the transcriptome is not the most accurate omic to track cell development/response.)\nHowever, other methods based on the transcriptome could rely on different assumptions on how the biology relates to the math. Just to give some examples, Slingshot (Street et al. 2018) assumes the biological premise of Monocle and adds that the trajectory must be strictly branching. CytoTRACE (Gulati et al. 2020) instead assumes that as cells develop, there are less genes that are expressed. RNA velocity methods such as velocyto (La Manno et al. 2018) assume there is spliced/unspliced relation in mRNA fragments that can be used to learn a cell’s developmental stage, which offers a potentially more mechanistic perspective on how to learn the cell trajectories.\nA brief note on other approaches: See (Saelens et al. 2019; Cannoodt et al. 2021; Yifan Zhang et al. 2023) for large benchmarkings of various RNA velocity methods. See (Ancheta et al. 2024) for a benchmarking specific to RNA velocity.\n\n\n4.7.4 Talk to me about statistics: What makes this topic criminally difficult?\nTrajectory inference is a challenging statistical problem because it combines elements of both unsupervised and supervised learning in a highly complex setting. On one hand, it is unsupervised because you do not know the true pseudotime or branching structure of the data – these must be inferred from the observed high-dimensional gene expression profiles. On the other hand, it has a supervised flavor, as the goal is often to reconstruct a biologically meaningful trajectory that aligns with an underlying developmental or dynamic process. This dual nature makes the problem particularly tricky.\nSeveral assumptions exacerbate the difficulty (see (Saelens et al. 2019)):\n\nUnknown time and branching structure: The exact ordering of cells and the number or nature of branches in the trajectory are unknown. Inferring these from noisy and sparse single-cell data is highly nontrivial.\nAssumption of a trajectory: You are implicitly assuming that the data follows a trajectory, but not all biological processes have a well-defined or continuous progression. If the underlying process is more stochastic or does not follow a clear path, the trajectory inference may be misleading.\nEqual representation across pseudotime: Many methods assume an approximately equal number of cells sampled across all stages of the trajectory, but real datasets often have uneven representation, which can bias the inferred pseudotime or branching structure.\n\n\nRemark (Personal opinion: Lack of flushed-out statistical theory). A typical statistical theorem goes: 1) I have a specific data model in mind that tells me how data is generated, 2) I have an specific aspect about this model that I do not get to observe, but I wish to estimate from data, and then 3) based on a novel estimator, I can prove that as I get more data, under some reasonable assumptions, I can estimate the unknown aspects better and better.\nIn general, I have not seen this convincingly been done at all for almost any trajectory analysis for single-cell methods. This is due to the complexity of the biological assumptions you have justify, all the modeling assumptions you have justify (shown above), and then all the crazy proof techniques you would need to carefully manage to show how you can cast a natively unsupervised statistical problem into a supervised one.\nThis isn’t to say trajectory methods are not trustworthy. Certainly, these methods have uncovered tremendous biological insights. My comment here is that a lot of our understanding of trajectory methods is driven by the biological context, not so much by our mathematical insight.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Single-cell RNA-sequencing</span>"
    ]
  },
  {
    "objectID": "chapter3_rna.html#sec-beyond_scrna",
    "href": "chapter3_rna.html#sec-beyond_scrna",
    "title": "4  Single-cell RNA-sequencing",
    "section": "4.8 Concluding thoughts about scRNA-seq: Why bother with anything else?",
    "text": "4.8 Concluding thoughts about scRNA-seq: Why bother with anything else?\n\n4.8.1 Limited biological insights from scRNA-seq matrices\nRecall Remark 4.1, which highlights how much biological information is discarded during typical scRNA-seq workflows, particularly by tools like CellRanger. While the raw reads may contain rich and valuable insights – such as information on splicing, untranslated regions (UTRs), and alternative polyadenylation sites (APAs) – these are often overlooked in downstream analyses. If your analysis starts solely from the count matrix, you might miss significant aspects of cellular biology. For a broader perspective on what scRNA-seq still lacks, both biologically and methodologically, see review papers like (Lahnemann et al. 2020). Additionally, for those interested in computational challenges in single-cell analysis, resources like https://openproblems.bio/events/ provide an excellent starting point.\n\n\n4.8.2 Limited biological understanding of mRNA fragments\nIt’s important to remember that scRNA-seq primarily focuses on associating gene expression with biological phenomena. While we have a detailed map of gene expression, there is often limited context or understanding of how these genes interact functionally. mRNA fragments don’t act in isolation; their roles are inherently connected to proteins, cellular structures, and interactions with other cells. Moreover, scRNA-seq lacks direct insights into the functional impact of gene expression changes (as opposed to massively parallelized reporter assays), ignores temporal dynamics (as time information is lost when cells are lysed, as opposed to live-cell imaging), and omits structural context like cellular shape and protein localization (as opposed to other imaging technologies).\n\n\n4.8.3 Translational limitation of scRNA-seq, and bulk deconvolution\nAs we showed in the footnotes of Section 4.2, scRNA-seq is extremely expensive. This makes any scRNA-seq technology quite unlikely to become a routine tool in clinical settings like hospitals. This is one of the main appeals of bulk deconvolution methods (where you can estimate cell-type proportions for many tissues for many donors, see (Cobos et al. 2023; H. Nguyen et al. 2024; Maden et al. 2023)), since bulk RNA sequencing is a lot cheaper than scRNA sequencing.\n\n\n4.8.4 Not all RNA is mRNA\nIf you have not studied biology before, it might shock you to realize that mRNA is only one specific type of RNA molecules. See Figure 4.26 for all the different types of mRNA molecules. mRNA is simply the only RNA molecules to become translated into proteins. In fact, this is only from 1%-5% of all RNA molecules in a cell14. There is incredible biology being done to investigate the other roles of the other RNA molecules, for instance lncRNA (Statello et al. 2021) and microRNA (Shang et al. 2023).\n\n\n\n\n\n\n\nFigure 4.26: From https://www.youtube.com/watch?v=FThA4Vxs3v4\n\n\n\n\n\n\n4.8.5 Importance of other omics\nTo truly understand the complexity of cellular systems, we need to integrate information from multiple modalities. This idea can be illustrated by the “blind men and the elephant” analogy, Figure 4.27: each single-cell modality provides only a partial perspective of the whole, and no single technology can offer a complete picture. For instance, scRNA-seq captures transcriptional snapshots, while other methods focus on proteins, chromatin, or spatial organization. Combining these modalities is essential to gain a holistic view of cellular function and dynamics.\n\n\n\n\n\n\n\nFigure 4.27: The “blind men and the elephant” analogy. Each omic gives you one perspective of the cell, and it’s important to put all these omics together to get the full picture.\n\n\n\n\n\nRemark (Personal opinion: The abundance of computational tools for scRNA-seq doesn’t necessarily reflect its importance as an omic, but rather its standardization and well-organized data structure). The explosion of computational tools for scRNA-seq, particularly from 3’ short-read technologies, is less about it being the most biologically critical modality and more about the ease of working with the data. The technology is highly standardized, producing consistent and structured outputs, such as count matrices, that are straightforward to analyze. This standardization has enabled rapid tool development and widespread adoption, creating a feedback loop where more tools emerge as the data becomes more accessible. See (Eisenstein 2020) for an opinion piece.\n\n\nRemark (The quadruple threat in cell biology). Suppose you collect data, analyze it, and realize your findings don’t align with current biological knowledge. Depending on your expertise, you might blame one of these four major aspects:\n\nYour computational/statistical methods aren’t good: This is often the perspective of a computational/statistical person, where you blame the way you analyzed the data. This might imply there is room for better analytical tools.\nYou didn’t collect data using the appropriate technology: This is often the perspective of a bio-engineering person, where you blame the technology used or the omic being assayed. This might imply there’s a better technology that can be developed to measure something much more directly relevant to your biological question.\nYou didn’t collect enough data from a diverse set of tissues/donors: This is often the perspective of a large consortium, where you blame the limited number of samples being used to draw this conclusion. Perhaps by pooling together manpower, funding, and expertise, the collective group of researchers can have enough power to learn the desired biology.\nThe biology is much more complicated than you realize: This is often the perspective of a biologist – how are you so sure your finding isn’t a fluke, but instead, it’s biological novelty? Is there a biological premise on why your findings might be reflective of reality?\n\nThis is showcase: 1) the thrill and unending expanse of cell biology, and 2) cell biology is now so complicated that it is unrealistic to learn it all. We (as researchers) need to specialize in a particular area, gain a preliminary understanding of all the other aspects of cell biology, and find great collaborators who complement your own expertise. For instance, developing better computational methods is not very impactful if the community knows that the scientific limitation isn’t the computational methods.\n\n\n\n\n\nAbdelaal, Tamim, Lieke Michielsen, Davy Cats, Dylan Hoogduin, Hailiang Mei, Marcel JT Reinders, and Ahmed Mahfouz. 2019. “A Comparison of Automatic Cell Identification Methods for Single-Cell RNA Sequencing Data.” Genome Biology 20 (1): 1–19.\n\n\nAibar, Sara, Carmen Bravo González-Blas, Thomas Moerman, Vân Anh Huynh-Thu, Hana Imrichova, Gert Hulselmans, Florian Rambow, et al. 2017. “SCENIC: Single-Cell Regulatory Network Inference and Clustering.” Nature Methods 14 (11): 1083–86.\n\n\nAlquicira-Hernandez, Jose, Anuja Sathe, Hanlee P Ji, Quan Nguyen, and Joseph E Powell. 2019. “scPred: Accurate Supervised Method for Cell-Type Classification from Single-Cell RNA-Seq Data.” Genome Biology 20: 1–17.\n\n\nAncheta, Sarah, Leah Dorman, Guillaume Le Treut, Abel Gurung, Loic Alain Royer, Alejandro Granados, and Merlin Lange. 2024. “Challenges and Progress in RNA Velocity: Comparative Analysis Across Multiple Biological Contexts.” bioRxiv, 2024–06.\n\n\nAndreatta, Massimo, and Santiago J Carmona. 2021. “UCell: Robust and Scalable Single-Cell Gene Signature Scoring.” Computational and Structural Biotechnology Journal 19: 3796–98.\n\n\nArabi, Tarek Ziad, Aliyah Abdulmohsen Alabdulqader, Belal Nedal Sabbah, and Abderrahman Ouban. 2023. “Brain-Inhabiting Bacteria and Neurodegenerative Diseases: The ‘Brain Microbiome’ Theory.” Frontiers in Aging Neuroscience 15: 1240945.\n\n\nArora, Ankita, Raeann Goering, Hei Yong G Lo, Joelle Lo, Charlie Moffatt, and J Matthew Taliaferro. 2022. “The Role of Alternative Polyadenylation in the Regulation of Subcellular RNA Localization.” Frontiers in Genetics 12: 818668.\n\n\nBaran, Yael, Akhiad Bercovich, Arnau Sebe-Pedros, Yaniv Lubling, Amir Giladi, Elad Chomsky, Zohar Meir, Michael Hoichman, Aviezer Lifshitz, and Amos Tanay. 2019. “MetaCell: Analysis of Single-Cell RNA-Seq Data Using k-Nn Graph Partitions.” Genome Biology 20 (1): 1–19.\n\n\nBenjamini, Yoav, and Daniel Yekutieli. 2001. “The Control of the False Discovery Rate in Multiple Testing Under Dependency.” Annals of Statistics, 1165–88.\n\n\nBilous, Mariia, Léonard Hérault, Aurélie AG Gabriel, Matei Teleman, and David Gfeller. 2024. “Building and Analyzing Metacells in Single-Cell Genomics Data.” Molecular Systems Biology, 1–23.\n\n\nBoyeau, Pierre, Jeffrey Regier, Adam Gayoso, Michael I Jordan, Romain Lopez, and Nir Yosef. 2023. “An Empirical Bayes Method for Differential Expression Analysis of Single Cells with Deep Generative Models.” Proceedings of the National Academy of Sciences 120 (21): e2209124120.\n\n\nButler, Andrew, Paul Hoffman, Peter Smibert, Efthymia Papalexi, and Rahul Satija. 2018. “Integrating Single-Cell Transcriptomic Data Across Different Conditions, Technologies, and Species.” Nature Biotechnology 36 (5): 411–20.\n\n\nCannoodt, Robrecht, Wouter Saelens, Louise Deconinck, and Yvan Saeys. 2021. “Spearheading Future Omics Analyses Using Dyngen, a Multi-Modal Simulator of Single Cells.” Nature Communications 12 (1): 3942.\n\n\nCao, Yingying, Simo Kitanovski, Ralf Küppers, and Daniel Hoffmann. 2021. “UMI or Not UMI, That Is the Question for scRNA-Seq Zero-Inflation.” Nature Biotechnology, 1–2.\n\n\nChen, J, and WA Weiss. 2015. “Alternative Splicing in Cancer: Implications for Biology and Therapy.” Oncogene 34 (1): 1–14.\n\n\nChen, Wenan, Yan Li, John Easton, David Finkelstein, Gang Wu, and Xiang Chen. 2018. “UMI-Count Modeling and Differential Expression Analysis for Single-Cell RNA Sequencing.” Genome Biology 19 (1): 70.\n\n\nCobos, Francisco Avila, Mohammad Javad Najaf Panah, Jessica Epps, Xiaochen Long, Tsz-Kwong Man, Hua-Sheng Chiu, Elad Chomsky, et al. 2023. “Effective Methods for Bulk RNA-Seq Deconvolution Using scnRNA-Seq Transcriptomes.” Genome Biology 24 (1): 177.\n\n\nDal Molin, Alessandra, Giacomo Baruzzo, and Barbara Di Camillo. 2017. “Single-Cell RNA-Sequencing: Assessment of Differential Expression Analysis Methods.” Frontiers in Genetics 8: 62.\n\n\nDas, Samarendra, Anil Rai, and Shesh N Rai. 2022. “Differential Expression Analysis of Single-Cell Rna-Seq Data: Current Statistical Approaches and Outstanding Challenges.” Entropy 24 (7): 995.\n\n\nDenisenko, Elena, Belinda B Guo, Matthew Jones, Rui Hou, Leanne De Kock, Timo Lassmann, Daniel Poppe, et al. 2020. “Systematic Assessment of Tissue Dissociation and Storage Biases in Single-Cell and Single-Nucleus RNA-Seq Workflows.” Genome Biology 21 (1): 1–25.\n\n\nDing, Jiarui, Xian Adiconis, Sean K Simmons, Monika S Kowalczyk, Cynthia C Hession, Nemanja D Marjanovic, Travis K Hughes, et al. 2020. “Systematic Comparison of Single-Cell and Single-Nucleus RNA-Sequencing Methods.” Nature Biotechnology 38 (6): 737–46.\n\n\nEisenstein, Michael. 2020. “The Secret Life of Cells.” Nature Methods 17: 7–10.\n\n\nErgen, Can, Galen Xing, Chenling Xu, Martin Kim, Michael Jayasuriya, Erin McGeever, Angela Oliveira Pisco, Aaron Streets, and Nir Yosef. 2024. “Consensus Prediction of Cell Type Labels in Single-Cell Data with popV.” Nature Genetics, 1–8.\n\n\nGrishkevich, Vladislav, and Itai Yanai. 2014. “Gene Length and Expression Level Shape Genomic Novelties.” Genome Research 24 (9): 1497–1503.\n\n\nGulati, Gunsagar S, Shaheen S Sikandar, Daniel J Wesche, Anoop Manjunath, Anjan Bharadwaj, Mark J Berger, Francisco Ilagan, et al. 2020. “Single-Cell Transcriptional Diversity Is a Hallmark of Developmental Potential.” Science 367 (6476): 405–11.\n\n\nHaghverdi, Laleh, Aaron TL Lun, Michael D Morgan, and John C Marioni. 2018. “Batch Effects in Single-Cell RNA-Sequencing Data Are Corrected by Matching Mutual Nearest Neighbors.” Nature Biotechnology 36 (5): 421–27.\n\n\nHe, Liang, Jose Davila-Velderrain, Tomokazu S Sumida, David A Hafler, Manolis Kellis, and Alexander M Kulminski. 2021. “NEBULA Is a Fast Negative Binomial Mixed Model for Differential or Co-Expression Analysis of Large-Scale Multi-Subject Single-Cell Data.” Communications Biology 4 (1): 629.\n\n\nHou, Wenpin, Zhicheng Ji, Zeyu Chen, E John Wherry, Stephanie C Hicks, and Hongkai Ji. 2023. “A Statistical Framework for Differential Pseudotime Analysis with Multiple Single-Cell RNA-Seq Samples.” Nature Communications 14 (1): 7286.\n\n\nJaakkola, Maria K, Fatemeh Seyednasrollah, Arfa Mehmood, and Laura L Elo. 2017. “Comparison of Methods to Detect Differentially Expressed Genes Between Single-Cell Populations.” Briefings in Bioinformatics 18 (5): 735–43.\n\n\nJiang, Ruochen, Tianyi Sun, Dongyuan Song, and Jingyi Jessica Li. 2022. “Statistics or Biology: The Zero-Inflation Controversy about scRNA-Seq Data.” Genome Biology 23 (1): 31.\n\n\nJunttila, Sini, Joahnnes Smolander, and Laura L Elo. 2022. “Benchmarking Methods for Detecting Differential States Between Conditions from Multi-Subject Single-Cell RNA-Seq Data.” Briefings in Bioinformatics 23 (5): bbac286.\n\n\nKhatri, Robin, and Stefan Bonn. 2022. “Uncertainty Estimation for Single-Cell Label Transfer.” In Conformal and Probabilistic Prediction with Applications, 109–28. PMLR.\n\n\nKim, Tae Hyun, Xiang Zhou, and Mengjie Chen. 2020. “Demystifying ‘Drop-Outs’ in Single-Cell UMI Data.” Genome Biology 21 (1): 196.\n\n\nKorsunsky, Ilya, Nghia Millard, Jean Fan, Kamil Slowikowski, Fan Zhang, Kevin Wei, Yuriy Baglaenko, Michael Brenner, Po-ru Loh, and Soumya Raychaudhuri. 2019. “Fast, Sensitive and Accurate Integration of Single-Cell Data with Harmony.” Nature Methods, 1–8.\n\n\nLa Manno, Gioele, Ruslan Soldatov, Amit Zeisel, Emelie Braun, Hannah Hochgerner, Viktor Petukhov, Katja Lidschreiber, et al. 2018. “RNA Velocity of Single Cells.” Nature 560 (7719): 494–98.\n\n\nLahnemann, David, Johannes Koster, Ewa Szczurek, Davis J McCarthy, Stephanie C Hicks, Mark D Robinson, Catalina A Vallejos, et al. 2020. “Eleven Grand Challenges in Single-Cell Data Science.” Genome Biology 21 (1): 1–35.\n\n\nLance, Christopher, Malte D Luecken, Daniel B Burkhardt, Robrecht Cannoodt, Pia Rautenstrauch, Anna Laddach, Aidyn Ubingazhibov, et al. 2022. “Multimodal Single Cell Data Integration Challenge: Results and Lessons Learned.” BioRxiv, 2022–04.\n\n\nLeung, Szi Kay, Aaron R Jeffries, Isabel Castanho, Ben T Jordan, Karen Moore, Jonathan P Davies, Emma L Dempster, et al. 2021. “Full-Length Transcript Sequencing of Human and Mouse Cerebral Cortex Identifies Widespread Isoform Diversity and Alternative Splicing.” Cell Reports 37 (7).\n\n\nLi, Yumei, Xinzhou Ge, Fanglue Peng, Wei Li, and Jingyi Jessica Li. 2022. “Exaggerated False Positives by Popular Differential Expression Methods When Analyzing Human Population Samples.” Genome Biology 23 (1): 1–13.\n\n\nLin, Kevin Z, Yixuan Qiu, and Kathryn Roeder. 2024. “eSVD-DE: Cohort-Wide Differential Expression in Single-Cell RNA-Seq Data Using Exponential-Family Embeddings.” BMC Bioinformatics 25 (1): 113.\n\n\nLiu, Jiayi, Anat Kreimer, and Wei Vivian Li. 2023. “Differential Variability Analysis of Single-Cell Gene Expression Data.” Briefings in Bioinformatics 24 (5): bbad294.\n\n\nLiu, Yunqing, Jiayi Zhao, Taylor S Adams, Ningya Wang, Jonas C Schupp, Weimiao Wu, John E McDonough, et al. 2023. “iDESC: Identifying Differential Expression in Single-Cell RNA Sequencing Data with Multiple Subjects.” BMC Bioinformatics 24 (1): 318.\n\n\nLopes, Inês, Gulam Altab, Priyanka Raina, and JoãO Pedro De Magalhães. 2021. “Gene Size Matters: An Analysis of Gene Length in the Human Genome.” Frontiers in Genetics 12: 559998.\n\n\nLotfollahi, Mohammad, Mohsen Naghipourfar, Malte D Luecken, Matin Khajavi, Maren Büttner, Marco Wagenstetter, Žiga Avsec, et al. 2022. “Mapping Single-Cell Data to Reference Atlases by Transfer Learning.” Nature Biotechnology 40 (1): 121–30.\n\n\nLove, Michael I, Wolfgang Huber, and Simon Anders. 2014. “Moderated Estimation of Fold Change and Dispersion for RNA-Seq Data with DESeq2.” Genome Biology 15 (12): 550.\n\n\nLuecken, Malte D, Maren Büttner, Kridsadakorn Chaichoompu, Anna Danese, Marta Interlandi, Michaela F Müller, Daniel C Strobl, et al. 2022. “Benchmarking Atlas-Level Data Integration in Single-Cell Genomics.” Nature Methods 19 (1): 41–50.\n\n\nMa, Ying, Shiquan Sun, Xuequn Shang, Evan T Keller, Mengjie Chen, and Xiang Zhou. 2020. “Integrative Differential Expression and Gene Set Enrichment Analysis Using Summary Statistics for scRNA-Seq Studies.” Nature Communications 11 (1): 1–13.\n\n\nMaden, Sean K, Sang Ho Kwon, Louise A Huuki-Myers, Leonardo Collado-Torres, Stephanie C Hicks, and Kristen R Maynard. 2023. “Challenges and Opportunities to Computationally Deconvolve Heterogeneous Tissue with Varying Cell Sizes Using Single-Cell RNA-Sequencing Datasets.” Genome Biology 24 (1): 288.\n\n\nMattick, John S, Paulo P Amaral, Piero Carninci, Susan Carpenter, Howard Y Chang, Ling-Ling Chen, Runsheng Chen, et al. 2023. “Long Non-Coding RNAs: Definitions, Functions, Challenges and Recommendations.” Nature Reviews Molecular Cell Biology 24 (6): 430–47.\n\n\nMichielsen, Lieke, Mohammad Lotfollahi, Daniel Strobl, Lisa Sikkema, Marcel JT Reinders, Fabian J Theis, and Ahmed Mahfouz. 2023. “Single-Cell Reference Mapping to Construct and Extend Cell-Type Hierarchies.” NAR Genomics and Bioinformatics 5 (3): lqad070.\n\n\nMölbert, Carla, and Laleh Haghverdi. 2023. “Adjustments to the Reference Dataset Design Improve Cell Type Label Transfer.” Frontiers in Bioinformatics 3: 1150099.\n\n\nMubeen, Sarah, Alpha Tom Kodamullil, Martin Hofmann-Apitius, and Daniel Domingo-Fernández. 2022. “On the Influence of Several Factors on Pathway Enrichment Analysis.” Briefings in Bioinformatics 23 (3): bbac143.\n\n\nNeufeld, Anna, Lucy L Gao, Joshua Popp, Alexis Battle, and Daniela Witten. 2022. “Inference After Latent Variable Estimation for Single-Cell RNA Sequencing Data.” arXiv Preprint arXiv:2207.00554.\n\n\nNguyen, Hai CT, Bukyung Baik, Sora Yoon, Taesung Park, and Dougu Nam. 2023. “Benchmarking Integration of Single-Cell Differential Expression.” Nature Communications 14 (1): 1570.\n\n\nNguyen, Hung, Ha Nguyen, Duc Tran, Sorin Draghici, and Tin Nguyen. 2024. “Fourteen Years of Cellular Deconvolution: Methodology, Applications, Technical Evaluation and Outstanding Challenges.” Nucleic Acids Research 52 (9): 4761–83.\n\n\nPeng, Minshi, Brie Wamsley, Andrew G Elkins, Daniel M Geschwind, Yuting Wei, and Kathryn Roeder. 2021. “Cell Type Hierarchy Reconstruction via Reconciliation of Multi-Resolution Cluster Tree.” bioRxiv.\n\n\nPrater, Katherine E, and Kevin Z Lin. 2024. “All the Single Cells: Single-Cell Transcriptomics/Epigenomics Experimental Design and Analysis Considerations for Glial Biologists.” Glia.\n\n\nRobinson, Mark D, and Gordon K Smyth. 2007. “Moderated Statistical Tests for Assessing Differences in Tag Abundance.” Bioinformatics 23 (21): 2881–87.\n\n\nRobles-Espinoza, Carla Daniela, Pejman Mohammadi, Ximena Bonilla, and Maria Gutierrez-Arcelus. 2021. “Allele-Specific Expression: Applications in Cancer and Technical Considerations.” Current Opinion in Genetics & Development 66: 10–19.\n\n\nSaelens, Wouter, Robrecht Cannoodt, Helena Todorov, and Yvan Saeys. 2019. “A Comparison of Single-Cell Trajectory Inference Methods.” Nature Biotechnology 37 (5): 547–54.\n\n\nSato, Yuma, Shumpei Watanabe, Yoshinari Fukuda, Takao Hashiguchi, Yusuke Yanagi, and Shinji Ohno. 2018. “Cell-to-Cell Measles Virus Spread Between Human Neurons Is Dependent on Hemagglutinin and Hyperfusogenic Fusion Protein.” Journal of Virology 92 (6): 10–1128.\n\n\nSaunders, Lauren M, Sanjay R Srivatsan, Madeleine Duran, Michael W Dorrity, Brent Ewing, Tor H Linbo, Jay Shendure, et al. 2023. “Embryo-Scale Reverse Genetics at Single-Cell Resolution.” Nature 623 (7988): 782–91.\n\n\nSchefzik, Roman, Julian Flesch, and Angela Goncalves. 2021. “Fast Identification of Differential Distributions in Single-Cell RNA-Sequencing Data with waddR.” Bioinformatics 37 (19): 3204–11.\n\n\nShang, Renfu, Seungjae Lee, Gayan Senavirathne, and Eric C Lai. 2023. “microRNAs in Action: Biogenesis, Function and Regulation.” Nature Reviews Genetics 24 (12): 816–33.\n\n\nSiletti, Kimberly, Rebecca Hodge, Alejandro Mossi Albiach, Ka Wai Lee, Song-Lin Ding, Lijuan Hu, Peter Lönnerberg, et al. 2023. “Transcriptomic Diversity of Cell Types Across the Adult Human Brain.” Science 382 (6667): eadd7046.\n\n\nSong, Dongyuan, Kexin Li, Xinzhou Ge, and Jingyi Jessica Li. 2023. “ClusterDE: A Post-Clustering Differential Expression (DE) Method Robust to False-Positive Inflation Caused by Double Dipping.” Research Square.\n\n\nSquair, Jordan W, Matthieu Gautier, Claudi Kathe, Mark A Anderson, Nicholas D James, Thomas H Hutson, Rémi Hudelle, et al. 2021. “Confronting False Discoveries in Single-Cell Differential Expression.” Nature Communications 12 (1): 5692.\n\n\nStatello, Luisa, Chun-Jie Guo, Ling-Ling Chen, and Maite Huarte. 2021. “Gene Regulation by Long Non-Coding RNAs and Its Biological Functions.” Nature Reviews Molecular Cell Biology 22 (2): 96–118.\n\n\nStreet, Kelly, Davide Risso, Russell B Fletcher, Diya Das, John Ngai, Nir Yosef, Elizabeth Purdom, and Sandrine Dudoit. 2018. “Slingshot: Cell Lineage and Pseudotime Inference for Single-Cell Transcriptomics.” BMC Genomics 19 (1): 477.\n\n\nStuart, Tim, Andrew Butler, Paul Hoffman, Christoph Hafemeister, Efthymia Papalexi, William M Mauck III, Yuhan Hao, Marlon Stoeckius, Peter Smibert, and Rahul Satija. 2019. “Comprehensive Integration of Single-Cell Data.” Cell 177 (7): 1888–1902.\n\n\nSubramanian, Aravind, Pablo Tamayo, Vamsi K Mootha, Sayan Mukherjee, Benjamin L Ebert, Michael A Gillette, Amanda Paulovich, et al. 2005. “Gene Set Enrichment Analysis: A Knowledge-Based Approach for Interpreting Genome-Wide Expression Profiles.” Proceedings of the National Academy of Sciences 102 (43): 15545–50.\n\n\nSvensson, Valentine. 2020. “Droplet scRNA-Seq Is Not Zero-Inflated.” Nature Biotechnology 38 (2): 147–50.\n\n\n———. 2021. “Reply to: UMI or Not UMI, That Is the Question for scRNA-Seq Zero-Inflation.” Nature Biotechnology 39 (2): 160–60.\n\n\nSwaminath, Sharmada, and Alistair B Russell. 2024. “The Use of Single-Cell RNA-Seq to Study Heterogeneity at Varying Levels of Virus–Host Interactions.” PLoS Pathogens 20 (1): e1011898.\n\n\nTheunissen, Lauren, Thomas Mortier, Yvan Saeys, and Willem Waegeman. 2024. “Uncertainty-Aware Single-Cell Annotation with a Hierarchical Reject Option.” Bioinformatics 40 (3): btae128.\n\n\nTraag, Vincent A, Ludo Waltman, and Nees Jan Van Eck. 2019. “From Louvain to Leiden: Guaranteeing Well-Connected Communities.” Scientific Reports 9 (1): 1–12.\n\n\nTran, Hoa Thi Nhu, Kok Siong Ang, Marion Chevrier, Xiaomeng Zhang, Nicole Yee Shin Lee, Michelle Goh, and Jinmiao Chen. 2020. “A Benchmark of Batch-Effect Correction Methods for Single-Cell RNA Sequencing Data.” Genome Biology 21 (1): 1–32.\n\n\nTrapnell, Cole, Davide Cacchiarelli, Jonna Grimsby, Prapti Pokharel, Shuqiang Li, Michael Morse, Niall J Lennon, Kenneth J Livak, Tarjei S Mikkelsen, and John L Rinn. 2014. “The Dynamics and Regulators of Cell Fate Decisions Are Revealed by Pseudotemporal Ordering of Single Cells.” Nature Biotechnology 32 (4): 381.\n\n\nWang, Tianyu, Boyang Li, Craig E Nelson, and Sheida Nabavi. 2019. “Comparative Analysis of Differential Gene Expression Analysis Tools for Single-Cell RNA Sequencing Data.” BMC Bioinformatics 20 (1): 1–16.\n\n\nWang, Yizhuo, Christopher R Flowers, Michael Wang, Xuelin Huang, and Ziyi Li. 2024. “CASi: A Framework for Cross-Timepoint Analysis of Single-Cell RNA Sequencing Data.” Scientific Reports 14 (1): 10633.\n\n\nWolf, F Alexander, Fiona K Hamey, Mireya Plass, Jordi Solana, Joakim S Dahlin, Berthold Göttgens, Nikolaus Rajewsky, Lukas Simon, and Fabian J Theis. 2019. “PAGA: Graph Abstraction Reconciles Clustering with Trajectory Inference Through a Topology Preserving Map of Single Cells.” Genome Biology 20 (1): 59.\n\n\nXu, Chenling, Romain Lopez, Edouard Mehlman, Jeffrey Regier, Michael I Jordan, and Nir Yosef. 2021. “Probabilistic Harmonization and Annotation of Single-Cell Transcriptomics Data with Deep Generative Models.” Molecular Systems Biology 17 (1): e9620.\n\n\nYu, Lijia, Yue Cao, Jean YH Yang, and Pengyi Yang. 2022. “Benchmarking Clustering Algorithms on Estimating the Number of Cell Types from Single-Cell RNA-Sequencing Data.” Genome Biology 23 (1): 49.\n\n\nZeng, Hongkui. 2022. “What Is a Cell Type and How to Define It?” Cell 185 (15): 2739–55.\n\n\nZhang, Mengqi, Si Liu, Zhen Miao, Fang Han, Raphael Gottardo, and Wei Sun. 2022. “IDEAS: Individual Level Differential Expression Analysis for Single-Cell RNA-Seq Data.” Genome Biology 23 (1): 1–17.\n\n\nZhang, Shixiong, Xiangtao Li, Qiuzhen Lin, and Ka-Chun Wong. 2020. “Review of Single-Cell RNA-Seq Data Clustering for Cell Type Identification and Characterization.” arXiv Preprint arXiv:2001.01006.\n\n\nZhang, Yifan, Duc Tran, Tin Nguyen, Sergiu M Dascalu, and Frederick C Harris Jr. 2023. “A Robust and Accurate Single-Cell Data Trajectory Inference Method Using Ensemble Pseudotime.” BMC Bioinformatics 24 (1): 55.\n\n\nZhang, Yuqing, Giovanni Parmigiani, and W Evan Johnson. 2020. “ComBat-Seq: Batch Effect Adjustment for RNA-Seq Count Data.” NAR Genomics and Bioinformatics 2 (3): lqaa078.\n\n\nZhang, Zhaojun, Divij Mathew, Tristan L Lim, Kaishu Mason, Clara Morral Martinez, Sijia Huang, E John Wherry, et al. 2024. “Recovery of Biological Signals Lost in Single-Cell Batch Integration with CellANOVA.” Nature Biotechnology, 1–17.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Single-cell RNA-sequencing</span>"
    ]
  },
  {
    "objectID": "chapter3_rna.html#footnotes",
    "href": "chapter3_rna.html#footnotes",
    "title": "4  Single-cell RNA-sequencing",
    "section": "",
    "text": "Technically, genomics (as a field) is a broader categorization and encapsulates genetics. But usually when people say they work on “genomics,” they are colloquially implying they work on biology that is not genetics (otherwise, they usually say they’re a geneticist).↩︎\nThis term is not very often used anymore. It was an umbrella label popularized in the mid-2000s. We instead typically refer to a more specific category of technology. For example, most of the data in this scRNA-seq chapter are referred to as “short-read 3′ single-cell RNA-sequencing.” (You could throw in “droplet-based” and “UMI” to be even more precise, but that’s usually not needed in most casual contexts.)↩︎\nSee https://cole-trapnell-lab.github.io/monocle3/docs/introduction/.↩︎\nSee https://www.qiagen.com/us/resources/faq?id=06a192c2-e72d-42e8-9b40-3171e1eb4cb8.↩︎\nFor more context about PCR, see: https://www.youtube.com/watch?v=zaXKQ70q4KQ.↩︎\nThis can be a bit confusing. When we refer to the “10x machine” (e.g., the 10x Chromium platform, as described at https://www.10xgenomics.com/products/universal-three-prime-gene-expression), we are typically talking about the steps involved in droplet formation, cDNA synthesis. PCR and library preparation are usually not done in the 10x machine itself. Also, the resulting libraries are not sequenced on the 10x machine itself. Instead, sequencing is performed on a separate platform, such as an Illumina machine (e.g., see https://www.illumina.com/systems/sequencing-platforms.html).↩︎\nSee https://kb.10xgenomics.com/hc/en-us/articles/360000939852-What-is-the-difference-between-Single-Cell-3-and-5-Gene-Expression-libraries and https://kb.10xgenomics.com/hc/en-us/articles/218137123-What-is-the-expected-size-range-for-amplified-cDNA for typical length of the cDNA fragment.↩︎\nJust to give you context, a “typical” gene is thousands of base pairs (it depends on if you’re talking about the transcript itself, with or without introns, etc.) See (Lopes et al. 2021; Grishkevich and Yanai 2014; Leung et al. 2021). So what “short-read 3’ RNA-sequencing” is referring to is that we only measure (roughly) 400 base pairs on the 3’ side of the gene.↩︎\nSee https://satijalab.org/costpercell (but most institutions publish their own rates. For example, see https://www.bumc.bu.edu/microarray/pricing/ (for BU) and https://cat.ucsf.edu/sequencing (UCSF) for typical rates. For students who are not familiar with wet-lab experiments, a rough ballpark sense of cost is that a “reasonable” setting (i.e., sequencing depth of 20,000 reads per cell across 10,000 cells) costs about $2000. This is usually for just one sample (i.e., one tissue for one donor), so as your experiment involves more tissues or more donors, you multiply $2000 by the total number of samples you’re thinking of. Remember, this is gets you a random set of 10,000 cells in the sample – your biological question might only care about a small cell population among these 10,000 cells.↩︎\nSee https://www.10xgenomics.com/support/software/cell-ranger/latest/algorithms-overview/cr-gex-algorithm on how CellRanger works. See https://www.10xgenomics.com/analysis-guides/quality-assessment-using-the-cell-ranger-web-summary for the typical output of CellRanger. Importantly, usually only 60%-70% of the reads get mapped to the transcriptome (i.e., “genes”). So remember: 1) not all the 20,000 expected reads get mapped to the transcriptome, and 2) these are reads before you account for UMI duplicates. A reasonable ballpark is that 20,000 reads yields 4,000 UMIs, so this means in your scRNA-seq matrix, the total reads per cell is roughly 4,000 (across roughly 20,000 genes). See https://cf.10xgenomics.com/samples/cell-exp/2.1.0/pbmc8k/pbmc8k_web_summary.html for an example, or https://www.10xgenomics.com/datasets for other examples.↩︎\nSee https://cole-trapnell-lab.github.io/monocle3/docs/introduction/.↩︎\nSee https://cole-trapnell-lab.github.io/monocle3/docs/introduction/.↩︎\nSee https://cole-trapnell-lab.github.io/monocle3/docs/introduction/.↩︎\nSee https://www.qiagen.com/us/resources/faq?id=06a192c2-e72d-42e8-9b40-3171e1eb4cb8.↩︎",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Single-cell RNA-sequencing</span>"
    ]
  },
  {
    "objectID": "chapter4_protein.html",
    "href": "chapter4_protein.html",
    "title": "5  ‘Single-cell’ proteomics",
    "section": "",
    "text": "5.1 Review of the central dogma\nThe central dogma of molecular biology outlines the flow of genetic information within a cell: DNA is transcribed into RNA, and RNA is then translated into protein (see Figure 5.1). Specifically, coding genes in DNA are transcribed into messenger RNA (mRNA), which serves as a template for protein synthesis. During translation, mRNA sequences are read in sets of three nucleotides, known as codons, each corresponding to a specific amino acid. These amino acids are then linked together to form proteins, which carry out a vast array of functions within the cell. While this process provides a foundational framework, it is a dramatic over-simplification. As we’ll explore later in the course, the correlation between a gene and its corresponding protein levels is often surprisingly low, highlighting the complexity of gene expression regulation.\nUnderstanding proteins is crucial because they are the primary effectors of cellular function. Most cellular activities — whether structural, enzymatic, or signaling—are mediated by proteins. While RNA intermediates, such as mRNA, play important roles in carrying genetic information, the majority of RNA fragments never leave the cell, with a few exceptions like extracellular RNA in communication. Proteins, however, directly influence both intracellular processes and extracellular interactions. Given the weak correlation between genes and proteins and the central role proteins play in biological function, studying proteins arguably provides a more direct and meaningful insight into cellular and organismal behavior. This dual perspective on the central dogma will frame much of our exploration in this course.1",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>'Single-cell' proteomics</span>"
    ]
  },
  {
    "objectID": "chapter4_protein.html#review-of-the-central-dogma",
    "href": "chapter4_protein.html#review-of-the-central-dogma",
    "title": "5  ‘Single-cell’ proteomics",
    "section": "",
    "text": "Figure 5.1: What I call the ``AP Biology textbook’’ figure. Screenshot taken from https://www.slideshare.net/slideshow/lecture-on-dna-to-proteins-the-central-dogma-of-molecular-biology/38811421.\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 5.2: From Buccitelli and Selbach (2020).\n\n\n\n\n\n\n\n\n\n\n\nFigure 5.3: From Buccitelli and Selbach (2020).",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>'Single-cell' proteomics</span>"
    ]
  },
  {
    "objectID": "chapter4_protein.html#other-ways-to-study-proteins-that-were-not-going-to-discuss-here",
    "href": "chapter4_protein.html#other-ways-to-study-proteins-that-were-not-going-to-discuss-here",
    "title": "5  ‘Single-cell’ proteomics",
    "section": "5.2 Other ways to study proteins that we’re not going to discuss here",
    "text": "5.2 Other ways to study proteins that we’re not going to discuss here\n\n5.2.1 So You Heard About AlphaFold…\nAlphaFold (see Figure 5.4) represents a revolutionary advancement in computational biology, designed to predict the three-dimensional structure of proteins from their amino acid sequences2. Historically, determining protein shapes required experimental techniques like X-ray crystallography, cryo-electron microscopy (EM) (see Figure 5.5), or nuclear magnetic resonance (NMR), which are resource-intensive and time-consuming. AlphaFold uses deep learning and structural biology insights to achieve high accuracy.\nHowever, significant challenges remain. There are still many open questions on how specific genetic modifications impact protein folding, how proteins dynamically change their conformation, or how they interact with other molecules such as DNA or other proteins. Additionally, ongoing developments in using large language models are showing promise in predicting not only shape but also potential functions directly from amino acid sequences.\n\n\n\n\n\n\n\nFigure 5.4: From Jumper et al. (2021).\n\n\n\n\n\n\n\n\n\n\n\nFigure 5.5: From https://myscope.training/CRYO_Introducing_Single_Particle_Analysis, as an example of what cryo-EM data “looks like,” just to give you a brief glimpse on how people study protein structure.\n\n\n\n\n\n\n5.2.2 Other Methods: Flow Cytometry, Spatial Proteomics, and FISH\nWhile AlphaFold focuses on protein structure, methods like flow cytometry and spatial proteomics explore proteins in their functional and cellular contexts. Flow cytometry, sometimes considered the “original” single-cell data method, measures the expression of surface and intracellular proteins across thousands of cells, providing rich insights into cellular heterogeneity. Spatial proteomics and techniques like fluorescence in situ hybridization (FISH) take this further by localizing proteins and RNA within tissue contexts, enabling researchers to map molecular interactions in their native environments. These approaches highlight the versatility of protein studies, from understanding their structure to dissecting their function and distribution in complex systems. While not the focus of this course, these methods are invaluable in expanding our understanding of proteins and their roles in biology.\n\n\n\n\nBuccitelli, Christopher, and Matthias Selbach. 2020. “mRNAs, Proteins and the Emerging Principles of Gene Expression Control.” Nature Reviews Genetics 21 (10): 630–44.\n\n\nJumper, John, Richard Evans, Alexander Pritzel, Tim Green, Michael Figurnov, Olaf Ronneberger, Kathryn Tunyasuvunakool, et al. 2021. “Highly Accurate Protein Structure Prediction with AlphaFold.” Nature 596 (7873): 583–89.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>'Single-cell' proteomics</span>"
    ]
  },
  {
    "objectID": "chapter4_protein.html#footnotes",
    "href": "chapter4_protein.html#footnotes",
    "title": "5  ‘Single-cell’ proteomics",
    "section": "",
    "text": "Proteins typically degrade much slower than mRNA fragments. See https://book.bionumbers.org/how-fast-do-rnas-and-proteins-degrade. For this reason, you might hypothesize that “cellular memory” is stored via proteins, not mRNA.↩︎\nSee https://www.youtube.com/watch?v=P_fHJIYENdI for a fun YouTube video for more about this.↩︎",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>'Single-cell' proteomics</span>"
    ]
  },
  {
    "objectID": "chapter5_epigenetics.html",
    "href": "chapter5_epigenetics.html",
    "title": "6  Single-cell epigenetics",
    "section": "",
    "text": "6.1 Primer on the genome, epigenetics, and enhancers\nThe genome is the complete set of DNA within an organism, encoding the instructions for life. While every cell in an organism typically contains the same genome, different cells exhibit distinct phenotypes and functions. This diversity arises not from changes in the underlying DNA sequence but from epigenetic regulation—heritable modifications that influence gene expression without altering the DNA itself. Epigenetics includes processes like DNA methylation, histone modification, and chromatin accessibility, all of which contribute to the dynamic regulation of gene activity in response to developmental cues and environmental signals.\nEnhancers play a critical role in this regulatory landscape. These are DNA sequences that, while not coding for proteins themselves, can dramatically increase the transcription of target genes. Enhancers act by binding specific transcription factors, proteins that recognize and attach to DNA sequences to regulate gene expression. Some transcription factors require assistance from chaperone proteins, which ensure their proper folding and functionality, or pioneer proteins, which can access and open tightly packed chromatin to allow other factors to bind. This interplay highlights the complexity of the regulatory machinery that governs cellular function. See Figure 6.1 and Figure 6.2 to appreciate how complex this machinery is.",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Single-cell epigenetics</span>"
    ]
  },
  {
    "objectID": "chapter5_epigenetics.html#primer-on-the-genome-epigenetics-and-enhancers",
    "href": "chapter5_epigenetics.html#primer-on-the-genome-epigenetics-and-enhancers",
    "title": "6  Single-cell epigenetics",
    "section": "",
    "text": "Figure 6.1: From Ito et al. (2022).\n\n\n\n\n\n\n\n\n\n\n\nFigure 6.2: From Claringbould and Zaugg (2021).",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Single-cell epigenetics</span>"
    ]
  },
  {
    "objectID": "chapter5_epigenetics.html#the-zoo-of-epigenetic-modalities",
    "href": "chapter5_epigenetics.html#the-zoo-of-epigenetic-modalities",
    "title": "6  Single-cell epigenetics",
    "section": "6.2 The zoo of epigenetic modalities",
    "text": "6.2 The zoo of epigenetic modalities\nEpigenetics encompasses a vast array of molecular mechanisms that regulate gene expression without altering the underlying DNA sequence. These mechanisms include modifications to DNA, RNA, chromatin, and the spatial organization of the genome, collectively forming a complex regulatory landscape. Below are some of the key modalities studied in epigenetics:\n\nDNA Accessibility: Techniques like ATAC-seq and DNase-seq measure how accessible DNA is to transcription factors and other regulatory proteins. Accessible regions often overlap with promoters and enhancers, providing critical insights into gene regulation. (This is what we’ll focus on this chapter.)\nDNA Methylation1: This modification, typically at cytosines in CpG dinucleotides, is a key epigenetic mark associated with gene silencing. Tools like bisulfite sequencing are used to map methylation patterns across the genome, revealing their roles in development and disease. See Figure 6.3 and Figure 6.4.\n\n\n\n\n\n\n\n\nFigure 6.3: From Gauba et al. (2021).\n\n\n\n\n\n\n\n\n\n\n\nFigure 6.4: From Bruggeman-Everts (2008).\n\n\n\n\n\nHi-C and Genome Organization2: Hi-C measures chromatin interactions to reveal the three-dimensional structure of the genome. It uncovers features like topologically associating domains (TADs) and enhancer-promoter loops, which are crucial for understanding how spatial organization influences gene regulation. See Figure 6.5 and Figure 6.6.\n\n\n\n\n\n\n\n\nFigure 6.5: From Ea et al. (2015).\n\n\n\n\n\n\n\n\n\n\n\nFigure 6.6: From N. Liu et al. (2021).\n\n\n\n\n\nHistone Modifications3: Post-translational modifications, such as acetylation, methylation, and phosphorylation, occur on histone proteins and regulate chromatin structure. Techniques like ChIP-seq and the newer Cut & Tag method are used to map these modifications and their role in gene expression at the bulk level. See Figure 6.7 and Figure 6.8.\n\n\n\n\n\n\n\n\nFigure 6.7: From https://opened.cuny.edu/courseware/lesson/684/student/?section=2.\n\n\n\n\n\n\n\n\n\n\n\nFigure 6.8: From Steinbach (2017). (Note: This is an example of the “canonical” functions of common histone modifications. This is by no means exhaustive and guaranteed to hold true for all biological systems.)\n\n\n\n\nSome of you might be interested: Personally, I think one of the fascinating concepts based on histone modifications is bivalent chromatin (essentially, chromatin that is wrapped in such a way that is simultaneously activated and silenced), see Figure 6.9 and Figure 6.10. It’s a particularly curious phenomenon that entire labs dedicate themselves to studying. See Blanco et al. (2020) for an overview why this mechanism might be “beneficial.”\n\n\n\n\n\n\n\nFigure 6.9: From Macrae, Fothergill-Robinson, and Ramalho-Santos (2023).\n\n\n\n\n\n\n\n\n\n\n\nFigure 6.10: From Glancy, Choy, and Eckersley-Maslin (2024).\n\n\n\n\n\nRNA Modifications (m6A and Pseudouridine): Modifications like N6-methyladenosine (m6A) and pseudouridine occur on RNA molecules and are involved in processes like splicing, translation, and mRNA decay. See Figure 6.11 for what pseudouridine is, i.e., “a rotation of the uridine molecule.” These modifications add an epitranscriptomic layer to gene regulation.\n\n\n\n\n\n\n\n\nFigure 6.11: From Hamma and Ferré-D’Amaré (2006) about pseudouridine.\n\n\n\n\n\nUntranslated Regions (UTRs): Before talking about UTRs, it’s probably good to review what an mRNA fragment “looks like” at the different stages of transcription and translation, see Figure 6.12. The 5′ and 3′ UTRs contain regulatory elements that influence mRNA stability, localization, and translation efficiency. The 3′ UTR, in particular, serves as a binding platform for RNA-binding proteins and microRNAs, providing an additional layer of post-transcriptional gene regulation (Figure 6.13 and Figure 6.14).\n\n\n\n\n\n\n\n\nFigure 6.12: From Niazi (2023). Notice the splicing (i.e., “removal” of the introns – see Alternative Splicing below) and that the protein-coding region is not the only part of the mRNA transcript – there are also the UTRs and poly-A tail. NOTE: The transcription start site (TSS) is not the same place as the promoter. The promoter is usually an un-transcribed region upstream of the TSS, while the TSS is where transcription actually starts.\n\n\n\n\n\n\n\n\n\n\n\nFigure 6.13: From Mignone et al. (2002).\n\n\n\n\n\n\n\n\n\n\n\nFigure 6.14: From https://www.cambio.co.uk/9/257/applications/methods/in-vitro-transcription/mrna-therapeutics/.\n\n\n\n\n\nAlternative Splicing: This post-transcriptional process generates multiple mRNA isoforms from the same gene, expanding the proteomic diversity, see Figure 6.15. This is a combinatorial explosion of isoforms. While not traditionally classified as epigenetic, splicing often intersects with chromatin modifications and RNA-binding proteins, blurring the lines between transcriptional and post-transcriptional regulation.\n\n\n\n\n\n\n\n\nFigure 6.15: From J. Chen and Weiss (2015).\n\n\n\n\n\nAlternative Polyadenylation (APA): APA generates transcript isoforms with different 3′ ends, affecting mRNA stability, localization, and translation, see Figure 6.16. By selecting distinct cleavage sites, APA alters the 3′ UTR length without affecting the poly-A tail itself, thereby modulating interactions with regulatory factors such as microRNAs and RNA-binding proteins.\n\n\n\n\n\n\n\n\nFigure 6.16: From L. Li et al. (2022).\n\n\n\n\nEfforts like the ENCODE project (https://pmc.ncbi.nlm.nih.gov/articles/PMC7061942/) have systematically mapped these modalities across cell types and tissues, creating a comprehensive resource for understanding genome function. ENCODE has provided invaluable datasets on DNA accessibility, histone modifications, and RNA-binding proteins, enabling researchers to uncover how epigenetic and transcriptomic layers work together to drive cellular processes.\nFinally, tools like MPRA (Massively Parallel Reporter Assays) are revolutionizing how we study enhancers and regulatory sequences. MPRA allows researchers to test thousands of DNA fragments for their regulatory activity, providing functional validation for epigenetic marks. This growing zoo of modalities continues to expand our understanding of how the genome is dynamically regulated in health and disease.\nSee Figure 6.17 and Figure 6.18 for some courageous figures that try to display multiple types of epigenetic modifications all at once. See Lim et al. (2024) for a broad overview about the different types of technologies to sequence different omics and layers of epigenetics, and how they are getting computationally put together.\n\n\n\n\n\n\n\nFigure 6.17: From https://www.sc-best-practices.org/chromatin_accessibility/introduction.html.\n\n\n\n\n\n\n\n\n\n\n\nFigure 6.18: From https://www.whatisepigenetics.com/type-2-diabetes-mellitus-and-epigenetics.\n\n\n\n\n\nSome videos to look at for fun\n\n“Why human brain cells grow so slowly” (Nature videos): https://www.youtube.com/watch?v=lIJkc6tulus\n“What is epigenetics? - Carlos Guerrero-Bosagna” (TED-Ed): https://www.youtube.com/watch?v=_aAhcNjmvhc",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Single-cell epigenetics</span>"
    ]
  },
  {
    "objectID": "chapter5_epigenetics.html#glossary-of-terms-thatll-be-useful-throughout-this-chapter",
    "href": "chapter5_epigenetics.html#glossary-of-terms-thatll-be-useful-throughout-this-chapter",
    "title": "6  Single-cell epigenetics",
    "section": "6.3 Glossary of terms that’ll be useful throughout this chapter",
    "text": "6.3 Glossary of terms that’ll be useful throughout this chapter\n\nChromatin: The complex of DNA and histone proteins that packages the genome, regulating accessibility for transcription factors and other regulatory elements.\nHistone: A protein that DNA wraps around to form nucleosomes, playing a key role in chromatin structure and epigenetic regulation through modifications such as methylation and acetylation. Eight histone proteins can come together to make up something called a nucleosome.\nEnhancer: A DNA region that enhances gene transcription, often located far from the transcription start site (TSS), and accessible in open chromatin regions detected by ATAC-seq.\nPromoter: A regulatory DNA region typically located upstream of a gene’s TSS, where RNA polymerase and transcription factors bind to initiate transcription.\nTranscription Start Site (TSS): The location where RNA polymerase begins transcribing a gene, often marked by open chromatin and specific histone modifications.\nIntron/Exon: Exons are coding regions of a gene included in the mature mRNA, while introns are non-coding regions removed during splicing.\nSpliced/Unspliced mRNA: Spliced mRNA has undergone intron removal and is ready for translation, while unspliced mRNA still contains introns and provides insights into transcriptional dynamics in single-cell RNA-seq.\nPeak: A region of open chromatin identified in data such as ATAC-seq or ChIP-seq experiments, corresponding to accessible regulatory elements such as promoters and enhancers.\nMotif: A short, recurring DNA sequence recognized by transcription factors, often enriched in ATAC-seq peaks to infer regulatory activity.\nTranscription Factor: A protein that binds to DNA motifs to regulate gene expression, often influencing cell state and identity.\nPioneer Factor: A specialized transcription factor capable of binding closed chromatin and initiating chromatin remodeling to make DNA accessible for transcription.",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Single-cell epigenetics</span>"
    ]
  },
  {
    "objectID": "chapter5_epigenetics.html#x-multiome-joint-profiling-of-chromatin-accessibility-and-rna",
    "href": "chapter5_epigenetics.html#x-multiome-joint-profiling-of-chromatin-accessibility-and-rna",
    "title": "6  Single-cell epigenetics",
    "section": "6.4 10x Multiome – Joint profiling of chromatin accessibility and RNA",
    "text": "6.4 10x Multiome – Joint profiling of chromatin accessibility and RNA\nThe 10x Multiome allows researchers to simultaneously profile gene expression (RNA) and chromatin accessibility (ATAC) at the single-cell level. This provides a comprehensive view of transcriptional and regulatory states within the same cells, enabling deeper insights into gene regulation and cell type characterization.\n\n6.4.1 Primer on chromatin accessibility and “peaks”\nChromatin accessibility refers to the degree to which DNA is physically accessible to regulatory proteins such as transcription factors, RNA polymerase, and other elements of the transcriptional machinery. In eukaryotic cells, DNA is wrapped around histone proteins to form chromatin, which can exist in a closed or open state. Open chromatin regions are more likely to contain active regulatory elements such as promoters and enhancers, while closed chromatin regions are generally associated with transcriptional repression. Profiling chromatin accessibility provides insights into which regulatory elements are active in a given cell state, offering a complementary perspective to RNA-seq data.\nIn single-cell ATAC-seq experiments, accessible chromatin regions are identified as peaks, which represent DNA regions where the transposase enzyme preferentially inserts sequencing adapters. These peaks correspond to genomic loci where nucleosomes are absent or displaced, indicating active regulatory sites. Peaks are typically mapped to gene promoters, enhancers, or other functional elements to infer regulatory activity. By integrating chromatin accessibility with gene expression data from the same cells, 10x Multiome enables researchers to connect regulatory regions with their target genes, uncovering how chromatin structure influences transcriptional programs and cell fate decisions.\nThe resulting data often looks like Figure 6.19, where, for each genomic region, you can define “peaks” where there are regions of accessible DNA.\n\n\n\n\n\n\n\nFigure 6.19: From https://stuartlab.org/signac/articles/mouse_brain_vignette. The gray bars on the bottom (i.e., “Peaks”) are derived based on the tracks shown up top (in different colors, based on the average accessibility at each base pair of the reference DNA for different cells of various cell types). The blue horizon bar (i.e., “Genes”) tells you roughly where the introns and exons of a particular gene is.\n\n\n\n\n\n\n6.4.2 Brief description of the technology\nThe following are the high-level steps involved in performing single-cell multiome sequencing using the 10x Genomics Multiome ATAC + Gene Expression platform:\n\n\n\n\n\n\n\nFigure 6.20: From Buenrostro et al. (2015).\n\n\n\n\n\n\n\n\n\n\n\nFigure 6.21: From https://www.quickbiology.com/ngs-services/atac-seq-service.\n\n\n\n\n\nTissue Dissociation and Cell Isolation:\nTissues are dissociated into a single-cell suspension using enzymatic or mechanical methods. Cells are isolated via fluorescence-activated cell sorting (FACS) or other methods to ensure viable, intact cells for profiling both RNA and chromatin.\nTransposition and RNA Capture:\nCells are incubated with a transposase enzyme that fragments DNA in open chromatin regions and tags them with sequencing adapters. Simultaneously, RNA is captured via hybridization to barcoded beads containing poly(dT) sequences, enabling downstream transcriptomic profiling.\nDroplet Generation:\nUsing the 10x Chromium instrument, individual cells are encapsulated into oil-based droplets along with barcoded gel beads. Each bead contains unique barcodes for both RNA and chromatin, ensuring that data from both modalities are linked to the same cell.\nReverse Transcription and Transposition Amplification:\nRNA is reverse-transcribed into complementary DNA (cDNA) within the droplets. Transposed DNA fragments are amplified via PCR to enrich for regions of open chromatin.\nDroplet Breakage and Cleanup:\nDroplets are broken, and the barcoded nucleic acids are recovered. Separate workflows are used to process RNA-derived cDNA and transposed DNA fragments.\nLibrary Preparation:\nThe cDNA and DNA libraries are prepared in parallel:\n\nRNA Library: Includes additional steps for amplification and adapter ligation to finalize the gene expression library.\nATAC Library: Focuses on chromatin accessibility, with library preparation steps optimized for sequencing transposed DNA.\n\nHigh-Throughput Sequencing:\nThe prepared RNA and ATAC libraries are sequenced on an Illumina platform, typically with paired-end reads to capture both transcriptomic and chromatin information.\nData Alignment and Integration:\nSequencing reads are mapped to the genome, with RNA reads assigned to transcripts and ATAC reads aligned to open chromatin regions. Barcode information is used to link the RNA and chromatin profiles back to individual cells, enabling multi-modal analyses.\n\nBrief note about peak-calling.\nPeak-calling is the computational process of identifying regions of open chromatin from ATAC-seq data, where transposase insertion events are enriched. These peaks represent accessible regulatory elements such as promoters, enhancers, and transcription factor binding sites. Peak-calling algorithms, such as MACS2 or the cellranger-atac pipeline (see Figure 6.22), detect significant enrichments in sequencing reads while accounting for background noise and sequencing biases. In single-cell ATAC-seq, peak-calling is often performed at the population level or adapted to sparse single-cell data by aggregating similar cells. Accurate peak-calling is essential for interpreting chromatin accessibility patterns and linking regulatory regions to gene expression.\n\n\n\n\n\n\n\nFigure 6.22: From https://www.10xgenomics.com/support/software/cell-ranger-arc/latest/algorithms-overview/algorithms-overview. You can see that ATAC-seq measures these DNA fragments, and a “peak” is a computational object that denotes a high concentration of overlapping fragments.\n\n\n\n\nFurther reading.\nSee Mansisidor and Risca (2022), Miao et al. (2021), Teichmann and Efremova (2020) for an in-depth dive on the biological insights from this omic (among many, many review papers). Two things are of note: 1) modeling scATAC-seq data is not as straight-forward as scRNA-seq (see Miao and Kim (2024), Martens et al. (2024)), 2) almost all the scRNA-seq methods we have discussed in Chapter 2 and Chapter 3 have a counterpart developed specifically to model scATAC-seq data. For example, peakVI Ashuach et al. (2022) is a commonly used method to compute the low-dimensional embedding for scATAC-seq data.",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Single-cell epigenetics</span>"
    ]
  },
  {
    "objectID": "chapter5_epigenetics.html#chromvar-the-most-commonly-used-method-to-assess-binding-regions",
    "href": "chapter5_epigenetics.html#chromvar-the-most-commonly-used-method-to-assess-binding-regions",
    "title": "6  Single-cell epigenetics",
    "section": "6.5 ChromVAR: The most commonly used method to assess binding regions",
    "text": "6.5 ChromVAR: The most commonly used method to assess binding regions\nChromVAR (short for Chromatin Variability Across Regions, Schep et al. (2017)) is a computational tool designed to analyze chromatin accessibility data, such as those generated from ATAC-seq or single-cell ATAC-seq experiments. Its primary goal is to quantify variability in chromatin accessibility across predefined genomic regions, such as transcription factor binding motifs or enhancers, and link these patterns to regulatory factors that drive cell state differences.\nWhat the heck is a motif? A motif is a short, recurring DNA sequence pattern that is recognized and bound by specific transcription factors (TFs) to regulate gene expression, see Figure 6.23. These motifs are typically found in promoters, enhancers, and other regulatory regions of the genome. Motifs are often represented as position weight matrices (PWMs), which describe the probability of observing each nucleotide (A, T, C, G) at a given position in the sequence. Identifying motif enrichment in chromatin accessibility data helps infer which transcription factors are active in a given cell type or condition. ChromVAR leverages these motifs to assess whether specific transcription factors are driving chromatin accessibility changes, providing insights into cell-type-specific regulatory programs.\n\n\n\n\n\n\n\nFigure 6.23: From Habib (2007).\n\n\n\n\nSidenote about motifs. If you work on scATAC-seq or ChIP-seq data long enough, you’ll eventually need to learn about: 1) how to detect potential binding sites in your data, and 2) how to find a database of “known” motifs. For the first point, HOMER Heinz et al. (2010) is a very common bioinformatics tool. It takes in a bunch of DNA regions, and then finds DNA motifs that are significantly enriched as well as which potential TF might match those motifs, see Figure 6.24. For the second point, JASPAR is one of the more common databases of TFs, see https://jaspar.elixir.no/ and Fornes et al. (2020). In R, the Bioconductor package is called JASPAR2020.\n\n\n\n\n\n\n\nFigure 6.24: From http://homer.ucsd.edu/homer//motif/motifFinding.html.\n\n\n\n\nDetails of ChromVAR. ChromVAR works by computing deviation scores, which measure how much the accessibility of a given set of regions (e.g., those containing a specific transcription factor motif) varies across cells or samples. This enables the identification of transcription factors that are likely active and driving regulatory differences within the dataset. See Figure 6.25.\n\nInput/Output. The input for a ChromVAR analysis is: 1) \\(\\in \\mathbb{Z}_{+}^{n \\times p}\\) for the \\(n\\) cells and \\(p\\) peaks, 2) the specific locations of the \\(p\\) peaks along the reference genome (for example, in humans, this could be the hg38 reference genome, and in R, this is typically managed by the GenomicRanges BioConductor package, and 3) a database of TF motifs, such as JASPAR. (*Technically*), you don’t actually pass Item #2 or #3 as input. ChromVAR already expects you to have matched peaks to motifs using some method, for instance, motifmatchr. This matching is where, technically, Item #2 and #3 are used.) The output is then a new matrix \\(Y \\in \\mathbb{R}^{n\\times d}\\) where \\(d\\) is the number of TFs, and entry \\(Y_{ij}\\) denotes the excess variability of the TF \\(j\\)’s accessibility in cell \\(i\\), relative to a set of “background” DNA regions that have similar qualities as TF \\(j\\).\n\nHere’s how it works:\n\nInput Data: The input consists of a binary peak-by-cell matrix (e.g., from single-cell ATAC-seq), where each entry indicates whether a specific genomic region (peak) is accessible in a given cell. A set of motif annotations (e.g., binding motifs for transcription factors) is provided to group peaks into motif-associated sets.\n\nImportantly: To run ChromVAR, you must have a reference genome. You are about to scan the genome for locations where a motif can bind to a particular DNA sequence in the reference genome. That is, you’re thinking about the specific base pair sequence of the DNA.\n\nRegion Set Aggregation: Peaks are grouped into sets based on the motifs. For each cell \\(i\\) and each motif-associated region set \\(k\\), ChromVAR computes the aggregate accessibility:\n\n\\[\nA_{ik} = \\sum_{j \\in S_k} X_{ij},\n\\]\nwhere \\(S_k\\) is the set of peaks \\(j\\)’s associated with motif \\(k\\).\nIn simple terms, you’re adding up all the peaks that contain a relevant motif.) This sum (for cell \\(i\\)) is normalized against all other cells (i.e., across all cells, how many counts were mapped to these peaks.\n\nSampling a set of background peaks: One of ChromVAR’s most important steps is carefully choosing a set of “background peaks,” i.e., peaks that are not the ones associated with motif \\(k\\), but have similar biological qualities. ChromVAR typically controls for two important things to do this: the GC content of a peak region and the region’s fragment length. (GC content is adjusted for since PCR tends to favor GC-rich regions.) Then, for every peak that contains motif \\(k\\), it samples many different peaks that has similar GC content and fragment length to the particular peak. This loops over all the peaks associated with motif \\(k\\), and the aggregate set of sampled peak is called the set of background peaks.\nDeviation Scores: The deviation score quantifies how much the accessibility for a motif-associated region set deviates from what is expected under a background distribution. ChromVAR uses a binomial model to compute the expected accessibility, and the deviation score \\(D_{kj}\\) is defined as the z-score:\n\n\\[\n    Y_{ik} = \\frac{A_{ik} - \\mathbb{E}[A_{ik}]}{\\text{SD}[A_{ik}]},\n\\]\nwhere \\(\\mathbb{E}[A_{ik}]\\) and \\(\\text{SD}[A_{ik}]\\) are the expected mean and standard deviation of the accessibility for motif \\(k\\) under the background model. This matrix \\(Y\\) (over all the cells and all motifs) is the output.\n\n\n\n\n\n\n\nFigure 6.25: From Schep et al. (2017)",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Single-cell epigenetics</span>"
    ]
  },
  {
    "objectID": "chapter5_epigenetics.html#sec-atac_integration",
    "href": "chapter5_epigenetics.html#sec-atac_integration",
    "title": "6  Single-cell epigenetics",
    "section": "6.6 Deep-learning integration and translation of RNA and ATAC",
    "text": "6.6 Deep-learning integration and translation of RNA and ATAC\nSingle-cell multi-omic data integration is challenging due to the lack of one-to-one correspondence between cells across different assays. While many experimental technologies allow simultaneous measurement of multiple omics modalities (e.g., RNA and chromatin accessibility), most single-cell datasets include only one modality. This creates the challenge of integrating data from different omics layers with distinct feature spaces (e.g., genes in scRNA-seq vs. chromatin regions in scATAC-seq). We call this diagonal integration since we simultaneously have different cells in each dataset and different features (since these are two different omics). See Figure 6.26.\nOur goal can be thought of as one of two things (which are essentially equivalent):\n\nMatching: How do we match a cell in the first omic to the “best” corresponding cell in the second omic, so we can “pretend” we were able able to sequence paired multi-omic data?\nImputation of missing omics: For the cells where we only sequenced the first omic, can we predict what the expressions of these cells would had been if we sequenced the second omic? And vice versa, can we predict the first omic for the cells where we only sequenced the second omic?\n\nUpon first glance, it seems surprising that anyone can do you anything at all.\n\n\n\n\n\n\n\nFigure 6.26: From Argelaguet et al. (2021).\n\n\n\n\n\n6.6.1 Strategy 1: Completely unsupervised approach to diagonal integration\nIn the first broad category we’ll talk about here, we seek to diagonally integrate \\(X \\in \\mathbb{R}^{n_x \\times p_x}\\) and \\(Y \\in \\mathbb{R}^{n_y \\times p_y}\\), two single-cell datasets on different omics (i.e., the \\(p_x\\) features in the first omic are different from the \\(p_y\\) features in the second omic). Here, we are not willing to make any biological assumptions on how these two omics are related.\nA typical choice: SCOT.\nSCOT (Single-Cell alignment with Optimal Transport) addresses diagonal integration using the Gromov-Wasserstein optimal transport framework Demetci et al. (2022). The key idea is to align datasets from different modalities while preserving their intrinsic geometric structures. SCOT constructs \\(k\\)-nearest neighbor (k-NN) graphs for each dataset and computes intra-domain pairwise distance matrices. The alignment is achieved by finding a probabilistic coupling matrix \\(\\mathbf{G}\\) that minimizes the discrepancy between these intra-domain distances.\n\nInput/Output. The inputs to SCOT are: 1) 2 different single-cell datasets \\(X \\in \\mathbb{R}^{n_x \\times p_x}\\) and \\(Y \\in \\mathbb{R}^{n_y \\times p_y}\\), each measuring a different omic (i.e., different features) on a different set of cells. The primary output is a matching between (not necessarily 1-to-1) cells in \\(X\\) and \\(Y\\) so you computationally pretend you have paired multi-omic data for your downstream procedures.\n\n\nBrief aside on Wasserstein distance: The Wasserstein distance, rooted in optimal transport theory, measures the effort required to morph one probability distribution into another. This can be intuitively understood using the “moving pile of sand” analogy: given two distributions, we seek the most efficient way to move mass from one distribution to another while minimizing transportation cost.\nMathematically, given two discrete distributions \\(\\mu = \\sum_{i=1}^{n} p_i \\delta_{x_i}\\) and \\(\\nu = \\sum_{j=1}^{m} q_j \\delta_{y_j}\\), the classic optimal transport problem finds a coupling matrix \\(\\mathbf{G} \\in \\mathbb{R}^{n \\times m}\\) that minimizes the transport cost:\n\\[\nW_c(\\mu, \\nu) = \\min_{\\mathbf{G} \\in \\Pi(\\mu, \\nu)} \\sum_{i=1}^{n} \\sum_{j=1}^{m} c(x_i, y_j) G_{ij},\n\\]\nwhere \\(c(x_i, y_j)\\) represents the cost of moving mass from \\(x_i\\) to \\(y_j\\), and \\(\\Pi(\\mu, \\nu)\\) is the set of all valid transport plans satisfying the marginal constraints:\n\\[\n\\sum_{j=1}^{m} G_{ij} = p_i, \\quad \\sum_{i=1}^{n} G_{ij} = q_j, \\quad G_{ij} \\geq 0.\n\\]\n\nThe Gromov-Wasserstein (GW) distance uses optimal transport by aligning the pairwise distances of cell with each omic. Given distance matrices \\(\\mathbf{D}^{X}\\) and \\(\\mathbf{D}^{Y}\\) for datasets \\(X\\) and \\(Y\\) (one for each omic), the GW problem is\n\\[\n\\operatorname{GW}(\\mu, \\nu) = \\min_{\\mathbf{G} \\in \\Pi(\\mu, \\nu)} \\sum_{i,k} \\sum_{j,l} L(D^X_{ik}, D^Y_{jl}) G_{ij} G_{kl},\n\\]\nwhere \\(L(D^X_{ik}, D^Y_{jl})\\) quantifies how much the transport plan distorts local geometric structures. SCOT uses this framework to learn an alignment between single-cell datasets by computing the optimal \\(\\mathbf{G}\\), followed by a barycentric projection to bring the datasets into a common space.\n\n\n\n\n\n\n\nFigure 6.27: From Demetci et al. (2022).\n\n\n\n\n\nA simple analogy: To understand SCOT, consider the following analogy. Let’s say in the first omic, we measured 4 cells: {A, B, C, D}, where we infer that cell-pairs {A,B}, {B,C}, and {A,D} are similar (based on their expression profiles in the first omic). In the second omic, we measured 4 cells: {I, II, III, IV}, where we infer that cell-pairs {II,IV}, {IV,III}, and {II,I} are similar (based on their expression profiles in the second omic). From this, we can infer that a reasonable matching is, {A, II}, {B, IV}, {C, III}, and {D,I}. You can imagine that the Wasserstein framework is apply this logic much more formally and robustly.\n\nA brief note on other approaches.\nYou’re really driving in the dark with these approaches since you’re blindly trusting that both omics have to stem “from the same manifold,” loosely speaking. This flavor of diagonal integration essentially boils down to manifold alignment – how can you “align” two different omics, where you trust that this computation alignment tells you how the two omics are aligned. (However, for certain pairs of omics, you really have no other choice, so this comment isn’t necessarily a criticism. It is more of a cautionary warning for you to think carefully on how would you even know you had a sensible integration.) A common addition in recent years for these diagonal integration methods is not to require all cells to be matched, see K. Cao, Hong, and Wan (2022). This addition complicates the computation, but enables you to allow for biological signal in one omic that is not recapitulated in the other. See Xu and McCord (2022) for more commentary.\n\n\n6.6.2 Strategy 2: Leveraging more biological information for diagonal integration\nUnlike the methods in Section 6.6.1, what if you do have biological insights about how the two omics are related? Then certainly, you should be able to perform a much more powerful diagonal integration if your biological insights are correct.\nA typical choice: GLUE.\nGraph-Linked Unified Embedding (GLUE), as the name suggests, everages prior biological knowledge to construct a guidance graph, where nodes represent features (e.g., genes or ATAC peaks) and edges represent regulatory interactions (e.g., enhancer-promoter links) Z.-J. Cao and Gao (2022). This graph links omics-specific feature spaces, enabling joint learning of regulatory relationships and cell embeddings. By combining the guidance graph with observed data, GLUE infers regulatory interactions in a Bayesian-like manner. This enables the identification of cis-regulatory relationships, such as enhancer-gene links, and provides insights into transcription factor (TF) activity.\n\nInput/Output. The inputs to GLUE are: 1) \\(K\\) different single-cell datasets \\(X^{(k)} \\in \\mathbb{R}^{n_k \\times p_k}\\) for each \\(k \\in \\{1,\\ldots,K\\}\\), each measuring a different omic (i.e., different features) on a different set of cells, and 2) a graph \\(\\mathcal{G}\\) that connects the \\({p_k}_{k=1}^{K}\\). (This is the guidance graph, and this gets treated as another “dataset” in some sense.) The primary output is \\(\\hat{X}^{(k_1;k_2)} \\in \\mathbb{R}^{n_{k_1} \\times p_{k_2}}\\). That is, this is the “best guess” of expression in the \\((k_2)\\)-th omic for the cells in \\((k_1)\\)-th omic.\n\nImportantly, separate variational autoencoders (VAEs) are trained for each omics layer, producing omics-specific low-dimensional cell embeddings. A shared latent embedding is aligned across modalities through adversarial learning and guided by the regulatory graph.\nSome of the modeling details:\n\nGuidance Graph: Let \\(p=\\sum_{k=1}^{K}p_k\\), which denotes the total number of features across all \\(K\\) omics. The guidance graph \\(\\mathcal{G} = (\\mathcal{V}, \\mathcal{E})\\) connects features across omics layers, with edges weighted by interaction confidence, where \\(\\mathcal{V}\\) denotes all \\(p\\) features. The feature embeddings \\(V\\) are learned to reconstruct this graph, roughly:\n\n\\[\n\\log p(\\mathcal{G}  | V) = \\sum_{(i, j) \\in \\mathcal{E} } \\big[\\log \\sigma(s_{ij} v_i^\\top v_j) + \\sum_{j' : (i,j') \\notin \\mathcal{E}} \\log\\big(1-\\sigma(s_{ij'}v_i^\\top v_{j'}\\big)\\big],\n\\]\nwhere \\(\\sigma\\) is the sigmoid function, \\(s_{ij}\\) indicates edge polarity, and \\(v_i, v_j\\) are feature embeddings. We’ll need to learn the graph convolution network encoder to learn \\(V\\) from \\(\\mathcal{G}\\) (please see the paper for this – this is a bit complicated to explain concisely), as well as the parameters \\(\\{s_{ij}\\}_{i,j\\in\\{1,\\ldots,p\\}}\\) (which is the “decoder” for the graph, in a sense).\nThis \\(V\\) is a matrix with number of rows equal to the total number of features in \\(\\mathcal{G}\\), and the number of columns equal to the latent dimension. We can subset the rows specific to the \\(k\\)-th omic to get the matrix (with less rows) \\(V^{(k)}\\).\n\nAutoencoder for Cell Embeddings: Each omics layer \\(k\\) has its own autoencoder that generates cell embeddings \\(U\\) from observed data \\(X^{(k)}\\):\n\n\\[\np_{\\text{decoder }k}(x^{(k)}_i | u_i, V^{(k)}) = \\text{NB}(x^{(k)}_i; \\text{mean vector}, \\text{dispersion vector}),\n\\]\nwhere \\(\\text{NB}\\) is a negative binomial distribution for modeling count data. Here, \\(U\\) is the “common” embedding across any of the \\(K\\) omics. (I’m using the notation \\(x^{(k)}_i\\) to denote the the \\(i\\)th cell in the \\(k\\)-th omic, which is a row in \\(X^{(k)}\\) – I apologize for this confusion notation, there’s a lot of things flying around.) Importantly, this “decoder” takes in the cell embedding \\(U\\) and the latent embeddings for all the features for the \\(k\\)-th omic, \\(V^{(k)}\\). This is accompanied by a encoder for each omic to yield its posterior Gaussian distribution,\n\\[\nq_{\\text{encoder }k}(u_i | x^{(k)}_i) = \\text{N}(\\text{some mean}, \\text{some covariance}).\n\\]\nWe’ll also need to train all \\(K\\) encoders and “decoders”.\nThe important formula to see how this works is the Equation (9) in the paper, which, in the notation in the notes here, would be,\n\\[\n\\begin{aligned}\n&\\big\\{\\text{The imputed expected expression of feature $j$ in omic $k$}\\big\\} = \\\\\n&\\big\\{\\text{The $j$-th coordiate of: SoftMax}\\Big(\\alpha \\odot (V^{(k)})^\\top u_i+ \\beta \\Big)\\big\\} \\cdot \\\\\n&\\big\\{\\text{Observed library size of the cell in omic $k$}\\big\\}.\n\\end{aligned}\n\\]\nwhere \\(\\odot\\) denotes the Hadamard product4, (i.e., entry-wise product). Note: 1) \\(V^{(k)}\\) is a matrix that has rows equal to the number of features in the \\(k\\)-th omic, and columns equal to the latent dimension. \\(u_i\\) is a vector of length equal to the number of latent dimensions. Therefore, \\((V^{(k)})^\\top u_i\\) is a vector of length equal to the number of features in the \\(k\\)-th omic. 2) This isn’t the decoder you might be familiar with hidden layers of linear transformations followed by activation functions. Instead, this is more-or-less a straightforward linear transformation that takes the feature embeddings and cell embeddings5.\n\nAdversarial Alignment: A discriminator \\(D\\) is trained to classify omics layers based on cell embeddings \\(u\\). Encoders are updated to fool the discriminator, aligning embeddings across modalities:\n\n\\[\n    - \\sum_k \\mathbb{E}_{X^{(K)}} \\left[ \\log D_k(\\text{discriminator}(U)) \\right],\n\\]\nwhere \\(D_k\\) is the the multiclass classification cross entropy, and the discriminator is a function that is being adversarially trained to try to distinguish between the \\(K\\) omics. The data encoders can then be trained in the opposite direction to fool the discriminator, ultimately leading to the alignment of cell embeddings from different omics layers.\n\nOverall Objective: The total loss combines data reconstruction, graph reconstruction, and adversarial alignment. That is, the discriminator is training to minimize\n\nError when predicting which omic the input data came from based on the embedding \\(U\\), while, simultaneously, the encoders and decoders are trying to maximize\n\\[\n    \\begin{aligned}\n    &\\lambda_{\\mathcal{G}} \\cdot \\text{Log-likelihood of generating graph $\\mathcal{G}$ based on feature embedding }V +\\\\\n    &\\lambda_{D} \\cdot \\text{The confusion of discriminator $D$ predicting the omic based on }U +\\\\\n    &\\Big[\\sum_{k=1}^{K}\\text{Log-likelihood of generating data from omic $k$ based on } U \\text{ and }V\\Big],\n    \\end{aligned}\n\\]\nwhere \\(\\lambda_{\\mathcal{G}}\\) and \\(\\lambda_{D}\\) are hyperparameters.\n\n\n\n\n\n\n\nFigure 6.28: From Z.-J. Cao and Gao (2022).\n\n\n\n\nConceptually: 1) The adversarial discriminatory is working “against” you, and trying to predict if a cell’s embedding comes from one omic or the other. The better the adversary can do this, the more it means that you (GLUE) did not yet properly align the two omics. 2) The guidance graph is (at a high level) about orienting this alignment. As opposed to unsupervised integration methods that purely rely on geometric relations, GLUE uses this guidance graph to help determine, “If there are multiple ‘rotations’ of the omics to align them, which particular ‘rotation’ makes the most sense?”\nA brief note on other approaches.\nThere are fewer methods in this category, and these methods are a lot harder for a third-party to benchmark since they heavily rely on the biological information you’re using. However, for some examples, integrating single-cell RNA and proteins, you can look at B. Zhu et al. (2021), S. Chen et al. (2024). For single-cell RNA and ATAC, you can look at Z. Zhang, Yang, and Zhang (2022) in addition to GLUE.\n\n\n6.6.3 Don’t forget about all the usual multi-modal integration methods!\nDon’t forget that, similar to how there’s a TotalVI for CITE-seq data, there are a lot of vertical integration methods for RNA-ATAC multiome data. See the end of ?sec-union_totalvi for some benchmarking papers. I’ve seen a couple more often than others: WNN Hao et al. (2021) and MultiVI Ashuach et al. (2023) (see Figure 6.29, a deep-learning method).\n\n\n\n\n\n\n\nFigure 6.29: From Ashuach et al. (2023).\n\n\n\n\nTranslation between omics.\nA related task in paired multiome data is: given the RNA profile, can we use translate this into the ATAC profile, and vice versa? At a high level, this is not too different from using an integration of paired multiome data. You simply use one omic’s encoder, and then another omic’s decoder. There are some important engineering differences to facilitate this idea. You can see Polarbear (R. Zhang et al. (2022), see Figure 6.30) and BABEL Wu et al. (2021) for examples.\n\n\n\n\n\n\n\nFigure 6.30: From R. Zhang et al. (2022).\n\n\n\n\nReturning back to the idea of “union” or “intersection” of information in ?rem-union-intersection, the ability to translate from one omic to another necessarily means you are conceptually more focused on learning the “intersection” of information.\nMosaic integration.\nWhat if you have many omics across many datasets, and some of your datasets are paired? We usually call this mosaic integration, where we essentially are “putting the mosaic together” using puzzle pieces of different datasets. In this task, we often have some mixture of paired multiome datasets and some single-omic datasets. See Figure 6.31 for an example. Two methods to look at as an example of this are scMoMaT Z. Zhang et al. (2023) and Cobalt Gong, Zhou, and Purdom (2021).\n\n\n\n\n\n\n\nFigure 6.31: From Z. Zhang et al. (2023).",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Single-cell epigenetics</span>"
    ]
  },
  {
    "objectID": "chapter5_epigenetics.html#brief-aside-transcription-factors",
    "href": "chapter5_epigenetics.html#brief-aside-transcription-factors",
    "title": "6  Single-cell epigenetics",
    "section": "6.7 Brief aside: Transcription factors",
    "text": "6.7 Brief aside: Transcription factors\nTranscription factors (TFs) are proteins that regulate gene expression by binding to specific DNA sequences, often within promoters or enhancers, to activate or repress transcription, see Figure 6.32. They play a crucial role in controlling cellular identity, development, and response to environmental signals. TFs recognize distinct motifs, short DNA sequence patterns, and their binding can be influenced by chromatin accessibility, co-factors, and post-translational modifications. Some TFs act as pioneer factors, capable of binding to condensed chromatin and initiating the process of opening DNA for transcriptional activation. By integrating chromatin accessibility data with known TF motifs, methods like ChromVAR can infer which TFs are actively shaping regulatory landscapes in different cell states.\nThis TFs will play a big role in the next section, when we start discussing gene regulatory networks.\n\n\n\n\n\n\n\nFigure 6.32: (Top): From Leiz et al. (2021).\n(Bottom left): From https://en.wikipedia.org/wiki/Transcription_factor.\n(Bottom right): From https://digfir-published.macmillanusa.com/life11e/life11e_ch16_11.html.",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Single-cell epigenetics</span>"
    ]
  },
  {
    "objectID": "chapter5_epigenetics.html#gene-regulatory-networks-grn",
    "href": "chapter5_epigenetics.html#gene-regulatory-networks-grn",
    "title": "6  Single-cell epigenetics",
    "section": "6.8 Gene regulatory networks (GRN)",
    "text": "6.8 Gene regulatory networks (GRN)\nGene regulatory networks (GRNs) describe the intricate interactions between genes, transcription factors, enhancers, and other regulatory elements that control gene expression. Understanding these networks is critical for deciphering how normal cellular functions are maintained and how dysregulation leads to disease. In the context of single-cell and multi-omics data, GRNs provide a framework for linking chromatin accessibility, transcription factor activity, and gene expression dynamics to uncover the molecular basis of health and disease. See Figure 6.33 for the overarching theme of GRNs, where you might start building a GRN via a simple gene co-expression analysis (i.e., “connecting” genes that are correlated), but then later start leveraging biological insights (i.e., which genes are transcription factors, and where TFs bind to accessible chromatin regions, etc.) in later steps.\n\n\n\n\n\n\n\nFigure 6.33: From Badia-i-Mompel et al. (2023)\n\n\n\n\n(Note about this section: We’re going to use the words “enhancer,” “cis-regulatory element” (CREs), and “peak” interchangeably.)\n\n6.8.1 First: How we understand the elements that control a gene?\nA gene’s expression is governed by multiple regulatory elements, including promoters, enhancers, and transcription factors. Promoters serve as the binding sites for RNA polymerase and general transcription factors, initiating transcription. Enhancers, often located far from the gene they regulate, recruit transcription factors and co-activators to increase transcriptional output.\nTypically, a GRN falls into two types: 1) how do TFs bind to certain enhancer regions that cause a change in the downstream gene’s expression, or 2) how do enhancer regions themselves open and close to regulate a downstream gene’s expression. (I know, this is about to get a bit wonky.)\nFigure 6.34 shows the overall schematic of how to link enhancers (i.e., a peak region, sometimes also called a cis-regulatory element, CRE) to its target gene. See Figure 6.35 for how results for linked-peaks is often reported, where the “height” of the arc is the p-value about testing if a peak is linked to a particular gene. See https://stuartlab.org/signac/articles/pbmc_multiomic and https://www.archrproject.com/bookdown/peak2genelinkage-with-archr.html for examples of how to do this analysis in practice. You can also check out https://singlecell.broadinstitute.org/single_cell/features/2024-11-21-visualize-and-filter-multiome-atac-data for web portals for this.\n\n\n\n\n\n\n\nFigure 6.34: (Left): From Xie et al. (2023). (Right): From Leblanc and Lettre (2023).\n\n\n\n\n\n\n\n\n\n\n\nFigure 6.35: (Left): From Adams et al. (2022).\n(Right): From Ma et al. (2020). (These types of plots usually focus on one particular element. When you see these plots, it’s not usually immediately obvious if the plots are showing if: 1) a gene is being regulated by many CREs, or if 2) a CRE regulates many genes.)\n\n\n\n\nTF footprints.\nTF footprinting is a computational approach used to infer transcription factor (TF) binding at specific genomic loci by analyzing patterns of chromatin accessibility at single-nucleotide resolution, often using ATAC-seq or DNase-seq data, see Figure 6.36. Unlike ChromVAR, which assesses motif activity by quantifying motif accessibility variation across cells or conditions, footprinting explicitly identifies regions where TFs are bound by detecting protected sites flanked by regions of high accessibility. This provides direct evidence of TF occupancy, distinguishing between motif presence and actual binding, thereby refining motif enrichment results from ChromVAR and uncovering context-specific regulatory interactions. See https://www.archrproject.com/bookdown/footprinting-with-archr.html and https://stuartlab.org/signac/1.2.0/articles/footprint for more details.\n\n\n\n\n\n\n\nFigure 6.36: (Left) From Siersbæk et al. (2014).\n(Right) From https://www.archrproject.com/bookdown/footprinting-with-archr.html.\n\n\n\n\nA conceptual way to understand our goal.\nWhat we are hoping to do is to, essentially, learn the relations peaks and genes across all the peaks and genes. By doing this, we can piece together a graph, which becomes our GRN. See Figure 6.37.\n\n\n\n\n\n\n\nFigure 6.37: From D. Kim et al. (2023).\n\n\n\n\nIf you are interested in GRNs (which is popular topic for more statistical/computation-leaning students), be aware that there are almost an endless list of GRN methods, see Figure 6.38. As we will discuss in Section 6.10, it is a nontrivial research question to even know “which method works the best.”\n\n\n\n\n\n\n\nFigure 6.38: From Loers and Vermeirssen (2024). This is the list for methods at the time of the authors’ writing for multi-omic GRNs. If you include the methods that were designed for solely scRNA-seq, the list becomes unbelievably long.\n\n\n\n\n\n\n6.8.2 GRNs between genes and TFs\nTranscription factors serve as key regulators in GRNs by binding to DNA motifs and either activating or repressing gene expression. The strength and specificity of TF-gene interactions are influenced by chromatin accessibility, cooperative binding with other TFs, and post-translational modifications. The advantage of using GRNs that only model TFs and their target genes (which could involve other TFs) is that the graph is much more manageable to think about. Here, the peaks (measuring regions of chromatin accessibility) allow you to determine: 1) how a TF might bind a peak, and 2) how that peak might influence a gene. All the peaks nearby a gene get “merged” in the modeling as one element altogether.\nA typical choice: Pando.\nPando Fleck et al. (2023) infers GRNs by modeling the relationship between gene expression, transcription factor (TF) activity, and chromatin accessibility using a regression-based framework. See Figure 6.39.\n\n\n\n\n\n\n\nFigure 6.39: From Fleck et al. (2023)\n\n\n\n\n\nInput/Output. The inputs to Pando are: 1) a paired multiome dataset for \\(n\\) cells, containing both RNA and ATAC features, and 2) a database of TFs and their motifs.\nThe primary output is a directed and weighted graph among genes (of which some genes are transcription factors).\n\nThe inference procedure follows these steps:6\n\nCandidate Regulatory Regions:\nPando identifies candidate regulatory regions by linking chromatin peaks to nearby genes using either the Signac or GREAT McLean et al. (2010) method. It considers a defined upstream and downstream distance relative to the gene’s transcription start site (TSS) or gene body. This gives a potential set of peaks for each gene.\nTF-Peak Associations:\nIt selects peaks that overlap TF binding motifs and computes correlations between peak accessibility and target gene expression. A threshold is applied to filter TF-gene and peak-gene pairs based on correlation strength. This filters down the list of possible peaks that might facilitate an interaction between a TF and its regulated gene.\nRegression Model:\nPando fits a regression model for each target gene \\(g_i\\), estimating the relationship between gene expression and TF activity at its regulatory regions. The general model is: \\[\ng_i \\approx \\sum_{j} \\beta_j (TF_j \\circ P_j)\n\\tag{6.1}\\] where \\(TF_j\\) is the expression of transcription factor \\(j\\) (i.e., this is another gene’s expression, but this particular gene is deemed a transcription factor based on a database), \\(P_j\\) is the accessibility of the associated peaks, \\(\\circ\\) represents an interaction term (which can be additive, multiplicative, or both), and \\(\\beta_j\\) denotes the inferred regulatory coefficient. By default, Pando fits a linear regression (i.e., generalized linear model for the Gaussian family), where the all the involved data (i.e., gene expression, transcription factor, etc.) has been already log-normalized.\n(Yes – this is as straightforward statistically as it gets. More on this later in Section 6.10.)\nStatistical Filtering and Adjustment:\nPando applies a multiple-testing correction (e.g., false discovery rate (FDR) adjustment) to the estimated coefficients from the linear regression and removes insignificant regulatory interactions. The resulting network consists of target genes, TF regulators, and their associated regulatory elements, allowing for further functional analyses.\n\nSee Figure 6.40 for an example of the resulting graph (subsetted to a particular TF).\n\n\n\n\n\n\n\nFigure 6.40: From Fleck et al. (2023). This is the sub-network focusing on the TF GLI3 and all its downstream TFs (other named genes) and other genes (in gray circles).\n\n\n\n\n\n\n6.8.3 GRNs between genes, enhancers, and TFs\nIf you want “higher resolution” and want to model the specific interactions between particular peaks and their intermediary role between the TF and gene, you might instead want to use a GRN that models the interactions between all 3 elements – TFs, the peaks, and the target genes. (Recall, even though you might only be modeling the 2000 highly variable genes with many a couple hundred TFs, you have on the order of 300,000 peaks. So these graphs are incomprehensibly large, to the point you need to think carefully about why you want to learn such a large graph in the first place.)\nA typical choice: SCENIC+.\nSCENIC+ Bravo González-Blas et al. (2023) infers enhancer-driven gene regulatory networks (eGRNs) by integrating transcription factor (TF) binding motifs, chromatin accessibility, and gene expression data. See the workflow in Figure 6.41.\n\n\n\n\n\n\n\nFigure 6.41: From Bravo González-Blas et al. (2023).\n\n\n\n\n\nInput/Output. The inputs to SCENIC+ are: 1) a paired multiome dataset for \\(n\\) cells, containing both RNA and ATAC features, and 2) a database of TFs and their motifs.\nThe primary output is a directed and weighted graph among enhancer regions and genes (of which some genes are transcription factors).\n\nThe inference process follows these steps:\n\nIdentification of Candidate Enhancers:\nSCENIC+ processes single-cell chromatin accessibility data (scATAC-seq) using pycisTopic, which identifies differentially accessible regions (DARs) and groups co-accessible regions into enhancer candidates. These candidate enhancers are expected to contain key transcription factor binding sites (TFBSs).\nMotif Enrichment Analysis:\nSCENIC+ uses a large curated database of over 30,000 TF motifs, implemented in pycisTarget, to identify significant motif enrichments within enhancer regions. Two motif enrichment methods are employed:\n\ncisTarget: A ranking-based approach that scores each genomic region based on motif presence and selects the most significantly enriched motifs.\n\nDifferential Enrichment of Motifs (DEM): A statistical Wilcoxon rank-sum test to identify differentially enriched motifs across enhancer sets.\n\nTF-Enhancer-Gene Association:\nThe next step links candidate enhancers to their target genes using correlation-based methods. A gradient-boosting regression model (GRNBoost2, Moerman et al. (2019)) is applied to quantify the importance of both TFs and enhancer candidates for each target gene. The model assigns importance scores to enhancer–gene pairs, refining direct regulatory interactions.\neRegulon Construction:\nFalse discovery rate (FDR) correction is used to filter spurious TF-enhancer-gene associations. The final GRN consists of enhancer-driven regulons (eRegulons), where each TF is linked to a set of enhancer regions and target genes. The regulatory directionality (activation/repression) is inferred using correlation measures.\n\nSee Figure 6.42 for an example of the resulting graph (subsetted to a particular TF).\n\n\n\n\n\n\n\nFigure 6.42: From Bravo González-Blas et al. (2023). This is the sub-network focusing particular TFs (all named in larger text), as well as the CREs (in diamonds) and other target genes (in circles, named with smaller text.)\n\n\n\n\nA brief note about other methods.\nMost GRNs fall in this category nowadays. You can see LINGER (see Figure 6.43), which basically follows the same logic as in SCENIC+ but instead uses a deep-learning approach to predict relations between TFs and enhancers on target genes, as one of many examples.\n\n\n\n\n\n\n\nFigure 6.43: From Yuan and Duren (2024).",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Single-cell epigenetics</span>"
    ]
  },
  {
    "objectID": "chapter5_epigenetics.html#so-what-do-you-do-with-the-grn",
    "href": "chapter5_epigenetics.html#so-what-do-you-do-with-the-grn",
    "title": "6  Single-cell epigenetics",
    "section": "6.9 So… what do you do with the GRN?",
    "text": "6.9 So… what do you do with the GRN?\n\nGenerative modeling of cell types/states (Computational):\nIn some sense, a GRN is a very fancy “correlation matrix” of sorts. This means if you had the GRN, you could hypothetically label cells better since you could: 1) see the cell’s gene expression profile, and 2) know beforehand the “correlation” between genes. With these two ingredients, you could calculate a better “likelihood” a given cell corresponds to the cell type/state of this particular GRN.\nEncoding longitudinal information about the cascading effect of perturbations (Computational, Biological):\nSince the gene network, in principle, encapsulates how events unfold in a cell, it (in some sense) contains longitudinal information. We typically call this a “cascade” (i.e., how changes in one genomic regions affect other genomic regions over time). See Ng et al. (2021). This is one of the main reasons people study GRNs. For instance, Fleck et al. (2023) subset the overall GRN to learn how the GRN changes during brain development. Bravo González-Blas et al. (2023) shows how using the GRN can improve upon our understanding of fate commitment during differentiation. L. Wang et al. (2023) explicitly models how time affects the GRN via an ordinary differential equation model (ODE). These are just to name a few methods that explicitly are thinking about how our learning of the GRN helps us better understand time dynamics.\nPotential therapeutic targets (Biological):\nIf you knew how the genomic cascade works, then hypothetically, you have roadmap on which genomic region to edit. This is basically the start of the motivation of CRISPR knockouts – if I knew how a particular transcription factor influences many downstream genes, then if I silence or knock out the particular gene producing that TF, then I could manipulate a lot of the transcriptomic activity (and allegedly, a lot of proteomics and biological processes). So the GRN gives me a roadmap on which TF might be a good candidate to knock out in order to prevent any deleterious pathways from activating.\nUnderstanding the functional impact of SNPs in non-coding regions (Computational, Biological):\nThis will be a much bigger theme when we discuss SNPs in the next chapter, Section 7.1. Most of our SNPs are in non-coding regions, and we know that many of these SNPs have some potential effect on a disease from GWAS studies. However, it’s hard to know why these SNPs have a regulatory effect. By learning a GRN, we learn how different enhancer regions affect genes, so we might suspect that if a particular genetic variation lies in that enhancer region, the role of that SNP might be to impact that regulatory effect. (Technically, you need to do a massively parallelized report assay (MPRA, a different wetlab experiment) to actually demonstrate that the SNP actually impacts regulation. We’ll discuss this more later in Section 7.1.)\nCellular memory (Biological):\nThere is a long history of trying to understand if GRNs contribute to the “memory” of a cell. After all, you might ask about: if I stimulate a cell, if a cell is infected by a pathogen, etc., after this event subsides, does the cell “remember” what it just went through? There is no “brain” for the cell, so either you think: 1) cells are Markovian in some sense – they no memory of how it interacted with its environment, or 2) there is some long-term way for cells to alter something about itself to contribute to “memory.” This gets pretty fascinating biologically pretty quick. How would a cell even store memory? It’s likely not through the DNA is you don’t expect cells to naturally acquire many mutations in the DNA over time (hold that thought when we discuss Section 7.6). It’s likely not through the mRNA or proteins since both degrade, either on the time-scale of hours Y. Wang et al. (2002) or a couple days Rusilowicz-Jones, Urbé, and Clague (2022), respectively. Then, we turn to possibly something epigenetic. After all, DNA methylation can be inherited from one generation to another (not just on the cell level, but also on the organism level) Y. Zhang and Sirard (2021). So it is possible that GRNs (not quite about DNA methylation, but still epigenetic in flavor) are also stable enough (without extreme external stimuli) that they hold information about a cell’s memory? This is the premise of a lot of basic biology interest in GRNs, see Almeida et al. (2021) for example. For instance, there is preliminary evidence that stress changes the GRN of certain brain cells Ziegler et al. (2022). See Cha and Lee (2020) for a review of GRN in relation to diseases, or a focus on Alzheimer’s disease Gupta et al. (2022).\n\nBrief note about transcriptomic bursting.\nGene expression is inherently stochastic, occurring in bursts rather than as a continuous process, due to the random activation and inactivation of transcriptional machinery. This transcriptomic bursting means that the expression levels of individual genes fluctuate over time, making it unreliable to infer stable co-expression patterns from a single time point, see Figure 6.44. Instead of focusing on transient expression snapshots, studying gene regulatory networks (GRNs) provides a more robust framework for understanding gene interactions over longer timescales. GRNs capture how transcription factors (TFs) regulate target genes by binding to enhancer regions, establishing regulatory relationships that persist beyond momentary transcriptional fluctuations. By analyzing GRNs, researchers can infer the underlying structure of transcriptional control, allowing for a deeper understanding of cellular processes that remain stable despite the randomness. See Tang et al. (2023) for an overview of modeling transcriptomic bursting from single-cell data.\n\n\n\n\n\n\n\nFigure 6.44: (Top) From Q. Zhang et al. (2024). (The figure shows that on average, transcription starts and stops on the time-scale of hours in humans.)\n(Bottom) From Jiang, Zhang, and Li (2017).",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Single-cell epigenetics</span>"
    ]
  },
  {
    "objectID": "chapter5_epigenetics.html#sec-grn_crazy",
    "href": "chapter5_epigenetics.html#sec-grn_crazy",
    "title": "6  Single-cell epigenetics",
    "section": "6.10 What makes the field of GRN crazy?",
    "text": "6.10 What makes the field of GRN crazy?\n\nNOTE: Everything in this section is Kevin’s extremely opinionated opinions.\n\nThere’s a lot of side notes I need to make about GRNs, since a lot of students become interested in GRNs from many different angles. First off, a couple notes about how I think about GRNs:\n\nDirection of causality is dictated by biology:\nPart of the reason a lot of GRNs can “get away” with such simple statistics is that the directionality of edges is dictated by biology, not math. After all, we have a pretty reasonable understanding that TFs need to bind to certain regions to modulate a gene’s expression.\nKeeping in mind the time-scale of cells used when learning the GRN:\nWhich cells did you use to train the GRN? Did you use cells of many different cell types/states, or many different stages of progression? If so, then your GRN might be capturing any possible interaction between TFs and genes, and not be specific to a particular cellular state. This is to say – you need to think hard about what your GRN represents in terms of time. Does your GRN represent something more instantaneous (i.e., specific to a cell or a meta-cell), and you think the GRN itself is changing as the cells change? Or does your GRN represent any possible interaction between any TF or any gene, but if you were given a particular cell, you can’t quite determine if the specific TF is regulating a specific gene at that moment?\nSidenote 1: Even if you wanted to interpret your GRN with no time context, you’ll be in trouble. First, you need variation in your data to learn GRNs. (If all your cells literally had the same expression in RNA and ATAC, you would no ability to learn the GRN.) So you must have some variation among your cells. So the real question is: is that variation due to some underlying biological dynamics?\nSidenote 2: This means you should be aware of Simpson’s paradox7 when working with GRNs. See J. J. Li et al. (2024) for a cell-biology specific example of Simpon’s paradox.\n\nAs a sidenote, it is important that different methods assume (by default) a different distance between a peak and its regulated gene, see Figure 6.45. Also note that this distance isn’t even necessarily distance (since often, you might expect more enhancers to be upstream of a gene’s TSS than downstream). Also, the way different methods “weigh” the total regulatory effect of all the CREs on a gene might differ.\n\n\n\n\n\n\n\nFigure 6.45: From Loers and Vermeirssen (2024)\n\n\n\n\nWhy do we (as a field) focus on “causal” edges, instead of simply “correlation” edges?\nA lot of the methods I noted are placing edges between 2 elements simply based on correlation. If you are statistics-leaning student, this might leave a bad taste in your mouth since either: 1) you are aware of the differences between correlation and conditional independence, and/or 2) you are aware of the differences between correlation and causation (say, in the counterfactual sense).\nAs for conditional independence, methods to learn gene regulatory networks via conditional independence have fallen out of favor, not because the statistical goal is not worthwhile, but (in my impression), the scientific improvement in our biological understanding hasn’t been substantially large enough to warrant such a massively more complicated estimation procedure. (If you can figure out a way to convincingly articulate that conditional independence networks starkly gives you a more accurate picture of biology, there is a lot of reward. However, to do this, you need to have a very rigorous biological understand on how you’ll do this, likely with a lot of wetlab experiments to back you up.\nAs for causality, an ideal goal might be to only place edges if perturbing one element necessarily causes a change in the downstream element. We will return back to this when we discuss CRISPR knockouts in Chapter 7. However, suffice to say, for now, this is extremely challenging for many aspects:\n\nLimitations of data collection:\nUnlike a clinical trial, in single-cell biology, we are measuring everything at once, and we kill the cell to sequence the cell. This means: 1) we cannot accurately be sure about the direction of causality, since we need to estimate the “age” of a cell and the “timeline” of a cell. (After all, a foundation of causal inference is that you can say definitely someone got a treatment before you measure the outcome.) In our cell biology setting, you are measuring all the peaks and gene expression at the same time, so how can you be so definitive on the direction of causality?\nEven if you retort and set up a longitudinal CRISPR experiment, since you have to kill (lyse) the cell to sequence it, you can only get longitudinal information about the overall petri dish, not longitudinal information about specific cells. (Technically, this aspect isn’t the worst limitation. After all, in an observational study, if you analyze enough people, you can know if a drug caused a change in someone’s blood pressure even if you didn’t measure someone’s blood pressure before they took the drug. However, in our single-cell context, since we can never observe both pre-treatment and post-treatment, it is hard to stratify the “treatment effect” of a CRISPR knockout, unless you’re working with a mostly homogeneous cell line where there’s basically no variation among the cells.\nAre we really learning causal effects if we don’t know all the middle-men in transcription?\nEven if you say that a particular TF “causes” a change in downstream gene’s expression, does this really make sense unless you are honing in on the specific pathway and mechanisms? After all, the grand holy grail of cell biology is to articulate the specific set of events. If your hard work of causal inference is only amounts to stating two things are causally related, but you are not able to say explicitly how (in a bio-mechanistic sense), is your finding advancing biology, or is it just a slight improvement in the statistics?\nSee Figure 6.46 for an example of the type of mechanisms a cell biologists wants to uncover at the end of the day. It’s a very literal sequence of events of how certain biological processes unfold.\n\n\n\n\n\n\n\n\nFigure 6.46: From Taylor, Cullen, and Martin (2008)\n\n\n\n\n\nWhat is exactly is the “treatment”?\nThis is more of a philosophical aspect – if you do not have a way to actually perturb a biological element (i.e., we do not have the technology to actually safely alter a particular cell element), is it even that important to learn the true causality? For instance, if I tell you that learning how to fly will definitely cause you to live past 100 years, would you really be that interested in my finding?\nDo CRISPR knockouts actually recapitulate what naturally happens?\nThe most common way to validate a GRN is to perform a CRISPR knockout and measure what happens to the resulting cells. (We’ll discuss this more in Chapter 7.) This is great to validate a computational method’s GRN. However, it doesn’t necessarily recapitulate what happens naturally in the body during differentiation or a disease’s progression. For example, if I gave you a drug that cured cancer but caused you to turn into a vampire, would this be a viable discovery?\n\n\nSo what does this mean for me?\nDespite this shortcomings of existing GRNs, technological limitations have never stopped ambitious researchers to find creative solutions. When you work on GRNs, the biggest question is to have a research plan on how to validate your GRN (nowadays, it’s typically done with a CRISPR knockout experiment, but it can also involve some computational validation) and what you are planning to demonstrate its importance downstream for new biological insights.\n\nA brief note on related topics.\nSee Loers and Vermeirssen (2024) and D. Kim et al. (2023) for fantastic overviews on GRNs learned from multi-omic data. Remember that GRNs have existed way before paired multiome data has been around. See Karamveer and Uzun (2024), Stock et al. (2024) for overviews not specific to learning GRNs from multi-omic data. See Garbulowski et al. (2024), Cannoodt et al. (2021), Pratapa et al. (2020) for an example of how to synthetically generate a gene regulatory network and the corresponding scRNA-seq data (to benchmark methods).\nAlso, note that there are some network methods that have nodes for each genomic feature and cells, see Figure 6.47. Some example of methods are SIMBA H. Chen et al. (2024) and CellWalker2 Hu, Przytycki, and Pollard (2024).\n\n\n\n\n\n\n\nFigure 6.47: From H. Chen et al. (2024)\n\n\n\n\n\n\n\n\nAdams, Levi, Min Kyung Song, Yoshiaki Tanaka, and Yoon-Seong Kim. 2022. “Single-Nuclei Paired Multiomic Analysis of Young, Aged, and Parkinson’s Disease Human Midbrain Reveals Age-and Disease-Associated Glial Changes and Their Contribution to Parkinson’s Disease.” MedRxiv, 2022–01.\n\n\nAlmeida, Nathalia, Matthew WH Chung, Elena M Drudi, Elise N Engquist, Eva Hamrud, Abigail Isaacson, Victoria SK Tsang, Fiona M Watt, and Francesca M Spagnoli. 2021. “Employing Core Regulatory Circuits to Define Cell Identity.” The EMBO Journal 40 (10): e106785.\n\n\nArgelaguet, Ricard, Anna SE Cuomo, Oliver Stegle, and John C Marioni. 2021. “Computational Principles and Challenges in Single-Cell Data Integration.” Nature Biotechnology 39 (10): 1202–15.\n\n\nAshuach, Tal, Mariano I Gabitto, Rohan V Koodli, Giuseppe-Antonio Saldi, Michael I Jordan, and Nir Yosef. 2023. “MultiVI: Deep Generative Model for the Integration of Multimodal Data.” Nature Methods, 1–10.\n\n\nAshuach, Tal, Daniel A Reidenbach, Adam Gayoso, and Nir Yosef. 2022. “PeakVI: A Deep Generative Model for Single-Cell Chromatin Accessibility Analysis.” Cell Reports Methods 2 (3).\n\n\nBadia-i-Mompel, Pau, Lorna Wessels, Sophia Müller-Dott, Rémi Trimbour, Ricardo O Ramirez Flores, Ricard Argelaguet, and Julio Saez-Rodriguez. 2023. “Gene Regulatory Network Inference in the Era of Single-Cell Multi-Omics.” Nature Reviews Genetics 24 (11): 739–54.\n\n\nBlanco, Enrique, Mar González-Ramı́rez, Anna Alcaine-Colet, Sergi Aranda, and Luciano Di Croce. 2020. “The Bivalent Genome: Characterization, Structure, and Regulation.” Trends in Genetics 36 (2): 118–31.\n\n\nBravo González-Blas, Carmen, Seppe De Winter, Gert Hulselmans, Nikolai Hecker, Irina Matetovici, Valerie Christiaens, Suresh Poovathingal, Jasper Wouters, Sara Aibar, and Stein Aerts. 2023. “SCENIC+: Single-Cell Multiomic Inference of Enhancers and Gene Regulatory Networks.” Nature Methods 20 (9): 1355–67.\n\n\nBruggeman-Everts, Fieke. 2008. “Using Mouse Models to Identify the Molecular Mechanisms Mediating Gene by Environment Interactions in Depressive Illness.” PhD thesis. https://www.researchgate.net/publication/233413663_Using_mouse_models_to_identify_the_molecular_mechanisms_mediating_gene_by_environment_interactions_in_depressive_illness.\n\n\nBuenrostro, Jason D, Beijing Wu, Howard Y Chang, and William J Greenleaf. 2015. “ATAC-Seq: A Method for Assaying Chromatin Accessibility Genome-Wide.” Current Protocols in Molecular Biology 109 (1): 21–29.\n\n\nCannoodt, Robrecht, Wouter Saelens, Louise Deconinck, and Yvan Saeys. 2021. “Spearheading Future Omics Analyses Using Dyngen, a Multi-Modal Simulator of Single Cells.” Nature Communications 12 (1): 3942.\n\n\nCao, Kai, Yiguang Hong, and Lin Wan. 2022. “Manifold Alignment for Heterogeneous Single-Cell Multi-Omics Data Integration Using Pamona.” Bioinformatics 38 (1): 211–19.\n\n\nCao, Zhi-Jie, and Ge Gao. 2022. “Multi-Omics Single-Cell Data Integration and Regulatory Inference with Graph-Linked Embedding.” Nature Biotechnology 40 (10): 1458–66.\n\n\nCha, Junha, and Insuk Lee. 2020. “Single-Cell Network Biology for Resolving Cellular Heterogeneity in Human Diseases.” Experimental & Molecular Medicine 52 (11): 1798–808.\n\n\nChang, Lei, Yang Xie, Brett Taylor, Zhaoning Wang, Jiachen Sun, Ethan J Armand, Shreya Mishra, et al. 2024. “Droplet Hi-c Enables Scalable, Single-Cell Profiling of Chromatin Architecture in Heterogeneous Tissues.” Nature Biotechnology, 1–14.\n\n\nChen, Huidong, Jayoung Ryu, Michael E Vinyard, Adam Lerer, and Luca Pinello. 2024. “SIMBA: Single-Cell Embedding Along with Features.” Nature Methods 21 (6): 1003–13.\n\n\nChen, J, and WA Weiss. 2015. “Alternative Splicing in Cancer: Implications for Biology and Therapy.” Oncogene 34 (1): 1–14.\n\n\nChen, Shuxiao, Bokai Zhu, Sijia Huang, John W Hickey, Kevin Z Lin, Michael Snyder, William J Greenleaf, Garry P Nolan, Nancy R Zhang, and Zongming Ma. 2024. “Integration of Spatial and Single-Cell Data Across Modalities with Weakly Linked Features.” Nature Biotechnology 42 (7): 1096–106.\n\n\nClaringbould, Annique, and Judith B Zaugg. 2021. “Enhancers in Disease: Molecular Basis and Emerging Treatment Strategies.” Trends in Molecular Medicine 27 (11): 1060–73.\n\n\nDemetci, Pinar, Rebecca Santorella, Björn Sandstede, William Stafford Noble, and Ritambhara Singh. 2022. “SCOT: Single-Cell Multi-Omics Alignment with Optimal Transport.” Journal of Computational Biology 29 (1): 3–18.\n\n\nEa, Vuthy, Marie-Odile Baudement, Annick Lesne, and Thierry Forné. 2015. “Contribution of Topological Domains and Loop Formation to 3D Chromatin Organization.” Genes 6 (3): 734–50.\n\n\nFleck, Jonas Simon, Sophie Martina Johanna Jansen, Damian Wollny, Fides Zenk, Makiko Seimiya, Akanksha Jain, Ryoko Okamoto, et al. 2023. “Inferring and Perturbing Cell Fate Regulomes in Human Brain Organoids.” Nature 621 (7978): 365–72.\n\n\nFornes, Oriol, Jaime A Castro-Mondragon, Aziz Khan, Robin Van der Lee, Xi Zhang, Phillip A Richmond, Bhavi P Modi, et al. 2020. “JASPAR 2020: Update of the Open-Access Database of Transcription Factor Binding Profiles.” Nucleic Acids Research 48 (D1): D87–92.\n\n\nGabbutt, Calum, Ryan O. Schenck, Daniel J. Weisenberger, Christopher Kimberley, Alison Berner, Jacob Househam, Eszter Lakatos, et al. 2022. “Fluctuating Methylation Clocks for Cell Lineage Tracing at High Temporal Resolution in Human Tissues.” Nature Biotechnology 40 (5): 720–30.\n\n\nGarbulowski, Mateusz, Thomas Hillerton, Daniel Morgan, Deniz Seçilmiş, Lisbet Sonnhammer, Andreas Tjärnberg, Torbjörn EM Nordling, and Erik LL Sonnhammer. 2024. “GeneSPIDER2: Large Scale GRN Simulation and Benchmarking with Perturbed Single-Cell Data.” NAR Genomics and Bioinformatics 6 (3): lqae121.\n\n\nGauba, Kavya, Shruti Gupta, Jyoti Shekhawat, Praveen Sharma, Dharmveer Yadav, and Mithu Banerjee. 2021. “Immunomodulation by Epigenome Alterations in Mycobacterium Tuberculosis Infection.” Tuberculosis 128: 102077.\n\n\nGlancy, Eleanor, Natalie Choy, and Melanie A Eckersley-Maslin. 2024. “Bivalent Chromatin: A Developmental Balancing Act Tipped in Cancer.” Biochemical Society Transactions 52 (1): 217–29.\n\n\nGong, Boying, Yun Zhou, and Elizabeth Purdom. 2021. “Cobolt: Integrative Analysis of Multimodal Single-Cell Sequencing Data.” Genome Biology 22: 1–21.\n\n\nGupta, Chirag, Jielin Xu, Ting Jin, Saniya Khullar, Xiaoyu Liu, Sayali Alatkar, Feixiong Cheng, and Daifeng Wang. 2022. “Single-Cell Network Biology Characterizes Cell Type Gene Regulation for Drug Repurposing and Phenotype Prediction in Alzheimer’s Disease.” PLOS Computational Biology 18 (7): e1010287.\n\n\nHabib, Naomi. 2007. Analysis of DNA Motifs Based on a Novel Motif Comparison Method. Hebrew University of Jerusalem.\n\n\nHamma, Tomoko, and Adrian R Ferré-D’Amaré. 2006. “Pseudouridine Synthases.” Chemistry & Biology 13 (11): 1125–35.\n\n\nHao, Yuhan, Stephanie Hao, Erica Andersen-Nissen, William M Mauck, Shiwei Zheng, Andrew Butler, Maddie Jane Lee, et al. 2021. “Integrated Analysis of Multimodal Single-Cell Data.” Cell 184 (13): 3573–87.\n\n\nHeinz, Sven, Christopher Benner, Nathanael Spann, Eric Bertolino, Yin C Lin, Peter Laslo, Jason X Cheng, Cornelis Murre, Harinder Singh, and Christopher K Glass. 2010. “Simple Combinations of Lineage-Determining Transcription Factors Prime Cis-Regulatory Elements Required for Macrophage and b Cell Identities.” Molecular Cell 38 (4): 576–89.\n\n\nHernando-Herraez, Irene, Brendan Evano, Thomas Stubbs, Pierre-Henri Commere, Marc Jan Bonder, Stephen Clark, Simon Andrews, Shahragim Tajbakhsh, and Wolf Reik. 2019. “Ageing Affects DNA Methylation Drift and Transcriptional Cell-to-Cell Variability in Mouse Muscle Stem Cells.” Nature Communications 10 (1): 4361.\n\n\nHu, Zhirui, Pawel F Przytycki, and Katherine S Pollard. 2024. “CellWalker2: Multi-Omic Discovery of Hierarchical Cell Type Relationships and Their Associations with Genomic Annotations.” bioRxiv.\n\n\nIto, Shinsuke, Nando Dulal Das, Takashi Umehara, and Haruhiko Koseki. 2022. “Factors and Mechanisms That Influence Chromatin-Mediated Enhancer–Promoter Interactions and Transcriptional Regulation.” Cancers 14 (21): 5404.\n\n\nJiang, Yuchao, Nancy R Zhang, and Mingyao Li. 2017. “SCALE: Modeling Allele-Specific Gene Expression by Single-Cell RNA Sequencing.” Genome Biology 18: 1–15.\n\n\nKaramveer, and Yasin Uzun. 2024. “Approaches for Benchmarking Single-Cell Gene Regulatory Network Methods.” Bioinformatics and Biology Insights 18: 11779322241287120.\n\n\nKim, Daniel, Andy Tran, Hani Jieun Kim, Yingxin Lin, Jean Yee Hwa Yang, and Pengyi Yang. 2023. “Gene Regulatory Network Reconstruction: Harnessing the Power of Single-Cell Multi-Omic Data.” NPJ Systems Biology and Applications 9 (1): 51.\n\n\nKim, Mirang, and Joseph Costello. 2017. “DNA Methylation: An Epigenetic Mark of Cellular Memory.” Experimental & Molecular Medicine 49 (4): e322–22.\n\n\nLeblanc, Francis JA, and Guillaume Lettre. 2023. “Major Cell-Types in Multiomic Single-Nucleus Datasets Impact Statistical Modeling of Links Between Regulatory Sequences and Target Genes.” Scientific Reports 13 (1): 3924.\n\n\nLeiz, Janna, Maria Rutkiewicz, Carmen Birchmeier, Udo Heinemann, and Kai M Schmidt-Ott. 2021. “Technologies for Profiling the Impact of Genomic Variants on Transcription Factor Binding.” Medizinische Genetik 33 (2): 147–55.\n\n\nLi, Jingyi Jessica, Heather J Zhou, Peter J Bickel, and Xin Tong. 2024. “Dissecting Gene Expression Heterogeneity: Generalized Pearson Correlation Squares and the k-Lines Clustering Algorithm.” Journal of the American Statistical Association, 1–14.\n\n\nLi, Lei, Yumei Li, Xudong Zou, Fuduan Peng, Ya Cui, Eric J Wagner, and Wei Li. 2022. “Population-Scale Genetic Control of Alternative Polyadenylation and Its Association with Human Diseases.” Quantitative Biology 10 (1): 44–54.\n\n\nLim, Jongsu, Chanho Park, Minjae Kim, Hyukhee Kim, Junil Kim, and Dong-Sung Lee. 2024. “Advances in Single-Cell Omics and Multiomics for High-Resolution Molecular Profiling.” Experimental & Molecular Medicine 56 (3): 515–26.\n\n\nLiu, Hanqing, Jingtian Zhou, Wei Tian, Chongyuan Luo, Anna Bartlett, Andrew Aldridge, Jacinta Lucero, et al. 2021. “DNA Methylation Atlas of the Mouse Brain at Single-Cell Resolution.” Nature 598 (7879): 120–28.\n\n\nLiu, Ning, Wai Yee Low, Hamid Alinejad-Rokny, Stephen Pederson, Timothy Sadlon, Simon Barry, and James Breen. 2021. “Seeing the Forest Through the Trees: Prioritising Potentially Functional Interactions from Hi-c.” Epigenetics & Chromatin 14 (1): 41.\n\n\nLoers, Jens Uwe, and Vanessa Vermeirssen. 2024. “A Single-Cell Multimodal View on Gene Regulatory Network Inference from Transcriptomics and Chromatin Accessibility Data.” Briefings in Bioinformatics 25 (5): bbae382.\n\n\nMa, Sai, Bing Zhang, Lindsay M LaFave, Andrew S Earl, Zachary Chiang, Yan Hu, Jiarui Ding, et al. 2020. “Chromatin Potential Identified by Shared Single-Cell Profiling of RNA and Chromatin.” Cell 183 (4): 1103–16.\n\n\nMacrae, Trisha A, Julie Fothergill-Robinson, and Miguel Ramalho-Santos. 2023. “Regulation, Functions and Transmission of Bivalent Chromatin During Mammalian Development.” Nature Reviews Molecular Cell Biology 24 (1): 6–26.\n\n\nMansisidor, Andrés R, and Viviana I Risca. 2022. “Chromatin Accessibility: Methods, Mechanisms, and Biological Insights.” Nucleus 13 (1): 238–78.\n\n\nMartens, Laura D, David S Fischer, Vicente A Yépez, Fabian J Theis, and Julien Gagneur. 2024. “Modeling Fragment Counts Improves Single-Cell ATAC-Seq Analysis.” Nature Methods 21 (1): 28–31.\n\n\nMcLean, Cory Y, Dave Bristor, Michael Hiller, Shoa L Clarke, Bruce T Schaar, Craig B Lowe, Aaron M Wenger, and Gill Bejerano. 2010. “GREAT Improves Functional Interpretation of Cis-Regulatory Regions.” Nature Biotechnology 28 (5): 495–501.\n\n\nMiao, Zhen, Benjamin D Humphreys, Andrew P McMahon, and Junhyong Kim. 2021. “Multiomics Integration in the Age of Million Single Cell Data.” Nature Reviews Nephrology 17 (11): 710–24.\n\n\nMiao, Zhen, and Junhyong Kim. 2024. “Uniform Quantification of Single-Nucleus ATAC-Seq Data with Paired-Insertion Counting (PIC) and a Model-Based Insertion Rate Estimator.” Nature Methods 21 (1): 32–36.\n\n\nMignone, Flavio, Carmela Gissi, Sabino Liuni, and Graziano Pesole. 2002. “Untranslated Regions of mRNAs.” Genome Biology 3: 1–10.\n\n\nMoerman, Thomas, Sara Aibar Santos, Carmen Bravo González-Blas, Jaak Simm, Yves Moreau, Jan Aerts, and Stein Aerts. 2019. “GRNBoost2 and Arboreto: Efficient and Scalable Inference of Gene Regulatory Networks.” Bioinformatics 35 (12): 2159–61.\n\n\nNg, Bernard, William Casazza, Nam Hee Kim, Chendi Wang, Farnush Farhadi, Shinya Tasaki, David A Bennett, Philip L De Jager, Christopher Gaiteri, and Sara Mostafavi. 2021. “Cascading Epigenomic Analysis for Identifying Disease Genes from the Regulatory Landscape of GWAS Variants.” PLoS Genetics 17 (11): e1009918.\n\n\nNiazi, Sarfaraz K. 2023. “RNA Therapeutics: A Healthcare Paradigm Shift.” Biomedicines 11 (5): 1275.\n\n\nPratapa, Aditya, Amogh P Jalihal, Jeffrey N Law, Aditya Bharadwaj, and TM Murali. 2020. “Benchmarking Algorithms for Gene Regulatory Network Inference from Single-Cell Transcriptomic Data.” Nature Methods 17 (2): 147–54.\n\n\nRusilowicz-Jones, Emma V, Sylvie Urbé, and Michael J Clague. 2022. “Protein Degradation on the Global Scale.” Molecular Cell 82 (8): 1414–23.\n\n\nSchep, Alicia N, Beijing Wu, Jason D Buenrostro, and William J Greenleaf. 2017. “chromVAR: Inferring Transcription-Factor-Associated Accessibility from Single-Cell Epigenomic Data.” Nature Methods 14 (10): 975–78.\n\n\nSiersbæk, Rasmus, Songjoon Baek, Atefeh Rabiee, Ronni Nielsen, Sofie Traynor, Nicholas Clark, Albin Sandelin, et al. 2014. “Molecular Architecture of Transcription Factor Hotspots in Early Adipogenesis.” Cell Reports 7 (5): 1434–42.\n\n\nSteinbach, Nicole. 2017. PTEN Affects Gene Expression and Histone Modifications and Plays a Role in the Regulation of Transcription. Columbia University.\n\n\nStock, Marco, Niclas Popp, Jonathan Fiorentino, and Antonio Scialdone. 2024. “Topological Benchmarking of Algorithms to Infer Gene Regulatory Networks from Single-Cell RNA-Seq Data.” Bioinformatics, btae267.\n\n\nTang, Wenhao, Andreas Christ Sølvsten Jørgensen, Samuel Marguerat, Philipp Thomas, and Vahid Shahrezaei. 2023. “Modelling Capture Efficiency of Single Cell RNA-Sequencing Data Improves Inference of Transcriptome-Wide Burst Kinetics.” bioRxiv, 2023–03.\n\n\nTaylor, Rebecca C, Sean P Cullen, and Seamus J Martin. 2008. “Apoptosis: Controlled Demolition at the Cellular Level.” Nature Reviews Molecular Cell Biology 9 (3): 231–41.\n\n\nTeichmann, Sarah, and Mirjana Efremova. 2020. “Method of the Year 2019: Single-Cell Multimodal Omics.” Nature Methods 17 (1): 2020.\n\n\nTrapp, Alexandre, Csaba Kerepesi, and Vadim N Gladyshev. 2021. “Profiling Epigenetic Age in Single Cells.” Nature Aging 1 (12): 1189–1201.\n\n\nWang, Lingfei, Nikolaos Trasanidis, Ting Wu, Guanlan Dong, Michael Hu, Daniel E Bauer, and Luca Pinello. 2023. “Dictys: Dynamic Gene Regulatory Network Dissects Developmental Continuum with Single-Cell Multiomics.” Nature Methods 20: 1368–78.\n\n\nWang, Yulei, Chih Long Liu, John D Storey, Robert J Tibshirani, Daniel Herschlag, and Patrick O Brown. 2002. “Precision and Functional Specificity in mRNA Decay.” Proceedings of the National Academy of Sciences 99 (9): 5860–65.\n\n\nWu, Kevin E, Kathryn E Yost, Howard Y Chang, and James Zou. 2021. “BABEL Enables Cross-Modality Translation Between Multiomic Profiles at Single-Cell Resolution.” Proceedings of the National Academy of Sciences 118 (15).\n\n\nXie, Fangming, Ethan J Armand, Zizhen Yao, Hanqing Liu, Anna Bartlett, M Margarita Behrens, Yang Eric Li, et al. 2023. “Robust Enhancer-Gene Regulation Identified by Single-Cell Transcriptomes and Epigenomes.” Cell Genomics 3 (7).\n\n\nXu, Yang, and Rachel Patton McCord. 2022. “Diagonal Integration of Multimodal Single-Cell Data: Potential Pitfalls and Paths Forward.” Nature Communications 13 (1): 3505.\n\n\nYuan, Qiuyue, and Zhana Duren. 2024. “Inferring Gene Regulatory Networks from Single-Cell Multiome Data Using Atlas-Scale External Data.” Nature Biotechnology, 1–11.\n\n\nZhang, Qiuyu, Wenjie Cao, Jiaqi Wang, Yihao Yin, Rui Sun, Zunyi Tian, Yuhan Hu, Yalan Tan, and Ben-gong Zhang. 2024. “Transcriptional Bursting Dynamics in Gene Expression.” Frontiers in Genetics 15: 1451461.\n\n\nZhang, Ran, Laetitia Meng-Papaxanthos, Jean-philippe Vert, and William Stafford Noble. 2022. “Multimodal Single-Cell Translation and Alignment with Semi-Supervised Learning.” Journal of Computational Biology 29 (11): 1198–1212.\n\n\nZhang, Ying, and Marc-André Sirard. 2021. “Epigenetic Inheritance of Acquired Traits Through DNA Methylation.” Animal Frontiers 11 (6): 19–27.\n\n\nZhang, Ziqi, Haoran Sun, Ragunathan Mariappan, Xi Chen, Xinyu Chen, Mika S Jain, Mirjana Efremova, Sarah A Teichmann, Vaibhav Rajan, and Xiuwei Zhang. 2023. “scMoMaT Jointly Performs Single Cell Mosaic Integration and Multi-Modal Bio-Marker Detection.” Nature Communications 14 (1): 384.\n\n\nZhang, Ziqi, Chengkai Yang, and Xiuwei Zhang. 2022. “scDART: Integrating Unmatched scRNA-Seq and scATAC-Seq Data and Learning Cross-Modality Relationship Simultaneously.” Genome Biology 23 (1): 139.\n\n\nZhu, Bokai, Shuxiao Chen, Yunhao Bai, Han Chen, Nilanjan Mukherjee, Gustavo Vazquez, David R McIlwain, et al. 2021. “Robust Single-Cell Matching and Multi-Modal Analysis Using Shared and Distinct Features Reveals Orchestrated Immune Responses.” bioRxiv.\n\n\nZhu, Chenxu, Yanxiao Zhang, Yang Eric Li, Jacinta Lucero, M Margarita Behrens, and Bing Ren. 2021. “Joint Profiling of Histone Modifications and Transcriptome in Single Cells from Mouse Brain.” Nature Methods, 1–10.\n\n\nZiegler, Lukas M von, Amalia Floriou-Servou, Rebecca Waag, Rebecca R Das Gupta, Oliver Sturman, Katharina Gapp, Christina A Maat, et al. 2022. “Multiomic Profiling of the Acute Stress Response in the Mouse Hippocampus.” Nature Communications 13 (1): 1824.",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Single-cell epigenetics</span>"
    ]
  },
  {
    "objectID": "chapter5_epigenetics.html#footnotes",
    "href": "chapter5_epigenetics.html#footnotes",
    "title": "6  Single-cell epigenetics",
    "section": "",
    "text": "The technology to measure this at single-cell resolution is still being developed (see snmC-seq2 H. Liu et al. (2021)), and is particularly interesting due to methylation’s relation to cellular memory M. Kim and Costello (2017) and molecular clocks Hernando-Herraez et al. (2019); Trapp, Kerepesi, and Gladyshev (2021); Gabbutt et al. (2022).↩︎\nSee Droplet-HiC Chang et al. (2024) for an example of single-cell Hi-C.↩︎\nSee Paired-tag C. Zhu et al. (2021) for an example of single-cell histone modification.↩︎\nIf you plan on using Pando yourself (which has pretty well documented code and tutorials in R), please refer to the code directly to see how the method works: https://github.com/quadbio/Pando/blob/main/R/grn.R.↩︎\nhttps://en.wikipedia.org/wiki/Simpsons_paradox↩︎\nIf you plan on using Pando yourself (which has pretty well documented code and tutorials in R), please refer to the code directly to see how the method works: https://github.com/quadbio/Pando/blob/main/R/grn.R.↩︎\nhttps://en.wikipedia.org/wiki/Simpsons_paradox↩︎",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Single-cell epigenetics</span>"
    ]
  },
  {
    "objectID": "chapter6_dna.html",
    "href": "chapter6_dna.html",
    "title": "7  ‘Single-cell’ DNA",
    "section": "",
    "text": "7.1 Genetics 101\nUnderstanding the fundamental concepts of genetics is essential for studying genomic variation, including copy-number variations (CNVs) and single nucleotide polymorphisms (SNPs). This section provides an overview of genetic architecture, SNPs and their detection, commonly sequenced tissues, and genome annotation resources such as the UCSC Genome Browser.\nSingle Nucleotide Polymorphisms (SNPs) and Their Detection.\nA single nucleotide polymorphism (SNP) is a variation at a single base pair position in the genome that is present in a significant fraction of the population. SNPs are the most common type of genetic variation and can have functional consequences depending on their location. When an SNP occurs within a coding region, it may alter the resulting protein sequence if it leads to an amino acid substitution (nonsynonymous SNP) or have no effect if the change is synonymous. SNPs in noncoding regions can impact gene regulation by affecting transcription factor binding sites, splicing efficiency, or untranslated regions (UTRs). Since you have “two copies” of each of your 23 chromosomes, this means SNP data is a data matrix of \\(n\\) people by \\(p\\) SNP regions (think of a couple million – more on this technicality later), where each value is \\(\\{0,1,2\\}\\), see Figure 7.1. Typically, the major allele is defined as “0”, and a “1” or “2” means if how many copies of the minor allele do you have.\nSNPs are detected using high-throughput sequencing technologies, primarily whole-genome sequencing (WGS) and whole-exome sequencing (WES). In these approaches, DNA is extracted from a biological sample, fragmented, and sequenced to generate short or long reads. The raw sequencing reads are then aligned to a reference genome, and variant calling algorithms such as those implemented in GATK (McKenna et al. 2010), bcftools, and FreeBayes (Garrison and Marth 2012) identify SNPs by comparing observed nucleotide differences to the reference sequence. (See Zverinova and Guryev (2022) for a overview). The sequencing depth, or coverage, at a given genomic position determines the confidence in an SNP call, with higher coverage reducing the likelihood of sequencing errors.",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>'Single-cell' DNA</span>"
    ]
  },
  {
    "objectID": "chapter6_dna.html#sec-genetics_basics",
    "href": "chapter6_dna.html#sec-genetics_basics",
    "title": "7  ‘Single-cell’ DNA",
    "section": "",
    "text": "Figure 7.1: From https://www.genome.gov/about-genomics/educational-resources/fact-sheets/human-genomic-variation.\n\n\n\n\n\n\n7.1.0.1 Tissues Used for DNA Sequencing\nThe choice of tissue for sequencing depends on the research objective. In population genetics and germline variant studies, DNA is typically extracted from peripheral blood or saliva, as these sources provide a reliable representation of an individual’s inherited genome. For cancer studies and somatic mutation analysis, tumor biopsies and matched normal tissue (such as blood or adjacent non-tumor tissue) are commonly sequenced to distinguish acquired mutations from germline variants. Additionally, single-cell sequencing has enabled the study of genetic heterogeneity within complex tissues, allowing researchers to profile CNVs and SNPs in individual cells from a given sample.\n\n\n7.1.0.2 Gene Architecture and Functional Elements\nThe structure of a gene consists of multiple regions that contribute to its regulation, transcription, and translation. A gene typically includes a promoter region, which contains binding sites for transcription factors and RNA polymerase, playing a crucial role in gene expression regulation. The transcription start site (TSS) marks the beginning of RNA synthesis. The gene body consists of exons, which encode protein sequences, and introns, which are transcribed but spliced out during mRNA processing. The untranslated regions (UTRs), found at the 5’ and 3’ ends of the mature mRNA, influence mRNA stability, localization, and translation efficiency. Alternative polyadenylation (APA) sites within the 3’ UTR can affect transcript stability and cellular localization, providing an additional layer of post-transcriptional regulation.\nSplicing is a critical process that removes introns from pre-mRNA and joins exons to form a mature transcript. Alternative splicing allows a single gene to produce multiple transcript isoforms, greatly expanding the diversity of the proteome. Mutations or polymorphisms in splicing regulatory elements can disrupt normal splicing patterns, leading to disease-associated transcript variants.\n\n\n7.1.0.3 Protein-Coding and Noncoding Regions of the Genome\nThe human genome consists of approximately 3 billion base pairs, yet only a small fraction of this sequence directly encodes proteins. Protein-coding genes occupy approximately 1–2% of the genome, corresponding to around 20,000 protein-coding genes. However, these genes are distributed across the genome, with some regions containing high gene density while others are gene-poor. Despite the low proportion of protein-coding DNA, the noncoding genome plays an essential role in gene regulation, chromatin organization, and cellular function. Noncoding regions include promoters, enhancers, silencers, insulators, and noncoding RNAs (such as microRNAs and long noncoding RNAs) that modulate gene expression. SNPs can lie in any of the regions, see Figure 7.2.\n\n\n\n\n\n\n\nFigure 7.2: From https://www.biointeractive.org/sites/default/files/media/file/2020-02/MappingGenesSNP-StudentHO-act.pdf.\n\n\n\n\n\n\n7.1.0.4 Exploring Genomic Annotations: The UCSC Genome Browser.\nThe UCSC Genome Browser is a widely used web-based platform that provides interactive visualization of genomic annotations, including gene structures, SNP locations, and regulatory elements. Researchers use the UCSC Genome Browser to explore gene architecture, examine conservation across species, and analyze experimental data such as RNA-seq and ChIP-seq tracks. The browser integrates multiple annotation tracks that display exon-intron boundaries, transcription factor binding sites, chromatin accessibility, and population-level variant frequencies. By selecting relevant tracks, users can assess how SNPs or CNVs may influence gene function and expression.\nSee Figure 7.3, Figure 7.4, and Figure 7.5 for an example of how to use the UCSC browser.\n\n\n\n\n\n\n\nFigure 7.3: All from https://genome.ucsc.edu/cgi-bin/hgTracks?db=hg38&lastVirtModeType=default&lastVirtModeExtraState=&virtModeType=default&virtMode=0&nonVirtPosition=&position=chr19%3A44905796%2D44909393&hgsid=1906883924_WxRmL3T84AjPZVHeWbs1xUmoHbMh. (Top): Viewing the entire APOE gene (notice that the scale is roughly 1 kb of basepairs).\n\n\n\n\n\n\n\n\n\n\n\nFigure 7.4: (Middle): Zoomed in, scale of roughly 20 base pairs, where you can see the specific DNA sequence now. This is the base-pair sequence of the reference genome (here, hg38) from the 5’-to-3’ side of the DNA.\n\n\n\n\n\n\n\n\n\n\n\nFigure 7.5: (Bottom): Zoomed out, scale of roughly 100 kb base pairs, where you can see many other genes.\n\n\n\n\nFigure 7.6 demonstrates that you can tell which side of the chromsome the DNA is on. Why are there sides? Remember that transcription always goes from the 5’ end to 3’ end1, see Figure 7.7, Figure 7.8, Figure 7.9. mRNA is single-stranded, so you need to know which strand the DNA template is from.\n\n\n\n\n\n\n\nFigure 7.6: From https://genome.ucsc.edu/cgi-bin/hgTracks?db=hg38&lastVirtModeType=default&lastVirtModeExtraState=&virtModeType=default&virtMode=0&nonVirtPosition=&position=chr17%3A42949714%2D43219946&hgsid=2455618569_zy3DGTfK35AuV9F01AQaA81TBr0x. Notice that unlike Figure 7.3 where the APOE gene has arrows (in the intron regions) pointing right, the arrows for the BRAC1 gene has arrows pointing left. This means the BRAC1 gene is on the 3’-to-5’ side of the genome.\n\n\n\n\n\n\n\n\n\n\n\nFigure 7.7: (Top): From https://en.wikipedia.org/wiki/Directionality_(molecular_biology).\n\n\n\n\n\n\n\n\n\n\n\nFigure 7.8: (Bottom Left) From https://www.columbia.edu/cu/biology/courses/c2005/lectures/lec13_10.html.\n\n\n\n\n\n\n\n\n\n\n\nFigure 7.9: (Bottom Right) From https://sandwalk.blogspot.com/2007/03/gene-and-transcription-orientation.html.",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>'Single-cell' DNA</span>"
    ]
  },
  {
    "objectID": "chapter6_dna.html#sec-gwas",
    "href": "chapter6_dna.html#sec-gwas",
    "title": "7  ‘Single-cell’ DNA",
    "section": "7.2 A brief blurb about GWAS",
    "text": "7.2 A brief blurb about GWAS\nGenome-wide association studies (GWAS) analyze genetic variation across a population to identify single nucleotide polymorphisms (SNPs) associated with a phenotype of interest. The data consist of \\(n\\) donors, each genotyped at \\(p\\) SNPs, where \\(p\\) typically ranges from hundreds of thousands to millions. To enhance statistical power, imputation is commonly performed to infer unobserved genotypes based on reference panels, effectively increasing the number of analyzed SNPs. The association of each SNP with the phenotype is tested using regression models, often accounting for population stratification and relatedness through principal components or mixed models, see Figure 7.10. The results are visualized in a Manhattan plot, where each SNP’s \\(-\\log_{10}(p)\\) value is plotted against its genomic position, highlighting loci with strong associations as peaks above the genome-wide significance threshold, see Figure 7.11. See https://i2pc.es/coss/Docencia/statisticalHelper/GWAS.pdf for the basics of a GWAS analysis.\n\n\n\n\n\n\n\nFigure 7.10: From https://en.wikipedia.org/wiki/Genome-wide_association_study.\n\n\n\n\n\n\n\n\n\n\n\nFigure 7.11: From Kunkle et al. (2019).\n\n\n\n\n\n7.2.0.1 Fine mapping and other methods to get more ``causal’’ variants.\nDue to linkage disequilibrium (LD) and other factors, genetic variants are often highly correlated across a chromosome, leading to clusters of significant SNPs in GWAS results. Fine-mapping aims to disentangle these associations by leveraging LD patterns to identify the variants most likely to be causal. This is typically done using Bayesian or probabilistic approaches that assign posterior inclusion probabilities (PIPs) to SNPs, quantifying their likelihood of being causal, as illustrated in Figure 7.12. Methods such as CAVIAR Hormozdiari et al. (2014), SuSiE G. Wang et al. (2020), and FINEMAP Benner et al. (2016) integrate GWAS summary statistics with LD information to refine candidate variants. For some alternatives that are more causal in statistical flavor, see GhostKnockoff He et al. (2022). The impact of fine-mapping can be seen in Figure 7.13, where prioritization of variants reduces uncertainty and improves biological interpretability.\n\n\n\n\n\n\n\nFigure 7.12: From Q. S. Wang and Huang (2022).\n\n\n\n\n\n\n\n\n\n\n\nFigure 7.13: From Yang et al. (2023).\n\n\n\n\n\n\n7.2.0.2 Some videos to look at for fun.\n\n“How They Caught The Golden State Killer” (Veritasium): https://www.youtube.com/watch?v=KT18KJouHWg\n\n\n\n7.2.1 Before we get too far, a quick note about the types of genetic variations\nGenetic variation arises from different types of mutations and structural alterations in the genome. See Figure 7.14 and Figure 7.16.\n\nSingle Nucleotide Variant (SNV): A single base change in the DNA sequence, which can be synonymous, missense, or nonsense depending on its impact on protein coding.\n\nInsertions and Deletions (Indels): The addition or removal of a small segment of DNA, which can cause frameshift mutations if they occur in coding regions.\n\nInversions: A segment of DNA is reversed within the chromosome, potentially disrupting gene function or regulation.\n\nTandem Repeats: Short DNA sequences repeated in succession, which can expand in diseases like Huntington’s. You’re usually think of a very short sequence (10 base pairs or less) that are repeating very often.\n\nCopy Number Variations (CNVs): Large duplications or deletions of genomic regions, affecting gene dosage and expression. You’re usually thinking of a very long segment of the chromosome, ranging to 1000 to millions of base pairs that are repeated.\n\nTranslocations: The exchange of genetic material between non-homologous chromosomes, which can lead to fusion genes and genomic instability.\n\n\n\n\n\n\n\n\nFigure 7.14: From https://www.genome.gov/about-genomics/educational-resources/fact-sheets/human-genomic-variation.\n\n\n\n\n\n\n\n\n\n\n\nFigure 7.15: From https://sangerinstitute.blog/2023/05/10/a-representative-reference-genome/.\n\n\n\n\n\n\n\n\n\n\n\nFigure 7.16: From https://www.genome.gov/about-genomics/educational-resources/fact-sheets/human-genomic-variation.\n\n\n\n\n\n\n\n\n\n\n\nFigure 7.17: From https://www.genome.gov/about-genomics/educational-resources/fact-sheets/human-genomic-variation.\n\n\n\n\n\n\n\n\n\n\n\nFigure 7.18: From https://www.genome.gov/about-genomics/educational-resources/fact-sheets/human-genomic-variation.\n\n\n\n\n\n\n7.2.2 A brief note about the IGV\nThe Integrative Genomics Viewer (IGV) is a powerful tool for visualizing raw sequencing reads in a genomic context through pileup plots. See Figure 7.19 for what a “pileup” is. IGV allows users to examine aligned reads against a reference genome, displaying key features such as exons and introns of annotated genes, as well as the reference sequence itself. Individual sequencing reads are shown with base-level resolution, highlighting mismatches to the reference, including SNPs, small insertions and deletions, and structural variations such as inversions. IGV also marks sequencing errors with quality scores, enabling users to assess confidence in variant calls. By interactively navigating across genomic regions, zooming in on loci of interest, and customizing track displays, IGV facilitates the interpretation of raw sequencing data with high precision. See Figure 7.20 and Figure 7.21 as an example.\nThe IGV (depending on the version and settings) can also show insertions and deletions (see Figure 7.22), as well as inversions.\n\n\n\n\n\n\n\nFigure 7.19: From https://online.stat.psu.edu/stat555/node/106/.\n\n\n\n\n\n\n\n\n\n\n\nFigure 7.20: Top: From https://www.pacb.com/wp-content/uploads/Tech-Comparison-STRC-Pileup.pdf. The top panel shows which chromosome we’re looking at and how many base pairs our viewer is showing. The middle two rows of panel are reads (in this particular example) from one of two long-read technologies. The bottom row shows the intron/exon regions of genes in this region.\n\n\n\n\n\n\n\n\n\n\n\nFigure 7.21: Bottom: From https://www.hammerlab.org/2015/01/23/faster-pileup-loading-with-bai-indices/. This shows an explicit colored callout of the SNPs relative to the reference genome.\n\n\n\n\n\n\n\n\n\n\n\nFigure 7.22: From https://www.pacb.com/blog/igv-3-improves-support-pacbio-long-reads/.\n\n\n\n\n\n\n7.2.3 If you thought scRNA-seq data was complicated…\nWhile single-cell RNA-seq presents significant analytical challenges, studying genetics—particularly large-scale genome-wide association studies (GWAS) and population genetics—introduces an entirely new set of complexities:\n\nLinkage disequilibrium and evolutionary constraints:\nUnlike scRNA-seq, where gene expression is not typically inherited (and hence, why we can still do incredible genomic analyses with samples from very few people), genetic variants are often inherited together due to linkage disequilibrium (LD). This means that interpreting the effect of a single variant requires understanding its entire haplotype structure. Additionally, selective pressures shape the distribution of variants across populations, making genetic associations highly context-dependent.\nStructural variation beyond SNPs:\nscRNA-seq primarily deals with gene expression counts, but genetic variation extends beyond single nucleotide polymorphisms (SNPs). Structural variations, such as short tandem repeats (STRs) and copy number variations (CNVs), can have significant functional consequences yet are much harder to detect and analyze (see Chapter 6).\nReference genome challenges:\nWhile single-cell studies align reads to a standard reference genome, genetic studies must carefully consider population-specific variation and potential biases in reference genomes. Reference panels are crucial for variant calling, yet no reference is truly comprehensive, leading to systematic errors in certain populations. See Chapter 6.\nNecessity of imputation:\nUnlike transcriptomics, where missing values are typically ignored, genetic studies require imputation to infer unobserved variants, ensuring more comprehensive variant coverage. Genotyping arrays typically measure around 500,000 to 1,000,000 SNPs directly, but many common genetic variants remain untyped. Imputation leverages linkage disequilibrium (LD) patterns and large reference panels, such as 1000 Genomes or UK Biobank, to predict genotypes at millions of additional loci. After imputation, the number of SNPs analyzed can increase to 10–50 million, greatly enhancing the resolution of downstream association studies. Tools such as the Michigan Imputation Server and Beagle facilitate this process, albeit with a significant increase in computational complexity.\nMassive dataset sizes and privacy constraints:\nSingle-cell datasets typically contain tens to hundreds of thousands of cells, but genetic datasets can involve millions of individuals (e.g., UK BioBank). This introduces logistical challenges in data storage, processing, and access control, as genetic data must be handled under strict privacy regulations.\nFor this reason, many methods that analyze genetics (DNA) have to be designed to accommodate using the summary statistics of a study. As one example (among many), see Zou et al. (2022), which extends SuSIE G. Wang et al. (2020) to handle only summary statistics.\nTypically, these methods using summary statistics are “meta-analyses,” which combine many cohorts (which contain different people from different populations) to (hopefully) increase the overall statistical power.\nIncreased bioinformatics and computation demands:\nscRNA-seq pipelines rely on well-established tools for alignment, quantification, and clustering, but genetic studies demand a broader and more complex bioinformatics workflow, including variant calling, quality control, imputation, GWAS modeling, and fine-mapping. Analyzing genetic data often requires specialized HPC environments due to the scale of computations.",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>'Single-cell' DNA</span>"
    ]
  },
  {
    "objectID": "chapter6_dna.html#as-an-aside-does-my-dna-mutate-over-my-life",
    "href": "chapter6_dna.html#as-an-aside-does-my-dna-mutate-over-my-life",
    "title": "7  ‘Single-cell’ DNA",
    "section": "7.3 … As an aside: Does my DNA mutate over my life?",
    "text": "7.3 … As an aside: Does my DNA mutate over my life?\nSomatic mutations – those arising in non-germline cells – accumulate throughout an individual’s lifetime and are key contributors to genetic mosaicism. Studies indicate that somatic mutations can occur at every stage of development and continue to arise during adulthood, driven by normal cell division, environmental insults, and other factors.\nImportantly, research has shown that even healthy tissues, such as blood or brain, may harbor these post-zygotic changes that were not inherited from parental genomes.\nThe frequency of somatic mutations tends to increase with age, as documented in hematopoietic cells and other tissues where clonal expansions of mutated cells have been observed Figure 7.23.\nIn some individuals, the accumulation of such changes remains relatively modest, whereas in others, especially at older ages, hypermutability or clonal dominance may emerge, potentially affecting organ function or predisposing to disease, see more details in Bae et al. (2022). These findings highlight that our DNA, far from being static, undergoes changes over time that can have significant biological consequences. See Milholland et al. (2017) for studies of the mutation rate.\n\n\n\n\n\n\n\nFigure 7.23: From Jaiswal et al. (2014). The y-axis is a number between 0 and 1 (1 being 100%), denoting the percentage of people in that age bracket that have a mutation in hematologic cancer-related genes. For example, in the age bracket of 100–108 years old, 5 of 17 people (i.e., 29%) of people had a mutation.\n\n\n\n\nThe importance of studying somatic mutations lies in understanding both normal physiology and disease pathogenesis.\nWhile many somatic variants are functionally silent, others can affect cell growth, alter gene expression in critical pathways, or provide selective advantages to clones. Tracking these mutations illuminates how tissues develop, age, and sometimes transition to pre-malignant or malignant states.\nMoreover, the detection of specific mutation profiles in otherwise healthy tissue can serve as an early biomarker for conditions such as cancer and neurodegenerative disorders, and may also provide insights into the process of brain development and function, see potential evidence in Bouzid et al. (2023).\nThus, clarifying how frequently somatic mutations arise and determining how these mutations shape cellular behavior form a vital cornerstone for medical research and potential future therapies.",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>'Single-cell' DNA</span>"
    ]
  },
  {
    "objectID": "chapter6_dna.html#sec-single_cell_eqtl",
    "href": "chapter6_dna.html#sec-single_cell_eqtl",
    "title": "7  ‘Single-cell’ DNA",
    "section": "7.4 Studying Single-Cell eQTL",
    "text": "7.4 Studying Single-Cell eQTL\nExpression Quantitative Trait Loci (eQTL) analysis is a fundamental approach for linking genetic variation to gene expression levels, offering insights into how genetic differences influence transcriptomic regulation, see Figure 7.24. Traditional eQTL studies rely on bulk RNA sequencing data, which averages gene expression across many cells within a tissue. However, with the advent of single-cell RNA sequencing (scRNA-seq), researchers can now perform single-cell eQTL (sc-eQTL) analyses, enabling the detection of genetic effects on gene expression at a much finer resolution.\n\n\n\n\n\n\n\nFigure 7.24: From Zhuang et al. (2019).\n\n\n\n\nOne of the key advantages of sc-eQTL analysis is its ability to account for cellular heterogeneity, a limitation in bulk RNA-seq studies. Different cell types within a tissue can have distinct gene regulatory mechanisms, and bulk eQTL studies may obscure these effects by averaging signals across cell populations. Single-cell approaches, in contrast, allow researchers to stratify eQTL analysis by cell type, uncovering cell-type-specific regulatory interactions that may be masked in bulk data. Additionally, sc-eQTL studies enable the exploration of dynamic regulatory effects in response to stimuli, capturing transient gene expression changes driven by genetic variants (see Figure 4 of Yazar et al. (2022)).\nBeyond identifying associations between SNPs and gene expression, eQTL analysis can provide insights into enhancer regulation by determining whether an enhancer region containing a SNP is linked to gene expression changes at a target gene, see Figure 7.25. This is particularly useful for understanding non-coding regulatory elements that may influence disease risk.\nCompared to genome-wide association studies (GWAS), which identify statistical associations between SNPs and phenotypic traits without necessarily indicating causality, eQTL studies provide functional insights into how genetic variation affects transcriptional regulation. However, eQTL analyses alone cannot establish direct causal relationships, unlike CRISPR-based perturbation approaches such as knockouts or CRISPR interference (CRISPRi), which can experimentally validate whether a SNP within a regulatory region directly modulates gene expression. See Figure 7.26.\n\n\n\n\n\n\n\nFigure 7.25: From Sheth et al. (2024).\n\n\n\n\n\n\n\n\n\n\n\nFigure 7.26: From Sheth et al. (2024).\n\n\n\n\nThe process of conducting sc-eQTL analysis involves several computational steps. First, scRNA-seq data is preprocessed to correct for technical noise and batch effects, often using normalization methods tailored for sparse single-cell data. Next, genetic variants are genotyped using whole-genome sequencing (WGS) or genotype imputation from single-nucleotide polymorphism (SNP) arrays. Gene expression values and genetic variants are then correlated to identify eQTLs, typically using linear mixed models or Bayesian approaches that account for population structure and technical confounders. Because single-cell datasets are noisier and lower in coverage compared to bulk sequencing, careful modeling of dropout effects and overdispersion in expression data is essential.\n\n7.4.0.1 Performing your own eQTL.\nAt a high level, methods to perform GWAS (or fine-mapping, or other follow-up downstream analyses to hone in on more likely causal variants, mentioned in [Section @ref(sec-gwas)]) are sometimes repurposed for an eQTL analyses. Typically, you have genetic information of each donor and then scRNA-seq from these same donors. Then, you process the scRNA-seq data to focus on one particular cell-type in your eQTL analysis. To do this, you take all the gene expression (across many donors, but for just one cell type) to from pseudo-bulk gene expressions (one expression profile per donor), and then perform the following regression. See https://rpubs.com/MajstorMaestro/349118 or papers like T. Wang et al. (2021) to see how to perform an eQTL analyses. (These are not for single-cell variations.)\nHere are some additional details. The following procedure is used in many papers, such as Yazar et al. (2022). To perform sc-eQTL mapping for a specific cell type, expression levels are aggregated using a pseudobulk approach, and associations between genotype and expression are tested while controlling for confounding factors.\nConsider a cohort of \\(n\\) individuals, each providing scRNA-seq data. Let \\(G_i\\) represent the genotype at a given SNP for individual \\(i\\), encoded as the minor allele count (0, 1, or 2 under an additive model). Let \\(Y_i^{\\text{bulk}}\\) denote the pseudobulk expression level of a gene of interest for individual \\(i\\), obtained by summing or averaging expression across cells of the target type. We model the pseudobulk expression as: \\[\nY_i^{\\text{bulk}} = \\beta_0 + \\beta_1 G_i + \\gamma^\\top C_i + u_i + \\epsilon_i,\n\\] where \\(\\beta_1\\) quantifies the eQTL effect, \\(C_i\\) represents individual-level covariates such as age, sex, genetic ancestry principal components (PCs), and batch effects, \\(u_i\\) is a random effect capturing inter-individual variation, and \\(\\epsilon_i\\) is the residual error. (Here, you’re thinking of \\(Y_i\\) as a gene, and \\(G_i\\) is any SNP that is close to the gene, and we’ll elect a particular SNP as the eQTL hit (until we do a follow-up fine-mapping analysis) based on which one is the most significant.) To reduce technical and biological confounding, we incorporate Probabilistic Estimation of Expression Residuals (PEER) factors Stegle et al. (2010), which model hidden confounders affecting gene expression. PEER decomposes expression variation into structured components, allowing removal of unwanted effects such as batch effects, library size, and latent population structure.\nBeyond standard eQTL detection, we perform conditional cis-eQTL analysis to identify secondary genetic variants affecting expression after accounting for the top associated SNP. Given an initially detected cis-eQTL variant \\(G_i^{(1)}\\), we extend the model: \\[\nY_i^{\\text{bulk}} = \\beta_0 + \\beta_1 G_i^{(1)} + \\beta_2 G_i^{(2)} + \\gamma^\\top C_i + u_i + \\epsilon_i,\n\\] where \\(G_i^{(2)}\\) is an additional SNP in the cis-regulatory region of the gene. This analysis helps identify independent regulatory variants within the same locus.\n\n\n7.4.0.2 What are on earth are these “genetic ancestry” and “unmeasured confounders”?\nGenetic ancestry and unmeasured confounders are critical considerations in eQTL and GWAS study design. Most genetic studies are conducted in cohorts with limited ethnic diversity to reduce population structure effects, but even within homogeneous groups, subtle ancestry differences can confound associations if not properly controlled. Population stratification can create spurious correlations between genetic variants and gene expression (see Figure 7.27), while technical artifacts, batch effects, and environmental influences add further noise. To address these issues, ancestry principal components (PCs) are included as covariates in GWAS to adjust for inherited population structure, while methods like PEER capture hidden confounders in eQTL studies. Controlling for these factors ensures that detected associations reflect true biological effects rather than artifacts of ancestry or study design.\n\n\n\n\n\n\n\nFigure 7.27: From Novembre et al. (2008). This is a very famous plot which shows that the leading two PCs based on SNPs shows a very high “visual correlation” with the donor’s ancestry. This adds some credence that there are genetic ancestry that should(?) be accounted for in a genetic analysis.\n\n\n\n\nBe careful though! These are unmeasured confounders (i.e., you’re controlling for a covariate you didn’t actually measure). This naturally makes the procedure more vulnerable to “statistical tampering,” loosely speaking. How can you guarantee that two sensible researchers who define their unmeasured confounders slightly differently would yield similar biological results? See Elhaik (2022) for a commentary particular to using PCA to define genetic structure. (My personal opinion: This paper isn’t about telling you to never use PCA – it’s more to give nuance on what you should be thinking about when you do.)\n\n\n7.4.0.3 Challenges of learning eQTLs: Epistasis and pleiotropy.\nIdentifying eQTLs is complicated by epistasis and pleiotropy, which introduce nontrivial genetic interactions. Epistasis occurs when the effect of a SNP on gene expression depends on the presence of other genetic variants, making it difficult to model simple SNP-expression relationships, see Figure 7.28. This can obscure true associations if not explicitly accounted for in statistical models. Pleiotropy, where a single SNP influences multiple genes or traits, further complicates eQTL discovery by creating indirect associations that may not reflect true causal regulatory relationships. These complexities highlight the challenge of interpreting eQTL results solely through single-variant associations, necessitating approaches that account for gene-gene and gene-environment interactions.\n\n\n\n\n\n\n\nFigure 7.28: From https://en.wikipedia.org/wiki/Epistasis\n\n\n\n\n\n\n7.4.0.4 By the Way, eQTL Is Not the Only Type of QTL!\nWhile eQTL studies focus on linking genetic variation to gene expression, quantitative trait locus (QTL) mapping extends beyond transcriptomics to investigate various molecular and phenotypic traits. In addition to eQTLs, other types of QTLs provide insights into the genetic regulation of different cellular processes.\nOne important class of QTLs is splicing QTLs (sQTLs), which identify genetic variants that influence alternative splicing patterns. These variants may affect exon inclusion, intron retention, or alternative polyadenylation sites, ultimately leading to differences in transcript isoforms. Splicing QTL studies are particularly relevant in diseases where aberrant splicing plays a critical role, such as neurological disorders and cancer.\nAnother type is chromatin accessibility QTLs (caQTLs), which link genetic variants to changes in chromatin openness, often measured using ATAC-seq. These QTLs help identify regulatory elements such as enhancers and promoters that may be modulated by genetic variation, affecting transcription factor binding and downstream gene expression.\nCollectively, we call the set of all possible QTLs as xQTL, see Ng et al. (2017). (I know, this can sound like alphabet soup the very first time you learn about these.)\n\n\n7.4.0.5 By the way… LLMs are also in this race.\nRecent advances in large language models (LLMs) have enabled the prediction of gene expression directly from raw DNA sequences, leveraging architectures such as transformers, convolutional neural networks (CNNs), and recurrent neural networks (RNNs), see Figure 7.29 and Figure 7.30. These models, trained on genomic sequences, learn complex regulatory grammar and sequence motifs to infer transcriptional activity. Unlike eQTL studies, which link genetic variants to expression using population-level variation, LLMs aim to predict expression from intrinsic sequence features, potentially identifying novel regulatory elements. This approach complements TWAS by offering a purely sequence-driven method to estimate gene expression, independent of population structure or linkage disequilibrium, enhancing our understanding of transcriptional regulation. See Sasse et al. (2023) for an overview.\n\n\n\n\n\n\n\nFigure 7.29: (Left): From Enformer, Avsec et al. (2021).\n\n\n\n\n\n\n\n\n\n\n\nFigure 7.30: (Right): From Sasse et al. (2023).",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>'Single-cell' DNA</span>"
    ]
  },
  {
    "objectID": "chapter6_dna.html#other-very-large-areas-of-cell-biology-that-perform-multi-omic-analyses-involving-genetics",
    "href": "chapter6_dna.html#other-very-large-areas-of-cell-biology-that-perform-multi-omic-analyses-involving-genetics",
    "title": "7  ‘Single-cell’ DNA",
    "section": "7.5 Other (very large areas of cell biology) that perform multi-omic analyses involving genetics",
    "text": "7.5 Other (very large areas of cell biology) that perform multi-omic analyses involving genetics\nThe following are some of gigantic areas of genetics which span multiple omics that I’m doing a disservice to by simply summarizing as bullet points. (We’ll discuss phylogenetics briefly in [Section @ref(sec-natural_lineage)], which is another massive area.) The point is – if you really want to study a human disease, you’ll eventually need to learn genetics at point in your career (even if it’s not directly during your PhD or post-doc). It’s almost inevitable.\n\nPolygenic risk scores:\nPolygenic risk scores (PRS) aim to quantify an individual’s genetic predisposition to a disease or trait by aggregating the effects of many common genetic variants identified from genome-wide association studies (GWAS). The biological goal of PRS is to develop predictive models that estimate disease susceptibility based on an individual’s genotype, providing a tool for early disease screening, personalized medicine, and risk stratification, see Figure 7.31 and Figure 7.32. PRS is particularly useful in complex diseases, where multiple genetic variants contribute small additive effects to disease risk.\n\nPRS construction relies on large GWAS datasets that provide summary statistics on variant-trait associations. The scores are computed by summing the weighted effects of risk alleles across the genome, often using computational tools like LDpred Privé, Arbel, and Vilhjálmsson (2020) and PRS-CS Ge et al. (2019). However, one of the biggest challenges in PRS research is population stratification and ethnicity bias. Since most GWAS studies have been conducted in individuals of European ancestry, PRS models trained on these datasets often fail to generalize well to non-European populations due to differences in allele frequencies and linkage disequilibrium (LD) patterns, see Figure 7.33 and Figure 7.34. Addressing this computationally is a huge area of current research. For an example of PRS for single-cell data, see scDRS M. J. Zhang et al. (2022).\n\n\n\n\n\n\n\nFigure 7.31: (Left): From Kennedy et al. (2022).\n\n\n\n\n\n\n\n\n\n\n\nFigure 7.32: (Right): From Hernández-Beeftink et al. (2019).\n\n\n\n\n\n\n\n\n\n\n\nFigure 7.33: (Left) From Martin et al. (2019).\n\n\n\n\n\n\n\n\n\n\n\nFigure 7.34: (Right) From Wall and Pritchard (2003).\n\n\n\n\n\nTranscriptomic-wide association study (TWAS): A Transcriptome-Wide Association Study (TWAS) aims to identify genes whose expression levels are associated with complex traits and diseases by integrating genome-wide association study (GWAS) data with transcriptomic data. The biological goal of TWAS is to bridge the gap between genetic variation and gene expression to prioritize candidate causal genes that might drive disease susceptibility. In a overly simplistic sense, you can think of the following: \\[\n\\text{GWAS}: \\quad \\text{SNP} \\;\\rightarrow\\; \\text{Disease phenotype}\\\\\n\\text{eQTL}: \\quad \\text{SNP} \\;\\rightarrow\\; \\text{Gene expression}\\\\\n\\text{TWAS}: \\quad \\text{Genetically predicted gene expression} \\;\\rightarrow\\; \\text{Disease phenotype}\n\\] Unlike GWAS, which identifies loci associated with disease risk but does not directly implicate specific genes, TWAS infers putative gene-disease relationships by leveraging genetic regulation of gene expression. See Mai et al. (2023) for an overview.\n\nThe data required for TWAS includes GWAS summary statistics and expression quantitative trait loci (eQTL) datasets derived from bulk RNA-sequencing or single-cell RNA-sequencing studies. Typically, eQTL datasets are obtained from large-scale population-based biobanks like GTEx or UK Biobank. Common computational approaches used for TWAS include PrediXcan and FUSION, which estimate genetically predicted gene expression levels based on genotype data and test for associations with traits. However, TWAS has important caveats: it typically assume that genetically regulated gene expression effects are the primary driver of trait associations, which may not always be the case. Moreover, TWAS inherits any demographic limitations of GWAS and eQTL analyses, which means these results are often biased toward European ancestry populations due to data limitations. For an example of PRS for single-cell data, see scPredixcan Zhou et al. (2024).\n\n\n\n\n\n\n\nFigure 7.35: From Wainberg et al. (2019).\n\n\n\n\n\nMendelian randomization: Mendelian Randomization (MR) is a statistical approach used to infer causal relationships between an exposure (such as gene expression, biomarker levels, or lifestyle factors) and an outcome (such as disease risk) by leveraging genetic variants as instrumental variables. The biological goal of MR is to overcome confounding and reverse causation issues that plague observational studies, making it a powerful tool for identifying causal risk factors for diseases. MR is particularly useful in prioritizing drug targets, as it can provide evidence on whether modifying a specific biomarker or gene expression level is likely to have a therapeutic effect.\n\nMR studies require genetic association data from large GWAS and eQTL datasets to identify genetic instruments that are robustly associated with the exposure of interest. The commonly used computational tools for MR analysis include MR-Egger Burgess and Thompson (2017), MR-PRESSO Verbanck et al. (2018), and TwoSampleMR Hartwig et al. (2016), which help detect and correct for pleiotropy and other biases. However, MR has several limitations. First, the validity of MR results depends on the assumption that the chosen genetic variants only influence the outcome through the exposure and not through other pathways (i.e., no horizontal pleiotropy), see Figure 7.36 and Figure 7.38. Additionally, weak instrument bias can occur when genetic instruments have small effect sizes, reducing statistical power. Because many complex traits are influenced by highly pleiotropic variants and gene-environment interactions, refining MR methodologies and integrating multi-omics data remains an active area of research.\n\n\n\n\n\n\n\nFigure 7.36: From Li et al. (2021).\n\n\n\n\n\n\n\n\n\n\n\nFigure 7.37: From Barry et al. (2021).\n\n\n\n\n\n\n\n\n\n\n\nFigure 7.38: From Sanderson et al. (2022) for different types of pleiotropy. See https://jean997.github.io/pages/papers/s43586-021-00092-5.pdf, since it’s hard to access this paper directly.",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>'Single-cell' DNA</span>"
    ]
  },
  {
    "objectID": "chapter6_dna.html#sec-dna_structural_variation",
    "href": "chapter6_dna.html#sec-dna_structural_variation",
    "title": "7  ‘Single-cell’ DNA",
    "section": "7.6 Structural variation: Focusing on copy number variation",
    "text": "7.6 Structural variation: Focusing on copy number variation\nCopy Number Variation (CNV) refers to structural alterations in the genome that result in abnormal numbers of copies of one or more DNA segments. These can range from small events (a few hundred base pairs) to large events (millions of base pairs). CNVs can arise due to duplications, deletions, and, in rare cases, more complex rearrangements of genomic regions.\n\n\n\n\n\n\n\nFigure 7.39: From https://learngenomics.dev/docs/genomic-variation/copy-number-variation.\n\n\n\n\n\n\n\n\n\n\n\nFigure 7.40: From Xing et al. (2020).\n\n\n\n\n\n\n\n\n\n\n\nFigure 7.41: From Singh et al. (2021).\n\n\n\n\n\n7.6.0.1 Importance of CNVs.\n\nGenetic diversity: CNVs are a major contributor to human genetic variation and can affect gene expression and phenotypic traits.\nDisease relevance: CNVs have been implicated in cancers, developmental disorders, autoimmune diseases, and more.\nDiagnostic value: Detection of CNVs can provide diagnostic and prognostic markers for clinical use.\n\nSee Figure 7.42 on how copy number presents a strong signal in cancer. As an aside though, not all copy number events are necessarily deleterious. Copy number variation (depending on the region) can also be benign – see Erickson et al. (2022), Mihaylova et al. (2017).\n\n\n\n\n\n\n\nFigure 7.42: From Steele et al. (2022). Each column is a different cancer, and ploidy is the “number of chromosomes” you have among the 23 pairs (so the baseline you should expect is 2 – one from your father, one from your mother). WGD here means whole genome duplication, so a value of 3 means one entire chromosome has been duplicated. The barplot at the top tells you how many “extra copies” cancer cells of a particular type have any chromosome, where the purple color means 1xWGD, meaning the cancer cell has one extra chromosome.\n\n\n\n\nIn this set of notes, we focus on how CNVs are detected using sequencing data and the computational steps required to identify and interpret these variants.\n\n\n7.6.0.2 Sequencing-based technologies for CNV detection, and single-cell variations\nSingle-cell sequencing of DNA enables the detection of copy-number variations (CNVs) at a single-cell resolution, offering insights into cellular heterogeneity, clonal evolution in cancer, and somatic mutations in various diseases. Unlike bulk sequencing, which averages signals across many cells, single-cell sequencing allows researchers to uncover rare and cell-specific genomic changes. The three main sequencing approaches—short-read sequencing, long-read sequencing, and whole-genome sequencing (WGS)—each have distinct advantages and challenges when applied to single-cell CNV detection.\nShort-Read Sequencing (e.g. Illumina):\nShort-read sequencing, commonly used in single-cell DNA studies, generates high-throughput data with read lengths of 50–300 bp. Due to the limited DNA in single cells, whole-genome amplification (WGA) is required, introducing variability in coverage. This approach enables profiling of thousands to millions of cells, making it scalable for large studies. However, the short read length limits the resolution of large or complex CNVs, particularly in repetitive regions.\nLong-Read Sequencing (e.g. PacBio, Oxford Nanopore):\nLong-read sequencing generates reads spanning several kilobases, allowing direct observation of large CNVs and structural rearrangements. Unlike short-read methods, long reads can span entire CNV breakpoints and enable haplotype phasing, providing insights into allele-specific genomic alterations. While lower in throughput, this approach improves the resolution of highly rearranged regions. See Figure 7.43.\n\n\n\n\n\n\n\nFigure 7.43: From Garg (2021).\n\n\n\n\nWhole Genome Sequencing (WGS) in General:\nSingle-cell WGS provides an unbiased approach to detecting CNVs across the entire genome without prior assumptions about affected regions.\nBecause of the high cost of sequencing, single-cell WGS is often performed at relatively low coverage (e.g., 0.1–10x), which can impact the sensitivity and resolution of CNV detection. Additionally, single-cell WGS is prone to artifacts introduced by whole-genome amplification, sequencing errors, and allelic dropout events, necessitating advanced bioinformatics methods to correct for these biases.\nWGS generates vast amounts of data, requiring significant computational resources and careful handling of sequencing artifacts, but remains the most comprehensive method for CNV analysis.\nThe choice of sequencing technology depends on the research question, budget, and required resolution of CNV detection. To compare the three archetypical approaches:\n\n\n\n\n\n\n\n\n\nFeature\nShort-Read (Illumina)\nLong-Read (PacBio/Nanopore)\nWGS (Whole-Genome)\n\n\n\n\nResolution\nHigh for small CNVs\nHigh for large CNVs\nGenome-wide\n\n\nScalability\nHigh (many cells)\nLower (limited throughput)\nModerate\n\n\nCost\nLower per base\nHigher per base\nHigh for large cohorts\n\n\nRead Length\n50–300 bp\nThousands of bp\nShort or long reads\n\n\nBiases\nWGA bias\nHigher per-base error\nAmp. and dropout artifacts\n\n\n\n\n\n7.6.0.3 Computational Steps in CNV Analysis\nThe detection of copy-number variations (CNVs) from sequencing data requires multiple computational steps, each of which contributes to the accuracy and reliability of CNV calls. While some steps are essential, others are optional or depend on the specific research question and available data. The main stages of CNV detection include preprocessing and quality control, mapping to a reference genome, haplotype phasing, and variant calling.\n\n\n\n\n\n\n\nFigure 7.44: From Dong et al. (2020).\n\n\n\n\nSome note about terminology: germline and somatic describe the biological origin of CNVs, while karyotyping is a method for detecting CNVs (mainly large ones).\nGermline CNVs are inherited variations present in all cells of the body, including reproductive cells (sperm and egg).\nSomatic CNVs arise during a person’s lifetime and are not inherited; they occur in specific tissues, often as a result of disease processes such as cancer.\n\nPreprocessing and Quality Control:\nBefore analyzing sequencing data for CNVs, raw sequencing reads must undergo quality control and preprocessing to remove technical artifacts and improve downstream analysis accuracy. The first step is a raw data quality check using tools such as FastQC, which assesses read quality, adapter contamination, and potential sequencing artifacts. If necessary, trimming and filtering may be applied to remove low-quality reads and adapter sequences, ensuring that only high-quality data is used for subsequent analysis. Although trimming and filtering are optional, they are often beneficial for improving read alignment and overall variant detection accuracy.\nMapping to a Reference Genome:\nAfter preprocessing, sequencing reads must be aligned to a reference genome to determine their genomic positions. The choice of aligner depends on the sequencing technology used, with commonly used tools including BWA and Bowtie2 for short-read sequencing and minimap2 for long-read sequencing. Once aligned, the output is stored in a sorted and indexed BAM file, which serves as the primary input for CNV detection and other genomic analyses. Proper alignment is crucial, as errors in mapping can introduce biases in CNV calling.\nHaplotype Phasing (Optional):\nHaplotype phasing is an optional but useful step in CNV analysis that determines which genetic variants co-occur on the same chromosome copy. In the context of CNV calling, phasing is particularly valuable when investigating whether duplications or deletions are located on the same haplotype. This information can provide insights into the inheritance patterns of CNVs and their potential functional effects. Tools such as Whatshap and HapCUT2 can be used to perform haplotype phasing based on read alignment data, helping to refine CNV interpretation.\n\n\n\n\n\n\n\n\nFigure 7.45: From Garg (2021).\n\n\n\n\n\n\n\n\n\n\n\nFigure 7.46: From Tangherloni et al. (2019).\n\n\n\n\n\nVariant Calling and CNV Detection Inputs:\nCNV detection relies on multiple sources of information extracted from sequencing data. One key input is single nucleotide polymorphism (SNP) calls, which are generated using tools like GATK and bcftools. SNP data can aid CNV detection by identifying allele frequency shifts, refining CNV breakpoints, and confirming copy-number gains or losses. Additionally, read depth calculation is a fundamental step in CNV calling, as CNVs typically manifest as regions with increased or decreased sequencing coverage. Tools such as CNVnator for short-read sequencing and deepTools for depth-based analysis provide means to quantify read depth across genomic windows, facilitating CNV identification.\nCopy number detection algorithms:\nCNV detection methods broadly fall into two categories: window-based coverage analysis and event-based methods. In window-based approaches, the genome is partitioned into fixed-size bins (e.g., 1 kb or 10 kb), and read coverage within each bin is compared to an expected distribution. Hidden Markov models (HMMs) and segmentation algorithms are then used to identify regions with significantly higher or lower coverage, indicative of duplications or deletions. Event-based methods, in contrast, focus on identifying breakpoints in sequencing coverage or read-pair orientation, leveraging structural changes across multiple reads to confirm CNV events.\nEstablishing a “Control” Baseline:\nTo distinguish true CNVs from technical artifacts, a reference baseline is often established using a “panel of normals,” which consists of aggregated sequencing data from healthy individuals. This helps correct for systematic biases and variability in coverage. In cases where a matched normal sample from the same individual is available, such as in tumor-normal studies, it serves as an optimal reference for identifying somatic CNVs. Regions with significantly elevated or reduced coverage relative to the control are flagged as potential duplications or deletions.\n\n\n\n\n\n\n\n\nFigure 7.47: From Martignano et al. (2021).\n\n\n\n\n\nCorrecting biases and finalizing CNV calls:\nSeveral sources of bias must be accounted for in CNV analysis to improve accuracy. GC content bias occurs because regions with extreme GC composition may be preferentially over- or under-sequenced, affecting coverage estimates. Batch effects arise due to differences in sequencing runs, library preparation protocols, or platform variability, necessitating normalization across datasets. Mappability issues, particularly in repetitive or low-complexity genomic regions, can lead to ambiguous read alignments and false-positive CNV calls. Many CNV detection pipelines incorporate bias correction strategies, such as GC normalization and read-depth smoothing, to improve reliability in final CNV calls.\n\nSee Masood et al. (2024), L. Zhang et al. (2019) for benchmarking across various methods for CNV.\nSee Gordeeva et al. (2021) for a review on whole exome sequencing.\n\n\n7.6.0.4 Why are Hidden Markov Models (HMMs) so popular for copy-number analysis?\nHidden Markov Models (HMMs) are widely used for estimating copy number variation (CNV) due to their ability to model the underlying genomic state as a latent discrete process while accounting for sequentially dependent and noisy measurements. CNV events manifest as discrete changes in copy number along the genome, making HMMs particularly well-suited since they scan the chromosome from left to right to detect abrupt state transitions. The hidden states represent the true underlying copy number, while the observed emissions correspond to probe intensities or read depths. The transition probabilities in HMMs enforce spatial coherence, preventing spurious fluctuations and improving robustness. Methods like the Viterbi algorithm2 are especially appealing as they efficiently determine the most likely sequence of hidden states, thereby providing a globally optimal estimate of CNV breakpoints across the genome.\n\n\n7.6.1 A quick note on the reference genome\nWhen doing structural variation analyses, there is an inherent question of “what genome are you comparing against.” This is natural, as CNV is (loosely speaking) about “deviations from the typical genome,” so we need to think hard about what we are referring to when we say “typical genome.”\nWhile simplistic in explanation, there are multiple problems stemming from this pipeline. The main issue stems from the fallacy of this notion of a “reference” genome. As stated in Ballouz, Dobin, and Gillis (2019), there are many possible pitfalls of relying on a reference genome.\nAs a quote from Ballouz, Dobin, and Gillis (2019):\n\nThe reference genome is not a ‘healthy’ genome, ‘nor the most common, nor the longest, nor an ancestral haplotype’. Efforts to fix these ‘errors’ include adjusting alleles to the preferred or major allele or the use of targeted and ethnically matched genomes.\n\nSo really, the reference genome is simply an “addressing system” that many researchers can agree upon to get reproducible findings. Unsurprisingly, due to our understanding of CNV, we do not simply “count” how far along from the “start” of the chromosome we are (say, in terms of kb). This is because any CNV would shift our count. Instead we must first rely on a reference genome.\nCertainly, changing the reference genome can potentially change the results quite substantially. See papers such as Pan et al. (2019) and Wong et al. (2020).\n\n\n7.6.2 Challenges of collecting “single-cell DNA” sequencing data\nSingle-cell DNA sequencing, whether whole-genome or whole-exome, must contend with the fact that each cell contains only two copies of the genome, making any loss of genetic material “permanent.” This inherently low starting material magnifies several issues:\n\nAllele (locus) dropout: The random loss or failure to amplify one allele, resulting in incomplete or missing data for certain loci.\n\nAllelic imbalance: Unequal amplification efficiency of different alleles, which can skew variant calling and downstream analyses.\n\nAmplification error: The polymerase-mediated amplification steps can introduce additional errors or biases, confounding true biological variation.\n\nSee Figure 7.48 and Figure 7.49 for examples, and the citations mentioned there. This is a rapidly evolving field. For an example of technology that is performing multiome sequencing of RNA and WGS DNA, see scONE-seq Yu et al. (2023). For an example of diagonal integration between scRNA-seq and scDNA-seq, see Edrisi et al. (2023). See Hård et al. (2023) for how long-read sequencing is transforming the prospects of WGS DNA sequencing at single-cell resolution.\n\n\n\n\n\n\n\nFigure 7.48: From Gawad, Koh, and Quake (2016).\n\n\n\n\n\n\n\n\n\n\n\nFigure 7.49: From Valecha and Posada (2022).\n\n\n\n\n\n\n7.6.3 Studying single-cell copy-number variation using scRNA-seq data\n\n7.6.3.1 A typical choice: CopyKAT.\nCopy number karyotyping of aneuploid tumors (CopyKAT) Gao et al. (2021) is a Bayesian segmentation approach designed to infer genomic copy number profiles from single-cell RNA sequencing (scRNA-seq) data. This method distinguishes aneuploid tumor cells from diploid stromal and immune cells, enabling the characterization of clonal substructure within tumors. CopyKAT operates by ordering genes based on genomic coordinates, defining diploid controls, segmenting chromosomal regions, and clustering cells into subpopulations based on their copy number profiles.\n\n\n\n\n\n\n\nFigure 7.50: From Gao et al. (2021).\n\n\n\n\n\nModeling scRNA-seq Data for Copy Number Estimation.\nGiven a gene expression matrix \\(X\\) with rows representing genes and columns representing cells, CopyKAT begins by transforming raw unique molecular identifier (UMI) counts to stabilize variance. The log-Freeman–Tukey transformation is applied:\n\n\\[\nX' = \\log\\left(\\sqrt{X} + \\sqrt{X+1}\\right)\n\\]\nTo smooth outliers and reduce noise, polynomial dynamic linear modeling (DLM) is applied, resulting in a denoised expression matrix that captures genomic trends while mitigating single-cell technical variability.\n\nIdentifying Diploid Control Cells.\nA subset of normal diploid cells is needed to define the baseline expression profile for copy number inference. CopyKAT achieves this through clustering of the cells into 6 clusters, and then a Gaussian mixture model (GMM) is performed for the median expression for a cluster3. This GMM is used to determine a mixture of 3 Gaussians (to represent lower, baseline, or higher copy number.) The cluster with the lowest variance across genes in the GMM model is designated as the set of confident diploid cells, assuming their gene expression patterns reflect a neutral (2N) copy number state.\n\n\n\nDefining Copy Number Breakpoints.\nChromosomal breakpoints are inferred through a Poisson-gamma model combined with Markov Chain Monte Carlo (MCMC) sampling.\nAs a side-note, MCMC methods are widely used in CNV analysis because CNV segmentation involves inferring hidden states (copy number gains/losses) from noisy data.\nThis is great for CNV analyses since the copy number state of a genomic window is dependent on the state of adjacent windows.\nDetermining where a CNV starts and ends involves estimating hidden parameters, such as segment boundaries and copy number values.\nMCMC helps solve these problems by iteratively sampling from the posterior distribution of possible segmentations.\n\nTo do this, CopyKAT first computes the median gene expression for each cluster of cells. Then, for a chromosome, it bins all the genes (in order along that chromosome), and models the median gene expression among all the genes in this bin with the model:\n\\[\nX_{kj} \\sim \\text{Poisson}(\\lambda_{kj}), \\quad \\lambda_{kj} \\sim \\text{Gamma}(\\alpha_{kw}, \\beta_{kw}), \\quad \\text{for bin $w$ containing gene $j$}\n\\]\nwhere \\(X_{kj}\\) represents the original gene counts for gene \\(j\\) in cluster \\(k\\), and \\(\\alpha_{kw}\\) and \\(\\beta_{kw}\\) are parameters for this particular genomic bin \\(w\\) (containing gene \\(j\\)) and cell cluster. CopyKAT starts with bins with equal number of genes in this chromosome (again, in order along the chromosome).\nThe posterior mean for the genomic bin is computed, and a Kolmogorov–Smirnov (KS) test is used to determine if adjacent regions should be merged. The final breakpoints are determined iteratively by pooling results across single cells, establishing consensus boundaries of copy number variation.\n\nDetecting Deviations from Controls.\nOnce a reference baseline is established, CopyKAT computes relative gene expression deviations by subtracting the median expression values of the diploid control cells:\n\n\\[\nZ_{ij} = X'_{ij} - \\text{median}(X'_{\\text{diploid},j})\n\\]\nfor cell \\(i\\) and genomic segment \\(j\\), where the above median is across all the genes in the chromosome.\nThese deviations serve as the basis for segmenting chromosomal regions into three copy number states: loss, neutral, and gain.\n\nClustering Cells Based on Copy Number Profiles.\nHierarchical clustering is applied to group cells based on their copy number profiles. The clustering is performed using Ward’s linkage and Euclidean distance. Two main clusters are identified: one representing normal diploid cells and the other capturing aneuploid tumor cells. Within the aneuploid cluster, further subdivision is performed to delineate distinct tumor subpopulations with unique copy number alterations.\n\n\n\n7.6.3.2 A brief note about other approaches.\nThere are a lot of scRNA-seq methods to infer CNVs. See Chen et al. (2024) for a benchmarking.\n\n\n\n7.6.4 Other fascinating research on structural variation: Short tandem repeats\nShort Tandem Repeats (STRs) are short, consecutive sequences of nucleotides, typically ranging from two to six base pairs, that are repeated multiple times in a head-to-tail fashion, see Figure 7.51 and Figure 7.52. These repeated segments can vary in length among different individuals, making STRs a valuable marker for genetic identification and population studies. They occur throughout the genome and often exhibit high mutation rates, which contribute to genetic diversity, see Figure 7.53.\n\n\n\n\n\n\n\nFigure 7.51: From https://www.sciencedirect.com/topics/immunology-and-microbiology/short-tandem-repeat.\n\n\n\n\n\n\n\n\n\n\n\nFigure 7.52: From https://uoftmedicalgenomics.home.blog/2022/05/05/slipping-into-the-dna-architecture-of-tandem-repeat-expansion-disorders/.\n\n\n\n\n\n\n\n\n\n\n\nFigure 7.53: From Chintalaphani et al. (2021).\n\n\n\n\nSTRs are biologically significant because they can influence gene expression and genomic stability. Changes in the number of repeat units can alter regulatory regions or disrupt coding sequences, leading to variations in protein function or levels of gene expression. In some cases, expanded STRs are associated with disease mechanisms, such as those underlying disorders like Huntington’s disease or Fragile X syndrome.\nClinically, studying STRs can aid in understanding the genetic basis of certain disorders and in diagnosing conditions caused by abnormal repeat expansions, see Figure 7.54. One prominent example is Huntington’s disease, which results from expansions of a CAG repeat in the HTT gene, see Figure 7.56. This leads to an elongated polyglutamine tract in the huntingtin protein, ultimately causing neuronal dysfunction and cell death. STR research, especially when coupled with single-cell sequencing approaches, has provided new perspectives on how expansions arise and progress at the cellular level. By revealing subtle, cell-to-cell differences in repeat length, researchers can better understand disease onset, severity, and variability in progression, opening up avenues for more targeted therapies and personalized disease management.\n\n\n\n\n\n\n\nFigure 7.54: From Sznajder and Swanson (2019).\n\n\n\n\n\n\n\n\n\n\n\nFigure 7.55: From Doss et al. (2025).\n\n\n\n\n\n\n\n\n\n\n\nFigure 7.56: From https://dnascience.plos.org/2021/09/02/new-target-for-treating-huntingtons-disease-controlling-runaway-dna-repair/.\n\n\n\n\nModern analyses of Short Tandem Repeats (STRs) increasingly utilize various forms of sequencing data to pinpoint the location of these repeats and assess their potential functional roles, see Figure 7.57. Whole-genome sequencing (WGS) and targeted sequencing are often employed to identify both the presence and exact length of STR loci. Using short-read sequencing, computational methods can detect the boundaries and expansions of repeats by aligning reads to a reference genome. This enables genome-wide surveys of repeats in large cohorts, allowing researchers to correlate specific repeat expansions or contractions with phenotypic traits or disease states, see Figure 7.58. In parallel, long-read sequencing platforms, such as those provided by Pacific Biosciences or Oxford Nanopore Technologies, facilitate the direct observation of longer repeats and complex regions that may be challenging to resolve with short reads, see Figure 7.62. By integrating data on the repeat location, length, and local genomic context, researchers can infer the putative functional impacts, such as disruptions to regulatory regions, alterations in protein-coding sequences, or other mechanisms by which STRs may influence gene expression and disease susceptibility, see Figure 7.60.\n\n\n\n\n\n\n\nFigure 7.57: From Hannan (2018).\n\n\n\n\n\n\n\n\n\n\n\nFigure 7.58: From Tanudisastro et al. (2024).\n\n\n\n\n\n\n\n\n\n\n\nFigure 7.59: From Wright and Todd (2023).\n\n\n\n\n\n\n\n\n\n\n\nFigure 7.60: From Fotsing et al. (2019).\n\n\n\n\n\n\n\n\n\n\n\nFigure 7.61: From Tanudisastro et al. (2024).\n\n\n\n\n\n\n\n\n\n\n\nFigure 7.62: From Chintalaphani et al. (2021).\n\n\n\n\nShort Tandem Repeats (STRs) are a hot topic in current genomics research because of their significant variability, functional importance, and direct implications in numerous neurological and developmental disorders. While advances in sequencing technology have enhanced our ability to detect and quantify these repeats, understanding their mechanistic roles in disease remains challenging. One major gap is the development of computational methods that rigorously map variations in STR length and composition to downstream biological processes, enabling a causal understanding of how specific repeat expansions contribute to pathogenesis. (We’re scanning billions of base pairs for each person (and possibly each cell) to find these STRs!) Until more sophisticated analytical pipelines and larger, well-characterized datasets are available, significant questions remain about how best to translate STR findings into actionable clinical insights.\nSee Chintalaphani et al. (2021) for tables of which STRs have been discovered to be associated with which diseases. See Tanudisastro et al. (2024), Hannan (2018) for more details on how STR occur, what their functional role is, and how they are studied.\n\n\n\n\nAvsec, Žiga, Vikram Agarwal, Daniel Visentin, Joseph R Ledsam, Agnieszka Grabska-Barwinska, Kyle R Taylor, Yannis Assael, John Jumper, Pushmeet Kohli, and David R Kelley. 2021. “Effective Gene Expression Prediction from Sequence by Integrating Long-Range Interactions.” Nature Methods 18 (10): 1196–1203.\n\n\nBae, Taejeong, Liana Fasching, Yifan Wang, Joo Heon Shin, Milovan Suvakov, Yeongjun Jang, Scott Norton, et al. 2022. “Analysis of Somatic Mutations in 131 Human Brains Reveals Aging-Associated Hypermutability.” Science 377 (6605): 511–17.\n\n\nBallouz, Sara, Alexander Dobin, and Jesse A Gillis. 2019. “Is It Time to Change the Reference Genome?” Genome Biology 20 (1): 1–9.\n\n\nBarry, Ciarrah, Junxi Liu, Rebecca Richmond, Martin K Rutter, Deborah A Lawlor, Frank Dudbridge, and Jack Bowden. 2021. “Exploiting Collider Bias to Apply Two-Sample Summary Data Mendelian Randomization Methods to One-Sample Individual Level Data.” PLoS Genetics 17 (8): e1009703.\n\n\nBenner, Christian, Chris CA Spencer, Aki S Havulinna, Veikko Salomaa, Samuli Ripatti, and Matti Pirinen. 2016. “FINEMAP: Efficient Variable Selection Using Summary Data from Genome-Wide Association Studies.” Bioinformatics 32 (10): 1493–1501.\n\n\nBouzid, Hind, Julia A Belk, Max Jan, Yanyan Qi, Chloé Sarnowski, Sara Wirth, Lisa Ma, et al. 2023. “Clonal Hematopoiesis Is Associated with Protection from Alzheimer’s Disease.” Nature Medicine 29 (7): 1662–70.\n\n\nBurgess, Stephen, and Simon G Thompson. 2017. “Interpreting Findings from Mendelian Randomization Using the MR-Egger Method.” European Journal of Epidemiology 32: 377–89.\n\n\nChen, Xin, Li Tai Fang, Zhong Chen, Wanqiu Chen, Bin Zhu, Hongjin Wu, Malcom Moos Jr, et al. 2024. “A Benchmarking Study of Copy Number Variation Inference Methods Using Single-Cell RNA-Sequencing Data.” bioRxiv, 2024–09.\n\n\nChintalaphani, Sanjog R, Sandy S Pineda, Ira W Deveson, and Kishore R Kumar. 2021. “An Update on the Neurological Short Tandem Repeat Expansion Disorders and the Emergence of Long-Read Sequencing Diagnostics.” Acta Neuropathologica Communications 9 (1): 98.\n\n\nDong, Xiao, Lei Zhang, Xiaoxiao Hao, Tao Wang, and Jan Vijg. 2020. “SCCNV: A Software Tool for Identifying Copy Number Variation from Single-Cell Whole-Genome Sequencing.” Frontiers in Genetics 11: 505441.\n\n\nDoss, Rose M, Susana Lopez-Ignacio, Anna Dischler, Laurel Hiatt, Harriet Dashnow, Martin W Breuss, and Caroline M Dias. 2025. “Mosaicism in Short Tandem Repeat Disorders: A Clinical Perspective.” Genes 16 (2): 216.\n\n\nEdrisi, Mohammadamin, Xiru Huang, Huw A Ogilvie, and Luay Nakhleh. 2023. “Accurate Integration of Single-Cell DNA and RNA for Analyzing Intratumor Heterogeneity Using MaCroDNA.” Nature Communications 14 (1): 8262.\n\n\nElhaik, Eran. 2022. “Principal Component Analyses (PCA)-Based Findings in Population Genetic Studies Are Highly Biased and Must Be Reevaluated.” Scientific Reports 12 (1): 14683.\n\n\nErickson, Andrew, Mengxiao He, Emelie Berglund, Maja Marklund, Reza Mirzazadeh, Niklas Schultz, Linda Kvastad, et al. 2022. “Spatially Resolved Clonal Copy Number Alterations in Benign and Malignant Tissue.” Nature 608 (7922): 360–67.\n\n\nFotsing, Stephanie Feupe, Jonathan Margoliash, Catherine Wang, Shubham Saini, Richard Yanicky, Sharona Shleizer-Burko, Alon Goren, and Melissa Gymrek. 2019. “The Impact of Short Tandem Repeat Variation on Gene Expression.” Nature Genetics 51 (11): 1652–59.\n\n\nGao, Ruli, Shanshan Bai, Ying C Henderson, Yiyun Lin, Aislyn Schalck, Yun Yan, Tapsi Kumar, et al. 2021. “Delineating Copy Number and Clonal Substructure in Human Tumors from Single-Cell Transcriptomes.” Nature Biotechnology 39 (5): 599–608.\n\n\nGarg, Shilpa. 2021. “Computational Methods for Chromosome-Scale Haplotype Reconstruction.” Genome Biology 22 (1): 101.\n\n\nGarrison, Erik, and Gabor Marth. 2012. “Haplotype-Based Variant Detection from Short-Read Sequencing.” arXiv Preprint arXiv:1207.3907.\n\n\nGawad, Charles, Winston Koh, and Stephen R Quake. 2016. “Single-Cell Genome Sequencing: Current State of the Science.” Nature Reviews Genetics 17 (3): 175–88.\n\n\nGe, Tian, Chia-Yen Chen, Yang Ni, Yen-Chen Anne Feng, and Jordan W Smoller. 2019. “Polygenic Prediction via Bayesian Regression and Continuous Shrinkage Priors.” Nature Communications 10 (1): 1776.\n\n\nGordeeva, Veronika, Elena Sharova, Konstantin Babalyan, Rinat Sultanov, Vadim M Govorun, and Georgij Arapidi. 2021. “Benchmarking Germline CNV Calling Tools from Exome Sequencing Data.” Scientific Reports 11 (1): 14416.\n\n\nHannan, Anthony J. 2018. “Tandem Repeats Mediating Genetic Plasticity in Health and Disease.” Nature Reviews Genetics 19 (5): 286–98.\n\n\nHård, Joanna, Jeff E Mold, Jesper Eisfeldt, Christian Tellgren-Roth, Susana Häggqvist, Ignas Bunikis, Orlando Contreras-Lopez, et al. 2023. “Long-Read Whole-Genome Analysis of Human Single Cells.” Nature Communications 14 (1): 5164.\n\n\nHartwig, Fernando Pires, Neil Martin Davies, Gibran Hemani, and George Davey Smith. 2016. “Two-Sample Mendelian Randomization: Avoiding the Downsides of a Powerful, Widely Applicable but Potentially Fallible Technique.” International Journal of Epidemiology. Oxford University Press.\n\n\nHe, Zihuai, Linxi Liu, Michael E Belloy, Yann Le Guen, Aaron Sossin, Xiaoxia Liu, Xinran Qi, et al. 2022. “GhostKnockoff Inference Empowers Identification of Putative Causal Variants in Genome-Wide Association Studies.” Nature Communications 13 (1): 7209.\n\n\nHernández-Beeftink, Tamara, Beatriz Guillen-Guio, Jesús Villar, and Carlos Flores. 2019. “Genomics and the Acute Respiratory Distress Syndrome: Current and Future Directions.” International Journal of Molecular Sciences 20 (16): 4004.\n\n\nHormozdiari, Farhad, Emrah Kostem, Eun Yong Kang, Bogdan Pasaniuc, and Eleazar Eskin. 2014. “Identifying Causal Variants at Loci with Multiple Signals of Association.” In Proceedings of the 5th ACM Conference on Bioinformatics, Computational Biology, and Health Informatics, 610–11.\n\n\nJaiswal, Siddhartha, Pierre Fontanillas, Jason Flannick, Alisa Manning, Peter V Grauman, Brenton G Mar, R Coleman Lindsley, et al. 2014. “Age-Related Clonal Hematopoiesis Associated with Adverse Outcomes.” New England Journal of Medicine 371 (26): 2488–98.\n\n\nKennedy, Hannah L, Lisa Dinkler, Martin A Kennedy, Cynthia M Bulik, and Jennifer Jordan. 2022. “How Genetic Analysis May Contribute to the Understanding of Avoidant/Restrictive Food Intake Disorder (ARFID).” Journal of Eating Disorders 10 (1): 53.\n\n\nKunkle, Brian W, Benjamin Grenier-Boley, Rebecca Sims, Joshua C Bis, Vincent Damotte, Adam C Naj, Anne Boland, et al. 2019. “Genetic Meta-Analysis of Diagnosed Alzheimer’s Disease Identifies New Risk Loci and Implicates a\\(\\beta\\), Tau, Immunity and Lipid Processing.” Nature Genetics 51 (3): 414–30.\n\n\nLi, Xintao, Shi Peng, Bo Guan, Songwen Chen, Genqing Zhou, Yong Wei, Chao Gong, et al. 2021. “Genetically Determined Inflammatory Biomarkers and the Risk of Heart Failure: A Mendelian Randomization Study.” Frontiers in Cardiovascular Medicine 8: 734400.\n\n\nMai, Jialin, Mingming Lu, Qianwen Gao, Jingyao Zeng, and Jingfa Xiao. 2023. “Transcriptome-Wide Association Studies: Recent Advances in Methods, Applications and Available Databases.” Communications Biology 6 (1): 899.\n\n\nMartignano, Filippo, Uday Munagala, Stefania Crucitta, Alessandra Mingrino, Roberto Semeraro, Marzia Del Re, Iacopo Petrini, Alberto Magi, and Silvestro G Conticello. 2021. “Nanopore Sequencing from Liquid Biopsy: Analysis of Copy Number Variations from Cell-Free DNA of Lung Cancer Patients.” Molecular Cancer 20: 1–6.\n\n\nMartin, Alicia R, Masahiro Kanai, Yoichiro Kamatani, Yukinori Okada, Benjamin M Neale, and Mark J Daly. 2019. “Clinical Use of Current Polygenic Risk Scores May Exacerbate Health Disparities.” Nature Genetics 51 (4): 584–91.\n\n\nMasood, Daniall, Luyao Ren, Cu Nguyen, Francesco G Brundu, Lily Zheng, Yongmei Zhao, Erich Jaeger, et al. 2024. “Evaluation of Somatic Copy Number Variation Detection by NGS Technologies and Bioinformatics Tools on a Hyper-Diploid Cancer Genome.” Genome Biology 25 (1): 163.\n\n\nMcKenna, Aaron, Matthew Hanna, Eric Banks, Andrey Sivachenko, Kristian Cibulskis, Andrew Kernytsky, Kiran Garimella, et al. 2010. “The Genome Analysis Toolkit: A MapReduce Framework for Analyzing Next-Generation DNA Sequencing Data.” Genome Research 20 (9): 1297–1303.\n\n\nMihaylova, M, R Staneva, D Toncheva, M Pancheva, and S Hadjidekova. 2017. “Benign, Pathogenic and Copy Number Variations of Unknown Clinical Significance in Patients with Congenital Malformations and Developmental Delay.” Balkan Journal of Medical Genetics: BJMG 20 (1): 5.\n\n\nMilholland, Brandon, Xiao Dong, Lei Zhang, Xiaoxiao Hao, Yousin Suh, and Jan Vijg. 2017. “Differences Between Germline and Somatic Mutation Rates in Humans and Mice.” Nature Communications 8 (1): 15183.\n\n\nNg, Bernard, Charles C White, Hans-Ulrich Klein, Solveig K Sieberts, Cristin McCabe, Ellis Patrick, Jishu Xu, et al. 2017. “An xQTL Map Integrates the Genetic Architecture of the Human Brain’s Transcriptome and Epigenome.” Nature Neuroscience 20 (10): 1418–26.\n\n\nNovembre, John, Toby Johnson, Katarzyna Bryc, Zoltán Kutalik, Adam R Boyko, Adam Auton, Amit Indap, et al. 2008. “Genes Mirror Geography Within Europe.” Nature 456 (7218): 98–101.\n\n\nPan, Bohu, Rebecca Kusko, Wenming Xiao, Yuanting Zheng, Zhichao Liu, Chunlin Xiao, Sugunadevi Sakkiah, et al. 2019. “Similarities and Differences Between Variants Called with Human Reference Genome HG19 or HG38.” BMC Bioinformatics 20 (2): 17–29.\n\n\nPrivé, Florian, Julyan Arbel, and Bjarni J Vilhjálmsson. 2020. “LDpred2: Better, Faster, Stronger.” Bioinformatics 36 (22-23): 5424–31.\n\n\nSanderson, Eleanor, M Maria Glymour, Michael V Holmes, Hyunseung Kang, Jean Morrison, Marcus R Munafò, Tom Palmer, et al. 2022. “Mendelian Randomization.” Nature Reviews Methods Primers 2 (1): 6.\n\n\nSasse, Alexander, Bernard Ng, Anna E Spiro, Shinya Tasaki, David A Bennett, Christopher Gaiteri, Philip L De Jager, Maria Chikina, and Sara Mostafavi. 2023. “Benchmarking of Deep Neural Networks for Predicting Personal Gene Expression from DNA Sequence Highlights Shortcomings.” Nature Genetics 55 (12): 2060–64.\n\n\nSheth, Maya U, Wei-Lin Qiu, X Rosa Ma, Andreas R Gschwind, Evelyn Jagoda, Anthony S Tan, Hjörleifur Einarsson, et al. 2024. “Mapping Enhancer-Gene Regulatory Interactions from Single-Cell Data.” bioRxiv, 2024–11.\n\n\nSingh, Ashish Kumar, Maren Fridtjofsen Olsen, Liss Anne Solberg Lavik, Trine Vold, Finn Drabløs, and Wenche Sjursen. 2021. “Detecting Copy Number Variation in Next Generation Sequencing Data from Diagnostic Gene Panels.” BMC Medical Genomics 14 (1): 214.\n\n\nSteele, Christopher D, Ammal Abbasi, SM Ashiqul Islam, Amy L Bowes, Azhar Khandekar, Kerstin Haase, Shadi Hames-Fathi, et al. 2022. “Signatures of Copy Number Alterations in Human Cancer.” Nature 606 (7916): 984–91.\n\n\nStegle, Oliver, Leopold Parts, Richard Durbin, and John Winn. 2010. “A Bayesian Framework to Account for Complex Non-Genetic Factors in Gene Expression Levels Greatly Increases Power in eQTL Studies.” PLoS Computational Biology 6 (5): e1000770.\n\n\nSznajder, Łukasz J, and Maurice S Swanson. 2019. “Short Tandem Repeat Expansions and RNA-Mediated Pathogenesis in Myotonic Dystrophy.” International Journal of Molecular Sciences 20 (13): 3365.\n\n\nTangherloni, Andrea, Simone Spolaor, Leonardo Rundo, Marco S Nobile, Paolo Cazzaniga, Giancarlo Mauri, Pietro Liò, Ivan Merelli, and Daniela Besozzi. 2019. “GenHap: A Novel Computational Method Based on Genetic Algorithms for Haplotype Assembly.” BMC Bioinformatics 20: 1–14.\n\n\nTanudisastro, Hope A, Ira W Deveson, Harriet Dashnow, and Daniel G MacArthur. 2024. “Sequencing and Characterizing Short Tandem Repeats in the Human Genome.” Nature Reviews Genetics 25 (7): 460–75.\n\n\nValecha, Monica, and David Posada. 2022. “Somatic Variant Calling from Single-Cell DNA Sequencing Data.” Computational and Structural Biotechnology Journal 20: 2978–85.\n\n\nVerbanck, Marie, Chia-Yen Chen, Benjamin Neale, and Ron Do. 2018. “Detection of Widespread Horizontal Pleiotropy in Causal Relationships Inferred from Mendelian Randomization Between Complex Traits and Diseases.” Nature Genetics 50 (5): 693–98.\n\n\nWainberg, Michael, Nasa Sinnott-Armstrong, Nicholas Mancuso, Alvaro N Barbeira, David A Knowles, David Golan, Raili Ermel, et al. 2019. “Opportunities and Challenges for Transcriptome-Wide Association Studies.” Nature Genetics 51 (4): 592–99.\n\n\nWall, Jeffrey D, and Jonathan K Pritchard. 2003. “Haplotype Blocks and Linkage Disequilibrium in the Human Genome.” Nature Reviews Genetics 4 (8): 587–97.\n\n\nWang, Gao, Abhishek Sarkar, Peter Carbonetto, and Matthew Stephens. 2020. “A Simple New Approach to Variable Selection in Regression, with Application to Genetic Fine Mapping.” Journal of the Royal Statistical Society Series B: Statistical Methodology 82 (5): 1273–1300.\n\n\nWang, Qingbo S, and Hailiang Huang. 2022. “Methods for Statistical Fine-Mapping and Their Applications to Auto-Immune Diseases.” In Seminars in Immunopathology, 44:101–13. 1. Springer.\n\n\nWang, Tao, Yongzhuang Liu, Junpeng Ruan, Xianjun Dong, Yadong Wang, and Jiajie Peng. 2021. “A Pipeline for RNA-Seq Based eQTL Analysis with Automated Quality Control Procedures.” BMC Bioinformatics 22: 1–18.\n\n\nWong, Karen HY, Walfred Ma, Chun-Yu Wei, Erh-Chan Yeh, Wan-Jia Lin, Elin HF Wang, Jen-Ping Su, et al. 2020. “Towards a Reference Genome That Captures Global Genetic Diversity.” Nature Communications 11 (1): 5482.\n\n\nWright, Shannon E, and Peter K Todd. 2023. “Native Functions of Short Tandem Repeats.” Elife 12: e84043.\n\n\nXing, Yue, Alan R Dabney, Xiao Li, Guosong Wang, Clare A Gill, and Claudio Casola. 2020. “SECNVs: A Simulator of Copy Number Variants and Whole-Exome Sequences from Reference Genomes.” Frontiers in Genetics 11: 82.\n\n\nYang, Zikun, Chen Wang, Linxi Liu, Atlas Khan, Annie Lee, Badri Vardarajan, Richard Mayeux, Krzysztof Kiryluk, and Iuliana Ionita-Laza. 2023. “CARMA Is a New Bayesian Model for Fine-Mapping in Genome-Wide Association Meta-Analyses.” Nature Genetics 55 (6): 1057–65.\n\n\nYazar, Seyhan, Jose Alquicira-Hernandez, Kristof Wing, Anne Senabouth, M Grace Gordon, Stacey Andersen, Qinyi Lu, et al. 2022. “Single-Cell eQTL Mapping Identifies Cell Type-Specific Genetic Control of Autoimmune Disease.” Science 376 (6589): eabf3041.\n\n\nYu, Lei, Xinlei Wang, Quanhua Mu, Sindy Sing Ting Tam, Danson Shek Chun Loi, Aden KY Chan, Wai Sang Poon, et al. 2023. “scONE-Seq: A Single-Cell Multi-Omics Method Enables Simultaneous Dissection of Phenotype and Genotype Heterogeneity from Frozen Tumors.” Science Advances 9 (1): eabp8901.\n\n\nZhang, Le, Wanyu Bai, Na Yuan, and Zhenglin Du. 2019. “Comprehensively Benchmarking Applications for Detecting Copy Number Variation.” PLoS Computational Biology 15 (5): e1007069.\n\n\nZhang, Martin Jinye, Kangcheng Hou, Kushal K Dey, Saori Sakaue, Karthik A Jagadeesh, Kathryn Weinand, Aris Taychameekiatchai, et al. 2022. “Polygenic Enrichment Distinguishes Disease Associations of Individual Cells in Single-Cell RNA-Seq Data.” Nature Genetics 54 (10): 1572–80.\n\n\nZhou, Yichao, Temidayo Adeluwa, Lisha Zhu, Sofia Salazar, Sarah Sumner, Hyunki Kim, Saideep Gona, et al. 2024. “scPrediXcan Integrates Advances in Deep Learning and Single-Cell Data into a Powerful Cell-Type–Specific Transcriptome-Wide Association Study Framework.” bioRxiv, 2024–11.\n\n\nZhuang, Yonghua, Kristen Wade, Laura M Saba, and Katerina Kechris. 2019. “Development of a Tissue Augmented Bayesian Model for Expression Quantitative Trait Loci Analysis.” Mathematical Biosciences and Engineering: MBE 17 (1): 122.\n\n\nZou, Yuxin, Peter Carbonetto, Gao Wang, and Matthew Stephens. 2022. “Fine-Mapping from Summary Data with the ‘Sum of Single Effects’ Model.” PLoS Genetics 18 (7): e1010299.\n\n\nZverinova, Stepanka, and Victor Guryev. 2022. “Variant Calling: Considerations, Practices, and Developments.” Human Mutation 43 (8): 976–85.",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>'Single-cell' DNA</span>"
    ]
  },
  {
    "objectID": "chapter6_dna.html#footnotes",
    "href": "chapter6_dna.html#footnotes",
    "title": "7  ‘Single-cell’ DNA",
    "section": "",
    "text": "See https://en.wikipedia.org/wiki/Directionality_(molecular_biology) and https://en.wikipedia.org/wiki/Sense_(molecular_biology).↩︎\nTo review, the Viterbi algorithm (https://en.wikipedia.org/wiki/Viterbi_algorithm) outputs the most likely sequence of underlying copy number profiles across the chromosome given the sequencing reads of each bin.↩︎\nThis is their baseline.norm.cl function, see https://github.com/navinlabcode/copykat/blob/master/R/baseline.norm.cl.R.↩︎",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>'Single-cell' DNA</span>"
    ]
  },
  {
    "objectID": "chapter7_crispr.html",
    "href": "chapter7_crispr.html",
    "title": "8  Single-cell CRISPR editting",
    "section": "",
    "text": "8.1 Basics of how CRISPR works\nThe CRISPR-Cas system1 is a powerful genome-editing technology that allows for precise modifications of DNA in a wide range of biological systems. Originally derived from the bacterial adaptive immune system, CRISPR-Cas9 has been repurposed for genetic engineering by using a guide RNA (gRNA) to direct the Cas9 nuclease to a specific genomic locus for targeted DNA cleavage. This section discusses how CRISPR is performed in the wet lab, different functional applications of CRISPR, and how CRISPR-based perturbations are analyzed in single-cell gene expression studies.\nIn a typical CRISPR screen experiment (mainly a CRISPR knockout), a library of lentivirus-packaged guide RNAs is introduced into cells under conditions designed to infect each cell with only one or a few sgRNAs (single guide RNA), see Figure 8.1 and Figure 8.2. After selection to ensure stable integration, the cells are subjected to a particular stimulus such as drug treatment or other environmental challenge. Researchers then track the abundance of each sgRNA at the start and after the stimulus (for example, at day 0 and day 28) through next-generation sequencing. By comparing which sgRNAs become enriched or depleted, it is possible to discover genes essential for viability, pathways governing drug resistance, or other critical biological functions relevant to the phenotype under study, see Figure 8.3.\nTypical components of a CRISPR mechanism.",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Single-cell CRISPR editting</span>"
    ]
  },
  {
    "objectID": "chapter7_crispr.html#sec-chapter_7_basics",
    "href": "chapter7_crispr.html#sec-chapter_7_basics",
    "title": "8  Single-cell CRISPR editting",
    "section": "",
    "text": "Figure 8.1: Original from Wei et al. (2019), but this is directly from https://www.youtube.com/watch?v=JdCCl1uxCME.\n\n\n\n\n\n\n\n\n\n\n\nFigure 8.2: From https://www.idtdna.com/pages/education/decoded/article/overview-what-is-crispr-screening.\n\n\n\n\n\n\n\n\n\n\n\nFigure 8.3: From Esposito et al. (2019).\n\n\n\n\n\n\nCas9 protein: A DNA endonuclease that recognizes and cuts target DNA specified by the guide RNA; variations include nuclease-deactivated (dCas9) or nickase Cas9 for alternative applications. Other CRISPR-associated proteins like Cas12a (Cpf1), Cas13, or dCas9 (dead Cas9) can expand the range of target sequences, have different PAM requirements, or allow for gene regulation without cutting DNA.\nCas9 may bind sites with partial sequence complementarity, resulting in unintended cuts — this is called “off-target effects.” Various strategies (e.g., high-fidelity Cas9 variants, improved gRNA design) help minimize these effects.\nGuide RNA (gRNA): A customizable RNA sequence that directs Cas9 to the desired genomic locus; variations include single-guide RNA (sgRNA) and dual-RNA formats depending on the experimental design.\nTo streamline CRISPR-Cas9 applications in genetic engineering, scientists have designed a synthetic fusion of crRNA and tracrRNA into a single-guide RNA (sgRNA). This chimeric RNA retains both the target-specific recognition (crRNA component) and Cas9-binding function (tracrRNA component) but simplifies the system by reducing the number of necessary molecules. sgRNAs are commonly used in research and therapeutic applications due to their ease of design and efficiency in genome editing.\n\ncrRNA (CRISPR RNA): A short RNA sequence that is complementary to the target DNA and provides sequence specificity for Cas9 binding. This is typically 20 nucleotides long.\n\ntracrRNA (Trans-activating CRISPR RNA): A structural RNA that base-pairs with the crRNA and interacts with Cas9 to activate its nuclease function.\n\nIn this system, the crRNA and tracrRNA must form a duplex to guide Cas9 to the target sequence, which then leads to DNA cleavage.\nMultiple guide RNAs can be delivered simultaneously to target different loci at once, enabling complex genome-scale screens or combinatorial gene perturbations. Computational tools help optimize sgRNA sequences to maximize on-target efficiency while minimizing off-target effects. Chemically modified guide RNAs can improve stability and efficiency in vivo.\nPAM (Protospacer Adjacent Motif): A short DNA sequence adjacent to the target region that is essential for Cas9 to recognize and bind to DNA. The PAM sequence is typically “NGG” (where “N” represents any nucleotide, and “GG” is required). Without the correct PAM sequence, Cas9 cannot efficiently bind or cut the DNA, ensuring some level of specificity in genome editing. Different Cas9 variants have evolved or been engineered to recognize alternative PAM sequences, which offer broader targeting possibilities with reduced off-target effects. The cut typically happens 3 base-pairs upstream of the PAM on the target strand (i.e., in the 5′ direction).\nLentivirus: Lentiviruses are widely used as viral vectors for delivering CRISPR components into cells (variations include different promoters, packaging systems, and envelope proteins to optimize transduction efficiency), particularly for experiments requiring stable and long-term expression of Cas9 and guide RNAs. Since many cell types are difficult to transfect using conventional methods, lentiviral transduction provides an efficient way to introduce CRISPR machinery into a broad range of cell types, including non-dividing and primary cells.\nWhat is delivered to cells? (See Figure 8.4 for the construction and architecture of the lentiviral vector.)\n\nCas9 expression construct: A lentiviral vector encoding the Cas9 nuclease under a suitable promoter. In some systems, inducible promoters (e.g., doxycycline-inducible) are used to control Cas9 activity.\n\nGuide RNA (gRNA) expression construct: A separate lentiviral vector encoding the guide RNA sequence under a promoter to ensure efficient transcription.\n\nSelection markers: Often, antibiotic resistance genes or fluorescent markers are included to facilitate selection of successfully transduced cells.\n\nLentiviral delivery is essential for CRISPR applications due to its ability to stably integrate into the host genome, ensuring long-term expression of Cas9 and guide RNAs. This stability is particularly advantageous for genome-wide CRISPR knockout screens and lineage-tracing experiments. Additionally, many cell types, such as primary cells, stem cells, and immune cells, are notoriously difficult to transfect2; lentiviral transduction provides a more efficient and reliable alternative. See Figure 8.7 for how the gRNA can be injected into the cell, or if it’s integrated into the DNA, how it “borrows” the cell’s transcriptional machinery.\n\n\n\n\n\n\n\n\nFigure 8.4: (Top) From Khan et al. (2022).\n\n\n\n\n\n\n\n\n\n\n\nFigure 8.5: (Bottom left) https://bpsbioscience.com/pd-1-crispr-cas9-lentivirus-integrating-78052.\n\n\n\n\n\n\n\n\n\n\n\nFigure 8.6: (Bottom right) From Mao, Botella, and Zhu (2017).\n\n\n\n\n\n\n\n\n\n\n\nFigure 8.7: (Left) https://www.benchling.com/blog/how-to-synthesize-your-grnas-for-crispr.\n\n\n\n\n\n\n\n\n\n\n\nFigure 8.8: (Right) https://bpsbioscience.com/lentiviruses?product_type_filter=5567.\n\n\n\n\n\n8.1.0.1 A bit about the mechanism of double-stranded DNA cleavage by Cas9 in a CRISPR knockout.\nCas9-mediated DNA cleavage occurs in several distinct steps. The Cas9 scans the genome for a matching PAM sequence. Once a PAM is identified, the guide RNA (gRNA) pairs with the complementary DNA strand. The actual cleavage of DNA is catalyzed by two distinct nuclease domains within Cas9: the RuvC domain, which cuts the non-complementary (non-target) DNA strand, and the HNH domain, which cuts the complementary (target) strand. These coordinated cleavages result in a double-strand break (DSB), typically occurring 3-4 nucleotides upstream of the PAM sequence. This precise cleavage mechanism allows for highly specific genome modifications.\nOnce the double-strand break is generated, the cell must repair the damage. The two primary DNA repair mechanisms are Non-Homologous End Joining (NHEJ) and Homology-Directed Repair (HDR). NHEJ is the default repair pathway in most cells and often introduces small insertions or deletions (indels) at the cut site, leading to gene disruptions. HDR, on the other hand, allows for precise DNA modifications when a donor DNA template is provided, making it a key mechanism for precise genome editing. Understanding the role of PAM sequences and the cleavage process is critical for designing effective CRISPR-based genetic modifications.\nSee Figure 8.9 for variations of a CRISPR screen. What we’re discussing more in this chapter is a pooled CRISPR screen.\n\n\n\n\n\n\n\nFigure 8.9: From Bock et al. (2022). Note: Not all CRISPR screens are necessarily at the single-cell level, and it’s possible that no “gene expression” is measured. In the simplest CRISPR analyses, you are simply counting which gRNAs are most enriched (across the entire petri dish) after applying a stress to the cells.\n\n\n\n\n\n\n8.1.1 CRISPR in the wet lab: Design and delivery\nCRISPR experiments begin with the design of a single-guide RNA (sgRNA) that matches the target DNA sequence adjacent to a protospacer-adjacent motif (PAM), which is required for Cas9 recognition and cleavage. The choice of target site is crucial, as off-target effects can lead to unintended mutations. Computational tools such as CRISPOR (Concordet and Haeussler 2018) help predict sgRNA efficiency and minimize off-target binding.\nOnce the sgRNA is designed, it must be delivered into cells alongside the Cas9 enzyme. This can be achieved, such as using viral vectors such as lentivirus. Viral delivery is particularly useful for stable genome integration in cell populations, while other transient delivery methods allow for temporary gene editing effects. The choice of delivery method depends on the cell type, efficiency, and experimental goals. In single-cell studies, lentiviral vectors are often used to introduce a pooled library of sgRNAs, enabling large-scale CRISPR screens across thousands of individual cells.\n\n8.1.1.1 Commonly used cells.\nK562 cells, a human myelogenous leukemia cell line, are widely used in CRISPR screens due to their ease of culture, high transfection efficiency, and well-characterized genome. These cells exhibit an undifferentiated hematopoietic phenotype, making them a valuable model for studying gene regulation, hematopoiesis, and drug resistance. Their high proliferative capacity and ability to grow in suspension allow for efficient perturbation experiments at scale. Additionally, K562 cells have been used extensively in studies involving transcriptional regulation due to their rich chromatin accessibility data from ENCODE, which facilitates the identification of enhancer-gene interactions.\nAnother one I’ve seen quite often is Jurkat cells. This is a human T-cell leukemia cell line that serves as a model for immunology and T-cell signaling studies, often used in CRISPR screens focused on immune response and checkpoint regulation.\nWhile CRISPR screens are widely applied in established cell lines, extending them to other cell types requires careful experimental planning. Primary cells and non-transformed cell types often have lower transfection or transduction efficiencies, necessitating optimization of delivery methods such as electroporation or viral transduction. Additionally, cell-type-specific chromatin accessibility and DNA repair mechanisms can influence CRISPR efficiency and editing outcomes, requiring tailored guide RNA design and validation. Growth rate and population doubling time must also be considered, as slow-dividing or non-dividing cells may require prolonged selection periods or alternative screening strategies, such as inducible CRISPR systems. Finally, proper negative controls and lineage-specific reference datasets are critical to ensure accurate interpretation of perturbation effects in novel cellular contexts. While most CRISPR screens are done in vitro, there are also technical challenges (which can be controlled for) for in vivo systems, see Figure 8.10.\n\n\n\n\n\n\n\nFigure 8.10: From Kuhn, Santinha, and Platt (2021).\n\n\n\n\n\n\n\n8.1.2 The jungle of CRISPR: CRISPR-KO, CRISPRi, and CRISPRa\nCRISPR can be adapted for different functional purposes beyond simple gene knockout (KO). CRISPR-knockout (CRISPR-KO) involves the use of Cas9 to introduce double-stranded breaks at the target locus, leading to insertions or deletions (indels) that disrupt gene function, which is mainly what we’ve discussed above. This method is widely used for loss-of-function studies to investigate gene essentiality and pathway regulation.\nIn contrast, CRISPR activation (CRISPRa) and CRISPR interference (CRISPRi) enable gene expression modulation without altering the DNA sequence. CRISPRa employs a catalytically inactive Cas9 (dCas9) fused to transcriptional activators to enhance gene expression. Conversely, CRISPRi uses dCas9 fused to repressive domains such as KRAB to inhibit transcription. These methods allow for fine-tuned control over gene expression levels, making them particularly useful for studying gene regulatory networks at the single-cell level.\nSee Figure 8.11 and Figure 8.12 for examples of variations of CRISPR screens.\n\n\n\n\n\n\n\nFigure 8.11: From Esposito et al. (2019).\n\n\n\n\n\n\n\n\n\n\n\nFigure 8.12: From Bock et al. (2022).\n\n\n\n\n\n\n8.1.3 CRISPR screens and single-cell gene expression analysis\nCRISPR screening is a high-throughput approach that uses pooled single-guide RNA (sgRNA) libraries to systematically perturb thousands of genes in a single experiment. There are two main types of CRISPR screens: positive selection screens, which identify sgRNAs that promote cell survival or proliferation, and negative selection screens, which identify essential genes by tracking sgRNAs that are depleted over time. When combined with single-cell RNA sequencing (scRNA-seq), CRISPR screens can reveal gene regulatory interactions at the resolution of individual cells, enabling functional genomics studies at an unprecedented scale. See Figure 8.13 for the bulk-level analysis that does not include RNA-sequencing – this is to give you a sense of the simplistic CRISPR analysis.\n\n\n\n\n\n\n\nFigure 8.13: From Bock et al. (2022). This is an example of a bulk-level analysis that does not include RNA-sequencing.\n\n\n\n\nTo analyze CRISPR perturbations in a single-cell context, cells are first transduced with a pooled sgRNA library, followed by scRNA-seq to capture transcriptomic changes. The identity of the sgRNA in each cell must also be determined in order to link gene perturbations to expression changes. This is typically done through targeted sequencing of the sgRNA cassette embedded in the transcriptome. However, sequencing the guide RNAs presents a challenge because they lack poly-A tails, which are typically required for capture in common scRNA-seq protocols. To overcome this, specialized methods such as Perturb-seq (Dixit et al. 2016) and CROP-seq (Datlinger et al. 2017) incorporate modifications to ensure efficient capture of sgRNA sequences. For example, Perturb-seq integrates the sgRNA into a polyadenylated transcript, allowing it to be captured along with mRNA molecules during reverse transcription.\nComputational tools, which we will discuss in Section 8.2, are commonly used to analyze CRISPR screen data by linking sgRNA-induced perturbations to gene expression changes. These tools help identify differentially expressed genes in response to specific genetic perturbations, revealing functional interactions within cellular networks. By combining CRISPR-based gene perturbation with single-cell transcriptomics, researchers can systematically dissect gene function, uncover regulatory networks, and study cellular heterogeneity in response to genetic modifications.\n\n\n8.1.4 Interpreting CRISPR data and experimental considerations\nCRISPR datasets in single-cell studies typically consist of expression matrices where each row corresponds to a gene and each column represents a cell, with additional metadata indicating the sgRNA assigned to each cell. One key challenge in analyzing these datasets is ensuring that each cell receives a single sgRNA, as multiple perturbations can introduce confounding effects. Additionally, technical noise in single-cell RNA sequencing, such as dropout events and variability in sequencing depth, must be accounted for in downstream analyses.\nWhile CRISPR has revolutionized functional genomics, several caveats remain. Off-target effects can complicate result interpretation, requiring careful validation with orthogonal approaches such as RNA interference (RNAi) or small molecule inhibitors. Moreover, certain genes may be difficult to perturb due to low sgRNA efficiency or compensation from redundant pathways.\n\n8.1.4.1 More considerations and readings about CRISPR.\nSee Bock et al. (2022) for an important checklist (Box 1) to give you a sense the complexities when setting up a CRISPR experiment. Also, keep in mind that many CRISPR experiments are not measuring single-cell gene expressions. However, also (as mentioned above), there are also many CRISPR protocols to measure various omics at single-cell resolution alongside the gRNAs, see Figure 8.14.\n\n\n\n\n\n\n\nFigure 8.14: From Cheng et al. (2023).\n\n\n\n\nFor more reading: - https://www.idtdna.com/pages/education/decoded/article/overview-what-is-crispr-screening is probably one of the most helpful webpages I came across.",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Single-cell CRISPR editting</span>"
    ]
  },
  {
    "objectID": "chapter7_crispr.html#sec-chapter_7_link",
    "href": "chapter7_crispr.html#sec-chapter_7_link",
    "title": "8  Single-cell CRISPR editting",
    "section": "8.2 Linking gRNA (i.e., perturbations) to its downstream genes",
    "text": "8.2 Linking gRNA (i.e., perturbations) to its downstream genes\nUnderstanding the causal relationships between genetic perturbations and gene expression changes is a fundamental problem in genomics. Single-cell CRISPR screening technologies enable high-throughput profiling of transcriptomic changes induced by targeted genetic modifications at a single-cell resolution. The goal of the statistical analysis here is to identify genes whose expression levels are significantly altered by specific perturbations, providing insights into gene regulatory networks and functional genomics. However, accurately estimating these effects requires sophisticated statistical methodologies that can properly account for measurement noise, technical confounders, and the stochastic nature of gene expression.\nA prototypical statistical model for this analysis is based on a generalized linear model (GLM) or a negative binomial regression framework, where gene expression levels are modeled as a function of perturbation status, along with potential confounders such as sequencing depth, batch effects, and cellular state, see Figure 8.15. Here are some statistical challenges a typical statistical method might account for:\n\nInferring which cells got which perturbation: Given that perturbations are not directly observed but inferred through guide RNA (gRNA) expression, a crucial modeling step involves using a measurement error framework or latent variable model to impute perturbation identities. The presence of background noise in gRNA detection complicates direct classification of perturbed versus unperturbed cells. See Figure 8.16.\nAccount for unmeasured confounders: Variations in sequencing efficiency or cell cycle effects (i.e., unmeasured biological processes that affect both the guide RNA and gene expression) can introduce spurious associations between perturbations and gene expression if not properly adjusted\n\nFortunately, one experimental consideration we can use to advantage are negative control perturbations – perturbations that target non-functional genomic regions. These provide a null distribution against which true perturbation effects can be compared. Certain methods can use the negative controls to calibrate the p-values, while others use the negative controls to validate their control of false discovery rates.\n\n\n\n\n\n\n\nFigure 8.15: From J. L. Zhou et al. (2024).\n\n\n\n\n\n\n\n\n\n\n\nFigure 8.16: From Barry, Roeder, and Katsevich (2024).\n\n\n\n\nThe goal of this analysis is produce a p-value for every sgRNA (targeting an enhancer) and gene pair. This is often visualized a QQ-plot, shown in Figure 8.17.\n\n\n\n\n\n\n\nFigure 8.17: From Barry et al. (2021). All the points here are negative controls, meaning we do not expect biologically that the sgRNA should affect the gene. (Again, each point is a pair of sgRNA and gene.) Hence, a “good” result is one where all the p-values fall on the diagonal line (i.e., the expected quantiles of the null p-values match the observed quantiles).\n\n\n\n\n\n8.2.0.1 A typical choice: SCEPTRE.\nSCEPTRE (Barry et al. 2021) (Analysis of single-cell perturbation screens via conditional resampling) is a statistical method designed to analyze gene-gRNA associations in single-cell CRISPR screens. It distinguishes true regulatory relationships from spurious ones by properly accounting for confounding technical factors and by circumventing strict parametric assumptions.\n\nInput/Output. The input to SCEPTRE is a 1) single-cell gene expression count matrix \\(Y\\in \\mathbb{Z}_+^{n\\times p}\\) for \\(n\\) cells and \\(p\\) genes, and 2) a single-cell guide RNA count matrix of the same \\(n\\) cells, \\(X \\in \\{0,1\\}^{n\\times d}\\) for \\(d\\) perturbations. The output is a pairing between certain \\(k\\) perturbations and \\(p\\) genes (not necessarily one-to-one) with associated p-values. We can screen these p-values for significant ones after multiple-testing correction to determine which perturbations are associated (but not necessarily statistically causal in this method) with which genes.\n\n\nAre the guide RNAs measured as binary or counts?\nSCEPTRE “thresholds” the gRNA count matrix to be a binary matrix (i.e., which cells received which perturbation). However, in reality, this information is itself sequenced and can be noisy. The authors then wrote a follow-up paper called GLM-EIV (Barry, Roeder, and Katsevich 2024) to further account for this.\n\nWe describe the main components of SCEPTRE below. See Figure 8.18 for an illustration of this method.\n\nInput Data. Let \\(n\\) be the number of cells, \\(p\\) the number of genes, and \\(k\\) the number of gRNAs. The gene expression data can be represented by an \\(n \\times p\\) matrix, where each entry \\(Y_{ij}\\) is the observed count (for instance, UMI count) of gene \\(j\\) in cell \\(i\\). The gRNA detection data can be represented by an \\(n \\times d\\) binary matrix, where each entry \\(X_{ik}\\) indicates whether gRNA \\(k\\) was observed in cell \\(i\\) (commonly treated as a binary indicator). In addition, each cell \\(i\\) has a vector of technical covariates \\(Z_i \\in \\mathbb{R}^r\\) (for instance, capturing batch, sequencing depth, or other factors). These covariates are crucial, as they can affect both the probability of detecting a given gRNA and the observed gene expression counts.\nNegative Binomial Expression Model. To test the association between a particular gene \\(j\\) and gRNA \\(k\\) (typically within 1 Mb apart), consider one-dimensional slices \\(Y_i\\) and \\(X_i\\), denoting that cell \\(i\\) has count \\(Y_i\\) for gene \\(j\\) and \\(X_i \\in \\{0,1\\}\\) for gRNA \\(k\\). A typical regression model is\n\n\\[\nY_i \\sim \\mathrm{NegBin}(\\mu_i, \\alpha),\n\\quad\n\\log(\\mu_i) = \\beta_0 + \\beta \\, X_i + \\gamma^\\top Z_i,\n\\]\nwhere \\(\\alpha\\) is a dispersion parameter, \\(\\beta\\) measures how the presence of the gRNA (\\(X_i\\)) shifts the mean expression \\(\\mu_i\\), and \\(\\gamma\\) captures the effect of the technical covariates. Fitting this negative binomial regression provides a test statistic, for example a \\(z\\)-score \\(T = \\beta / \\text{SE}(\\beta)\\), that quantifies the strength of the association between \\(X_i\\) and \\(Y_i\\).\n\nLogistic Model for gRNA Detection. A key insight in SCEPTRE is that \\(X_i\\) itself is subject to measurement variability and is influenced by the same covariates \\(Z_i\\). This can be modeled via\n\n\\[\n\\pi_i = P(X_i = 1 \\mid Z_i),\n\\quad\n\\log\\!\\Bigl(\\frac{\\pi_i}{1 - \\pi_i}\\Bigr)\n= \\tau_0 + \\tau^\\top Z_i.\n\\]\nFitting this logistic model to the observed gRNA indicators provides estimated probabilities \\(\\hat{\\pi}_i\\) for each cell.\n\nConditional Resampling. SCEPTRE constructs an empirical null distribution by repeatedly resampling “fake” gRNA indicators \\(\\tilde{X}_i\\) in each cell, drawn independently from \\(\\mathrm{Bernoulli}(\\hat{\\pi}_i)\\). In each resampled dataset, one holds \\(Y_i\\) and \\(Z_i\\) fixed but replaces the original \\(X_i\\) with \\(\\tilde{X}_i\\). For each resample, one refits the negative binomial regression (using an efficient shortcut) to compute a new test statistic \\(\\tilde{T}\\). The empirical distribution of these \\(\\tilde{T}\\) values represents how the test statistic would behave under the null hypothesis (no real regulatory effect) but with confounders preserved. The SCEPTRE \\(p\\)-value compares the actual test statistic \\(T\\) against this resampling-based distribution, thus ensuring valid inference even if the negative binomial model for \\(Y_i\\) is not perfectly specified.\n\nThis is a common statistical trick. Essentially, the idea is: we constructing “fake” gRNA data that accounts for the technical factors but we are guaranteed to not relate to gene expression (thanks to how we sampled this fake data). Then, we can use this “fake” data to see what the typical estimated relation between the gRNA and gene is. We deem a gRNA and gene as a significant pair if the estimated relation is stronger than this “fake” distribution.\n\n\n\n\n\n\n\nFigure 8.18: From Barry et al. (2021).",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Single-cell CRISPR editting</span>"
    ]
  },
  {
    "objectID": "chapter7_crispr.html#estimating-gene-pathways-impacted-by-a-group-of-perturbations",
    "href": "chapter7_crispr.html#estimating-gene-pathways-impacted-by-a-group-of-perturbations",
    "title": "8  Single-cell CRISPR editting",
    "section": "8.3 Estimating gene pathways impacted by a group of perturbations",
    "text": "8.3 Estimating gene pathways impacted by a group of perturbations\nUnderstanding the impact of CRISPR-based genetic perturbations on gene expression requires methods that can accurately capture coordinated transcriptional responses. Rather than affecting single genes in isolation, many perturbations influence entire regulatory networks or gene modules. Grouping genes and guide RNAs (gRNAs) into functional modules provides a structured framework to infer how perturbations propagate through cellular pathways, enhancing the ability to detect meaningful biological signals. See Dixit et al. (2016) and Schnitzler et al. (2024) for analyses that performed this type of analysis.\nBiologically, grouping genes into modules is motivated by the observation that genetic perturbations often target key regulatory elements such as transcription factors, chromatin remodelers, or signaling pathway components. These elements control multiple downstream genes, making it crucial to infer their collective effects rather than analyzing genes independently. Single-cell CRISPR screens allow for the systematic interrogation of gene regulatory networks, but sparsity in the data and limited per-perturbation cell numbers necessitate statistical techniques that integrate information across functionally related genes. Here are some statistical challenges (very similar to the ones introduced in Section 8.2).\n\nSparse and noisy guides: Perturbation effects are often sparse, meaning that each perturbation affects only a subset of genes, necessitating regularized models that can extract meaningful structure from noisy data. Also, single-cell CRISPR screens require inference of perturbation identities, as not all cells successfully receive a gRNA, and sequencing-based methods introduce detection noise.\nUnmeasured confounders: Batch effects, cell cycle states, and sequencing depth variations, can obscure true biological signals, making it essential to employ factor models that account for these sources of variability.\nHigher MOI for cheaper sequencing costs: A complexity arises when analyzing interactions between perturbations. Many CRISPR screens employ pooled designs where multiple perturbations may be present within the same cell. This can introduce nonlinear effects or epistatic interactions, where the combined influence of two perturbations deviates from the sum of their individual effects. See Yao et al. (2024) and Lin et al. (2022) for some examples of this.\n\n\n8.3.0.1 A current choice: GSFA.\nGuided Sparse Factor Analysis (GSFA) (Y. Zhou et al. 2023) is a Bayesian approach to analyze single-cell CRISPR screens, where multiple genetic perturbations (gRNAs) and whole-transcriptome gene expression are measured across individual cells. Below is a concise description of its components, using more detailed notation. (There is no commonly agreed upon method for this analysis at this time. You should think of GSFA as a promising start of a sequence of research. Future methods might account for guide RNA efficiency, non-additive effects, bioinformatics between guide RNA and target genes, etc.)\n\nInput/Output. The input to GSFA is a 1) single-cell gene expression count matrix \\(Y\\in \\mathbb{R}^{n\\times p}\\) for \\(n\\) cells and \\(p\\) genes, and 2) a single-cell guide RNA count matrix of the same \\(n\\) cells, \\(G \\in \\{0,1\\}^{n\\times d}\\) for \\(d\\) perturbations. Here, \\(Y_{ij}\\) is the normalized expression of gene \\(j\\) in cell \\(i\\). The output of GSFA are: 1) a matrix \\(W \\in \\mathbb{R}^{p \\times k}\\) that denotes which genes is in which module (i.e., latent factor), and 2) a matrix \\(\\beta \\in \\mathbb{R}^{d \\times k}\\) that denotes which perturbation is in which module.\n\nWe describe the main components of GSFA below. See Figure 8.19 for an illustration of this method.\n\n\n\n\n\n\n\nFigure 8.19: From Y. Zhou et al. (2023).\n\n\n\n\n\nNested matrix factorization model: GSFA decomposes the expression matrix into latent factors \\(Z\\) and gene loadings \\(W\\), while modeling how these factors depend on \\(G\\):\n\n\\[\n\\underbrace{Y_{ij}}_{\\text{Expression}}\n=\n\\sum_{\\ell=1}^k Z_{i\\ell}\\,W_{j\\ell}\n+\nE_{ij},\n\\qquad\n\\underbrace{Z_{i\\ell}}_{\\text{Factors}}\n=\n\\sum_{m=1}^d G_{im}\\,\\beta_{m\\ell}\n+\n\\phi_{i,k}.\n\\]\nHere, \\(k\\) is the number of latent factors, \\(E_{ij}\\) is residual noise (often assumed Gaussian), and \\(\\phi_{i\\ell}\\) is a Gaussian random term that captures variation in factor \\(\\ell\\) not explained by perturbations. The factors \\(Z_{i\\ell}\\) can be interpreted as “gene modules” or “principal axes” of variation in the single-cell data.\n\nSparse priors and Bayesian inference: Each perturbation \\(m\\) is assumed to affect only a few latent factors, reflected in a sparse prior on the effect sizes \\(\\beta_{m\\ell}\\). Similarly, each factor \\(\\ell\\) is assumed to influence only a small subset of genes, reflected in a sparse prior on \\(W_{j\\ell}\\). These priors impose the idea that genetic perturbations typically alter only a limited set of biological pathways. GSFA uses Gibbs sampling to draw from the posterior distributions of \\(\\beta_{m\\ell}\\), \\(W_{j\\ell}\\), and \\(Z_{i\\ell}\\) given the observed data \\((Y, G)\\).\nFactor association: Once \\(Z\\) and \\(\\beta\\) are estimated, GSFA identifies which gRNAs significantly shift which factors. The parameter \\(\\beta_{m\\ell}\\) measures how strongly perturbation \\(m\\) activates or represses factor \\(\\ell\\). Posterior inclusion probabilities (PIPs) are computed to assess confidence in each \\(\\beta_{m\\ell}\\) being nonzero.\nGene-level effects: GSFA also summarizes the overall impact of perturbation \\(m\\) on gene \\(j\\). Since perturbation \\(m\\) can affect multiple factors, and each factor influences the expression of gene \\(j\\), the total effect is\n\n\\[\n\\theta_{mj}\n=\n\\sum_{\\ell=1}^k \\beta_{m\\ell}\\,W_{j\\ell}.\n\\]\nThe distribution of \\(\\theta_{m,j}\\) is sampled under the model’s posterior, yielding an LFSR (local false sign rate) that quantifies significance and sign confidence of the perturbation’s effect on that gene.\nIn practice, GSFA is applied to single-cell CRISPR screen data as follows. First, one often transforms count data (for example, via deviance residuals) and centers/scales covariates. Next, one fits GSFA via Gibbs sampling, obtaining posterior samples of the factors, gene loadings, and perturbation-factor effects. The factor discovery step can reveal broad biological modules (cell-cycle, immune response, neuronal development, etc.), while the gene-level effect summaries \\(\\theta_{mj}\\) yield a differential expression–style list of significantly perturbed genes for each gRNA. By borrowing information across genes that move together, GSFA can be more sensitive than a naive single-gene test, and can better separate real signals from confounding or measurement noise.\n\n\n8.3.0.2 A brief note about other work.\nSchnitzler et al. (2024) demonstrates using CRISPR to link SNPs in a GWAS to the regulated genes. (This paper also mentions a consensus NMF, which illustrates a different variation of clustering genes by regulatory pathways.) Yao et al. (2024) demonstrates a method to “unravel” the effect of each perturbation on genes in high MOI experiments, where there are multiple perturbations purposely placed in cell, or multiple cells purposely placed in each droplet.",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Single-cell CRISPR editting</span>"
    ]
  },
  {
    "objectID": "chapter7_crispr.html#prediction-perturbation-effects-for-crispr-screens-but-other-types-of-perturbations-as-well",
    "href": "chapter7_crispr.html#prediction-perturbation-effects-for-crispr-screens-but-other-types-of-perturbations-as-well",
    "title": "8  Single-cell CRISPR editting",
    "section": "8.4 Prediction perturbation effects (for CRISPR screens, but other types of perturbations as well)",
    "text": "8.4 Prediction perturbation effects (for CRISPR screens, but other types of perturbations as well)\nA fundamental computational challenge in single-cell perturbation studies is predicting how a perturbation, such as a drug treatment or CRISPR-based genetic modification, affects cellular behavior. This challenge arises in two primary contexts: (1) given a perturbation applied to one cell type, where both control and perturbed states are observed, inferring how another cell type would respond to the same perturbation based on its unperturbed expression; or (2) disentangling the latent space of perturbations from the latent space of cell embeddings, allowing for generalizable predictions of perturbation effects even in the absence of direct observations. The latter approach leverages biological priors on perturbation relationships, enabling the extrapolation of perturbation effects across unseen conditions. Accurate prediction methods are crucial for understanding drug responses, genetic knockouts, and CRISPR-based enhancer perturbations, ultimately providing insights into gene regulatory networks and therapeutic interventions.\n\n8.4.0.1 Hold on… Why do we need this again?\nRemember: If we use a low MOI (ex: MOI of 0.3) experiment, we need many cells to receive each guide, and we even more cells because most cells won’t receive a guide. To quote Bock et al. (2022),\n\n“For both genome-scale and focused CRISPR knockout (CRISPRko) screens, it is advisable to include at least four different gRNAs for each target gene, although carefully designed and validated gRNA libraries with fewer gRNAs per gene can provide reliable results. All gRNA libraries should include gRNAs for application-specific positive and negative control genes, which are important to validate the screen. In addition, they should include control gRNAs that target known safe harbour loci or other genomic regions where no specific effects of gene editing are expected, in order to account for the DNA damage response and for non-specific reduction in cell proliferation caused by CRISPRko. …\nAs a guideline, we recommend a coverage of 100-200 cells per target gene for positive selection screens and 500-1,000 cells per target gene for negative selection screens.”\n\n(The reason negative selection screens need more cells is because these cells will die from the stressor after the CRISPRko integration. So you need to be confident these cells really “died” (instead of you happening by bad luck to miss these cells during sequencing).)\nFor this reasons, some CRISPR experiments purposely use a high MOI (think of 10 to 50). This reduces the number of cells they need, since most cells will receive multiple guides. As one concrete example, see Gasperini et al. (2019), which performed a CRISPRi screen. They targeted 1,119 candidate enhancer elements (which was near 5,611 genes) in K562 cells, and used a high MOI (roughly 15) across 47,650 cells. This means, if they used a conservative MOI=1 (i.e., each cell receives only one guide), they would needed about \\(47,650 \\times 15 \\approx 715,000\\) cells. (That would make that experiment a massive (and extremely expensive) single-cell experiments.)\nHowever, the drawback of high MOI is that sometimes you cannot reasonably rule that different sgRNA doesn’t interact with one another. For this reason, we might wonder: Can we: 1) use a low MOI experiment, 2) leverage some biological insights about these sgRNA, and 3) develop a fancy computational tool to synthetically predict what the effects of the sgRNA we didn’t actually use are?\n\n\n8.4.0.2 Brief aside: What on earth is a “normalizing flow neural networks”?\nNormalizing flow neural networks provide a framework to construct a rich, complex probability distribution by applying a series of invertible transformations to a simple base distribution (often a Gaussian), see Figure 8.20 and Figure 8.21. Each transformation is designed to be bijective and differentiable, which ensures that the overall mapping from the latent space to the data space remains invertible. This property allows for exact likelihood evaluation, because the change of variables formula can be applied directly to the transformed distribution. In practice, one computes the log-likelihood of an observed sample by summing the log of the Jacobian determinant of each invertible mapping and the log-likelihood of the base distribution.\n\n\n\n\n\n\n\nFigure 8.20: From https://lilianweng.github.io/posts/2018-10-13-flow-models/.\n\n\n\n\n\n\n\n\n\n\n\nFigure 8.21: From https://lilianweng.github.io/posts/2018-10-13-flow-models/.\n\n\n\n\nInvertibility is a key difference between normalizing flows and Variational Autoencoders (VAEs). In a VAE, an encoder approximates a posterior distribution over the latent variables, but it is generally not invertible. Consequently, VAEs compute a lower bound of the log-likelihood rather than the exact likelihood. In contrast, the invertible nature of normalizing flows enables direct calculation of the log-likelihood, thereby avoiding the need for variational approximations. This leads to more precise density estimation and can offer a clearer interpretation of how each layer transforms data.\nHere is one concrete example of what a normalizing flow network is, which is called RealNVP (where NVP stands for “non-volume preserving”). RealNVP (Dinh, Sohl-Dickstein, and Bengio 2016) is a type of invertible (or “normalizing flow”) model where each transformation can be inverted cheaply by design. The primary idea is to split the input vector \\(\\mathbf{x}\\) into two parts, keep one part unchanged (\\(\\mathbf{x}_1\\)), and transform the other part (\\(\\mathbf{x}_2\\)) in a way that is guaranteed to be invertible.\n\nCoupling Layer: Partition \\(\\mathbf{x}\\) into \\(\\mathbf{x}_1\\) and \\(\\mathbf{x}_2\\). Then, define the output \\(\\mathbf{y} = (\\mathbf{y}_1, \\mathbf{y}_2)\\) where \\(\\mathbf{y}_1 = \\mathbf{x}_1\\) and\n\n\\[\n\\mathbf{y}_2 = \\mathbf{x}_2 \\,\\odot\\, \\exp\\bigl(\\mathbf{s}(\\mathbf{x}_1)\\bigr) + \\mathbf{t}(\\mathbf{x}_1).\n\\]\nThe functions \\(\\mathbf{s}(\\cdot)\\) and \\(\\mathbf{t}(\\cdot)\\) can be any neural networks that output real-valued vectors. The exponential ensures a nonzero scale factor, while addition by \\(\\mathbf{t}\\) is trivially invertible. See Figure 8.22.\n\n\n\n\n\n\n\nFigure 8.22: From Dinh, Sohl-Dickstein, and Bengio (2016).\n\n\n\n\n\nEnsuring this transformation is invertible: The inverse of the above transformation is\n\n\\[\n\\mathbf{x}_1 = \\mathbf{y}_1, \\quad\n\\mathbf{x}_2 = \\bigl(\\mathbf{y}_2 - \\mathbf{t}(\\mathbf{y}_1)\\bigr) \\,\\odot\\, \\exp\\bigl(-\\mathbf{s}(\\mathbf{y}_1)\\bigr).\n\\]\nBecause \\(\\mathbf{x}_1\\) remains the same, it is straightforward to reconstruct \\(\\mathbf{x}_2\\). No matter how \\(\\mathbf{s}\\) and \\(\\mathbf{t}\\) are learned, the coupling layer is invertible by construction.\nSplitting the input and only transforming part of it guarantees efficient forward and inverse computations. By composing multiple coupling layers, we can create flexible density estimators while preserving tractable log-likelihood calculation.\nSee https://lilianweng.github.io/posts/2018-10-13-flow-models/, https://paperswithcode.com/method/affine-coupling, https://bjlkeng.io/posts/normalizing-flows-with-real-nvp/, and Kobyzev, Prince, and Brubaker (2020) for useful overviews about normalizing flows, with some details about the way to construct normalizing flows using affine transformations.\n(Sidenote: This context is mainly only needed to understand PerturbNet (Yu and Welch 2022). There are plenty of methods to predict perturbation effects not build using normalizing flow networks. See scGen (Lotfollahi, Wolf, and Theis 2019) for example, which is built on your more typical VAE architecture.)\n\n\n8.4.0.3 State-of-the-art research: PerturbNet.\nPerturbNet (Yu and Welch 2022) is a deep generative framework that predicts single-cell gene expression responses under both observed and unseen chemical or genetic perturbations. That is, we want to predict the effect of perturbation even if none of cells ever received this perturbation.\n\nInput/Output. The input to PerturbNet (when trying to perturb the impact of CRISPRi perturbations) is a 1) single-cell gene expression count matrix \\(\\mathbb{Z}_+^{n\\times p}\\) for \\(n\\) cells and \\(p\\) genes, 2) a single-cell guide RNA count matrix of the same \\(n\\) cells, \\(\\{0,1\\}^{n\\times d}\\) for \\(d\\) perturbations, and 3) a database that groups the perturbations (many of which might not the \\(d\\) perturbations you actually measured) into pathways. The output is three things: 1) a VAE to embed each of the \\(n\\) cells into low-dimensional space, 2) a VAE to embed each of the perturbations (including the \\(d\\) in your dataset) into a low-dimensional space, and 3) a learned function that takes in a cell’s latent representation and perturbation’s latent representation and outputs the (predicted) cell’s latent representation after receiving that perturbation.\n\nIt is designed around three principal building blocks: (i) perturbation representation networks, (ii) cell-state representation networks, and (iii) a conditional invertible neural network (cINN) that translates perturbation embeddings into full distributions of cellular states.\n\nPerturbation Representation Networks (GenotypeVAE or ESM): To capture key features of chemical or genetic perturbations in a low-dimensional, learnable space, PerturbNet uses different encoder architectures. We’ll just focus on the CRISPR-related perturbations in our discussion here. For CRISPR knockdown or CRISPRi/a perturbations, a GenotypeVAE is used, which starts from a high-dimensional GO-term annotation vector for each target gene (or union of genes), then encodes this vector into a condensed gene-function latent space via fully-connected layers. In the case of coding-sequence edits (such as CRISPR knockouts which introduce changes to the genetics), perturbations are encoded by a pretrained transformer (e.g. ESM, which stands for “evolutionary scale modeling”3), which outputs a deterministic embedding of amino-acid sequences.\n\nThe point is: we use biological insights about these perturbations (which use established databases) to learn the “space of perturbations.” See Figure 8.23 and Figure 8.24.\n\n\n\n\n\n\n\nFigure 8.23: From Yu and Welch (2022). GenotypeVAE to learn a low-dimensional representation for each gene based on which pathways it is known to be involved in.\n\n\n\n\n\n\n\n\n\n\n\nFigure 8.24: From Yu and Welch (2022). ESM to learn a low-dimensional representation of the protein sequence (which is a “sequence of words” (language model).\n\n\n\n\n\nCell-state representation network: Separately, PerturbNet learns a latent space for the single-cell gene expression profiles. This is similar to your typical VAE for scRNA-seq using a negative binomial-likelihood. Each cell is thus mapped into a latent space \\(Z\\) capturing core variation in gene expression. The VAE decoder reconstructs the input (e.g. counts) from the sampled \\(Z\\) latent, enabling distributional modeling of single-cell data.\nConditional invertible neural network (cINN): [[This is where the magic happens!]] The crux of PerturbNet is a conditional invertible neural network, denoted \\(Z=f(V \\mid Y)\\). (This is where the normalizing flow comes into play.) Here, \\(Y\\) is the perturbation’s latent embedding (from GenotypeVAE or ESM), and \\(Z\\) is the cell-state latent (from the cell VAE). The cINN incorporates a “residual” variable \\(V \\sim N(0,I)\\), capturing per-cell variability unexplained by the perturbation. In plain English, you want learn the function \\(f\\) that takes in as input \\(V\\) (the “baseline” representation of the cell), and then condition to a perturbation (represented by \\(Y\\)) to give you the observed gene expression (which here, is a low-dimensional embedding represented by \\(Z\\)).\n\nConcretely, \\(f\\) is built from affine coupling blocks (see Figure 8.22):\n\\[\n(W_1, W_2) = \\mathrm{Block}((U_1,U_2) \\mid Y),\n\\]\nwhere \\(U_1,U_2\\) split the input, and each block’s parameters are learned via fully-connected sub-networks that shift and scale one part of the data conditioned on the other part and on \\(Y\\). Because each block is invertible (with a tractable Jacobian determinant), one can train \\(f\\) from the objective4\n\\[\n\\mathcal{L} = \\mathbb{E} \\bigl[-\\log p\\{f^{-1}(Z \\mid Y)\\}\\bigr] + \\text{(constant terms)},\n\\]\ndriving \\(f^{-1}\\) to map \\((Z,Y)\\) back to a Gaussian \\(V\\). (I’m aware this probably doesn’t make a lot of sense since I’m not providing enough context about how a cINN works. See the references above about normalizing flows.)\nThis cINN architecture thus learns to sample realistic cell embeddings for each perturbation. In practice, a stack of multiple affine coupling blocks plus normalization layers is used, ensuring expressivity and stable training.\n\nTraining procedure and use: After the perturbation and cell VAEs are pre-trained (often on large unpaired datasets), one collects paired perturbation–cell data (e.g. a high-throughput Perturb-seq or chemical screen). By feeding the latent \\(Y\\) from the perturbation network and the latent \\(Z\\) from the cell-state VAE into the cINN, PerturbNet learns the probabilistic mapping between \\(Y\\) and \\(Z\\). Once trained, it can (1) sample predicted single-cell states for a new perturbation \\(Y_{\\mathrm{new}}\\), and (2) be inverted to find which perturbation embeddings shift cells toward a desired \\(Z_{\\mathrm{target}}\\) distribution.\n\nPutting this all together, see Figure 8.25 and Figure 8.26.\n\n\n\n\n\n\n\nFigure 8.25: From Yu and Welch (2022). High-level idea.\n\n\n\n\n\n\n\n\n\n\n\nFigure 8.26: From Yu and Welch (2022). More details about how this works.\n\n\n\n\n\n\n\n\nBarry, Timothy, Kathryn Roeder, and Eugene Katsevich. 2024. “Exponential Family Measurement Error Models for Single-Cell CRISPR Screens.” Biostatistics 25 (4): 1254–72.\n\n\nBarry, Timothy, Xuran Wang, John A Morris, Kathryn Roeder, and Eugene Katsevich. 2021. “SCEPTRE Improves Calibration and Sensitivity in Single-Cell CRISPR Screen Analysis.” Genome Biology 22 (1): 1–19.\n\n\nBock, Christoph, Paul Datlinger, Florence Chardon, Matthew A Coelho, Matthew B Dong, Keith A Lawson, Tian Lu, et al. 2022. “High-Content CRISPR Screening.” Nature Reviews Methods Primers 2 (1): 1–23.\n\n\nCheng, Junyun, Gaole Lin, Tianhao Wang, Yunzhu Wang, Wenbo Guo, Jie Liao, Penghui Yang, et al. 2023. “Massively Parallel CRISPR-Based Genetic Perturbation Screening at Single-Cell Resolution.” Advanced Science 10 (4): 2204484.\n\n\nConcordet, Jean-Paul, and Maximilian Haeussler. 2018. “CRISPOR: Intuitive Guide Selection for CRISPR/Cas9 Genome Editing Experiments and Screens.” Nucleic Acids Research 46 (W1): W242–45.\n\n\nDatlinger, Paul, André F Rendeiro, Christian Schmidl, Thomas Krausgruber, Peter Traxler, Johanna Klughammer, Linda C Schuster, Amelie Kuchler, Donat Alpar, and Christoph Bock. 2017. “Pooled CRISPR Screening with Single-Cell Transcriptome Readout.” Nature Methods 14 (3): 297–301.\n\n\nDinh, Laurent, Jascha Sohl-Dickstein, and Samy Bengio. 2016. “Density Estimation Using Real Nvp.” arXiv Preprint arXiv:1605.08803.\n\n\nDixit, Atray, Oren Parnas, Biyu Li, Jenny Chen, Charles P Fulco, Livnat Jerby-Arnon, Nemanja D Marjanovic, et al. 2016. “Perturb-Seq: Dissecting Molecular Circuits with Scalable Single-Cell RNA Profiling of Pooled Genetic Screens.” Cell 167 (7): 1853–66.\n\n\nEsposito, Roberta, Núria Bosch, Andrés Lanzós, Taisia Polidori, Carlos Pulido-Quetglas, and Rory Johnson. 2019. “Hacking the Cancer Genome: Profiling Therapeutically Actionable Long Non-Coding RNAs Using CRISPR-Cas9 Screening.” Cancer Cell 35 (4): 545–57.\n\n\nGasperini, Molly, Andrew J Hill, José L McFaline-Figueroa, Beth Martin, Seungsoo Kim, Melissa D Zhang, Dana Jackson, et al. 2019. “A Genome-Wide Framework for Mapping Gene Regulation via Cellular Genetic Screens.” Cell 176 (1): 377–90.\n\n\nKhan, Faiza Shafique, Farhan Goher, Dapeng Zhang, Peng Shi, Zhiying Li, Yin Min Htwe, and Yong Wang. 2022. “Is CRISPR/Cas9 a Way Forward to Fast-Track Genetic Improvement in Commercial Palms? Prospects and Limits.” Frontiers in Plant Science 13: 1042828.\n\n\nKobyzev, Ivan, Simon JD Prince, and Marcus A Brubaker. 2020. “Normalizing Flows: An Introduction and Review of Current Methods.” IEEE Transactions on Pattern Analysis and Machine Intelligence 43 (11): 3964–79.\n\n\nKuhn, Maria, António J Santinha, and Randall J Platt. 2021. “Moving from in Vitro to in Vivo CRISPR Screens.” Gene and Genome Editing 2: 100008.\n\n\nLin, Xueqiu, Yanxia Liu, Shuai Liu, Xiang Zhu, Lingling Wu, Yanyu Zhu, Dehua Zhao, et al. 2022. “Nested Epistasis Enhancer Networks for Robust Genome Regulation.” Science 377 (6610): 1077–85.\n\n\nLotfollahi, Mohammad, F Alexander Wolf, and Fabian J Theis. 2019. “scGen Predicts Single-Cell Perturbation Responses.” Nature Methods 16 (8): 715–21.\n\n\nMao, Yanfei, Jose Ramon Botella, and Jian-Kang Zhu. 2017. “Heritability of Targeted Gene Modifications Induced by Plant-Optimized CRISPR Systems.” Cellular and Molecular Life Sciences 74 (6): 1075–93.\n\n\nSchnitzler, Gavin R, Helen Kang, Shi Fang, Ramcharan S Angom, Vivian S Lee-Kim, X Rosa Ma, Ronghao Zhou, et al. 2024. “Convergence of Coronary Artery Disease Genes onto Endothelial Cell Programs.” Nature 626 (8000): 799–807.\n\n\nWei, Lai, Derek Lee, Cheuk-Ting Law, Misty Shuo Zhang, Jialing Shen, Don Wai-Ching Chin, Allen Zhang, et al. 2019. “Genome-Wide CRISPR/Cas9 Library Screening Identified PHGDH as a Critical Driver for Sorafenib Resistance in HCC.” Nature Communications 10 (1): 4681.\n\n\nYao, Douglas, Loic Binan, Jon Bezney, Brooke Simonton, Jahanara Freedman, Chris J Frangieh, Kushal Dey, et al. 2024. “Scalable Genetic Screening for Regulatory Circuits Using Compressed Perturb-Seq.” Nature Biotechnology 42 (8): 1282–95.\n\n\nYu, Hengshi, and Joshua D Welch. 2022. “Perturbnet Predicts Single-Cell Responses to Unseen Chemical and Genetic Perturbations.” BioRxiv, 2022–07.\n\n\nZhou, Jessica L, Karthik Guruvayurappan, Shushan Toneyan, Hsiuyi V Chen, Aaron R Chen, Peter Koo, and Graham McVicker. 2024. “Analysis of Single-Cell CRISPR Perturbations Indicates That Enhancers Predominantly Act Multiplicatively.” Cell Genomics 4 (11).\n\n\nZhou, Yifan, Kaixuan Luo, Lifan Liang, Mengjie Chen, and Xin He. 2023. “A New Bayesian Factor Analysis Method Improves Detection of Genes and Biological Processes Affected by Perturbations in Single-Cell CRISPR Screening.” Nature Methods 20 (11): 1693–703.",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Single-cell CRISPR editting</span>"
    ]
  },
  {
    "objectID": "chapter7_crispr.html#footnotes",
    "href": "chapter7_crispr.html#footnotes",
    "title": "8  Single-cell CRISPR editting",
    "section": "",
    "text": "CRISPR stands for “clustered regularly interspaced short palindromic repeats,” but it’s not too important to know why exactly it’s called this for the purposes of this chapter.↩︎\nTransfection is the process of introducing foreign nucleic acids (such as DNA or RNA) into eukaryotic cells to manipulate gene expression or enable genetic modifications. It is commonly used in plasmid-based CRISPR applications. In opposition, transduction refers to the introduction of genetic material using viral vectors..↩︎\nThis itself is fascinating. See https://github.com/facebookresearch/esm.↩︎\nHere, the probability \\(p\\) is determining the likelihood \\(f^{-1}(Z \\mid Y)\\) originated from \\(V \\sim N(0,I)\\). We’re going to approximate the expectation by taking an average of all the cells we’ve sequenced based on their latent embedding \\(Z\\) and the latent embedding of the treatment \\(Y\\) that was applied to that cell.↩︎",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Single-cell CRISPR editting</span>"
    ]
  },
  {
    "objectID": "chapter8_lineage.html",
    "href": "chapter8_lineage.html",
    "title": "9  Single-cell lineage tracing",
    "section": "",
    "text": "9.1 Why are we interested in learning temporal dynamics?\nStudying how cells change over time provides critical insight into the sequence of events driving biological processes. By observing changes in cell populations across multiple time points, researchers can pinpoint when specific transitions or bifurcations occur. Such temporal information reveals which factors influence a cell’s fate and how quickly new traits emerge.\nMoreover, understanding temporal dynamics can help us develop better interventions. If we can identify the earliest signs of disease or undesirable changes in cells, then targeted therapies can be designed to prevent or slow progression. Such strategies are especially powerful for complex, multi-stage diseases where later intervention might be less effective.",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Single-cell lineage tracing</span>"
    ]
  },
  {
    "objectID": "chapter8_lineage.html#why-are-we-interested-in-learning-temporal-dynamics",
    "href": "chapter8_lineage.html#why-are-we-interested-in-learning-temporal-dynamics",
    "title": "9  Single-cell lineage tracing",
    "section": "",
    "text": "Cancer subclone evolution: Tumors consist of various subclones that compete and evolve. Observing which subclones become dominant over time helps illuminate how certain cells acquire and propagate new mutations, sometimes conferring resistance to treatments. See Figure 9.1 and Figure 9.2.\n\n\n\n\n\n\n\n\nFigure 9.1: (Top) From Ashouri, Zhang, and Gaiti (2023).\n\n\n\n\n\n\n\n\n\n\n\nFigure 9.2: (Bottom) From Marine, Dawson, and Dawson (2020).\n\n\n\n\n\nCancer metastasis: Cells that detach from the primary tumor site and successfully colonize new tissues undergo significant genetic and phenotypic changes. Understanding these changes in temporal sequence highlights the adaptations needed for invasion and survival in distant environments. See Figure 9.3.\n\n\n\n\n\n\n\n\nFigure 9.3: From Fu et al. (2023).\n\n\n\n\n\nDisease progression: Many diseases advance in stages, even beyond cancer, with cells accumulating subtle changes that eventually manifest as severe pathologies. Timing the acquisition of these changes reveals how early molecular events cascade into full-blown disease. See Figure 9.4 for an example of this is investigated in COVID.\n\n\n\n\n\n\n\n\nFigure 9.4: From Stephenson et al. (2021). You can see that at different stages of COVID, there is a slightly different proportion of cell types that constitute the immune system.\n\n\n\n\n\nEmbryonic/organ development and cell fate: During embryonic development, cells undergo a series of tightly regulated fate decisions that determine their final identity. These decisions are influenced by both intrinsic genetic programs and extrinsic signaling cues from the surrounding environment. Understanding the temporal dynamics of these transitions allows researchers to uncover the molecular mechanisms guiding differentiation and tissue formation. By tracking how cells commit to specific lineages, we gain insight into how organs form or how “cells make decisions”. See Figure 9.5.\n\n\n\n\n\n\n\n\nFigure 9.5: From Weinreb et al. (2020). This dataset is recorded longitudinally (i.e., cells were sequenced at Day 2, 4, and 6.) What’s shown here are cells known to be in different lineages, but certain lineages don’t differentiate by Day 6, differentiate into multiple cell types, or differentiate only into one cell type.\n\n\n\n\n\nStem cell research: Stem cells differentiate into specialized cell types following a tightly regulated timeline. Tracking these progressions uncovers the signals that guide each step and may inform regenerative medicine strategies for repairing damaged tissues. See Figure 9.6.\n\n\n\n\n\n\n\n\nFigure 9.6: From https://stemcellthailand.org/induced-pluripotent-stem-cells-ips-ipscs-hipscs/.",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Single-cell lineage tracing</span>"
    ]
  },
  {
    "objectID": "chapter8_lineage.html#sec-natural_lineage",
    "href": "chapter8_lineage.html#sec-natural_lineage",
    "title": "9  Single-cell lineage tracing",
    "section": "9.2 Basis on how to infer history from cells naturally",
    "text": "9.2 Basis on how to infer history from cells naturally\nCertain features in a cell’s genetic material serve as natural markers for tracing lineage. These features arise spontaneously or accumulate over time, and researchers can compare them across related cells to reconstruct branching histories.\n\nMitochondrial DNA (somatic mutations):\nMitochondrial genomes can pick up small mutations as cells divide. (Note! There are a lot of types of other DNA in your cells beyond the typical DNA we think of in the 23 pairs of chromosomes. Your mitochondria has its own DNA.) By measuring these mutations, one can infer which cells share a common ancestor and roughly estimate how many divisions have occurred. However, because the mutation rate is not always high, it can be difficult to achieve fine-grained resolution.\nDNA copy number:\nGains or losses in chromosome segments, known as copy number variations, can also serve as lineage markers. Though useful for distinguishing large-scale genomic shifts, such variations do not necessarily arise in a predictable manner. This makes it challenging to reproducibly track precise cell-to-cell histories.\nFor examples of bulk-DNA phylogenetic tree, see . This is a massive field, so one citation is not doing this field justice. We’ll see this more in Section 8.3.\nDNA methylation:\nDNA methylation serves as another naturally occurring cellular barcode. Over time, cells acquire unique methylation patterns that reflect their lineage history. These epigenetic marks regulate gene expression and can be stably inherited through cell divisions. Because different tissues and cell types exhibit distinct methylation landscapes, analyzing these patterns can provide a historical record of a cell’s developmental path. However, while DNA methylation is useful for lineage tracing, its resolution is limited by the variability in methylation turnover rates and the difficulty of distinguishing cell-to-cell differences in a reproducible manner.\n\nThese naturally occurring barcodes, while informative, can be limiting in resolution. They may not mutate or appear frequently enough to trace detailed branching events. Additionally, reproducing the exact timing of such genetic changes in the wet lab can be difficult, making it hard to pinpoint when and how they impacted lineage formation.",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Single-cell lineage tracing</span>"
    ]
  },
  {
    "objectID": "chapter8_lineage.html#brief-aside-relation-to-snapshot-trajectory-inference",
    "href": "chapter8_lineage.html#brief-aside-relation-to-snapshot-trajectory-inference",
    "title": "9  Single-cell lineage tracing",
    "section": "9.3 Brief aside: Relation to “snapshot” trajectory inference",
    "text": "9.3 Brief aside: Relation to “snapshot” trajectory inference\nSnapshot-based methods, such as Monocle or Slingshot, rely on measuring gene expression states at a single time point (or a limited set of time points). They use computational models to infer the probable order and branching of cell fates based on these static profiles. While powerful, these methods rely on assumptions about the smoothness of transitions and may not capture rare events or subtle branching.\nLineage tracing complements snapshot-based methods by providing a direct record of which cells arose from the same ancestor. By confirming or refining the trajectories suggested by computational approaches, lineage tracing can validate inferred timelines, reveal overlooked branches, and identify rare subpopulations that might be missed in snapshot data alone. This integration leads to a more complete picture of cell fate decisions and improves our ability to predict and potentially manipulate cellular transitions.",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Single-cell lineage tracing</span>"
    ]
  },
  {
    "objectID": "chapter8_lineage.html#reconstruction-phylogenetic-tree-from-sclt",
    "href": "chapter8_lineage.html#reconstruction-phylogenetic-tree-from-sclt",
    "title": "9  Single-cell lineage tracing",
    "section": "9.4 Reconstruction phylogenetic tree from scLT",
    "text": "9.4 Reconstruction phylogenetic tree from scLT\nThe goal in this section is to provide a high-level overview of how we can reconstruct phylogenetic trees from single-cell lineage tracing (scLT) dataset, if we are using mutating barcodes. Remember, in single-cell sequencing experiments, we never get to see anything “directly” aside from sequences (of RNA, DNA, etc.) So we need to “estimate” the phylogenetic tree itself using the barcode edits. See Figure 9.7 for a conceptual illustration of this problem.\n\n\n\n\n\n\n\nFigure 9.7: From\n\n\n\n\nConceptually, this is our goal in a cartoon setting. (Technically, most lineage-tracing methods based on lentiviral barcodes return a claudogram (i.e., the edge lengths do not carry “time-information.” This is in contrast with a phylogram, where edge denote “amount of elapsed time since the branching event”). See ?fig-tree1 and ?fig-tree2.\n\n \n\n\n9.4.1 Brief review: Number of rooted trees\nGiven \\(n\\) nodes, how many possible phylogenetic trees are possible? Couldn’t we just enumerate all possible trees with \\(n\\) leaves, and determine which one is the “best one”? Think of this as a “caveman” optimization approach. All I need is a function that evaluates the “data agreement” score of a tree. Then, given single-cell data (either of scLT or copy numbers) of \\(n\\) cells, I can write down all possible trees (agnostic of data), and then pick the tree with the score that best agrees with data. What’s wrong with this approach?\nThe issue is that there is an explosion of possible trees. Let’s establish some ground rules. We will only talk about fully connected, binary, rooted trees where the \\(n\\) nodes are the leaves.\n\n\\(n\\) leaves: The \\(n\\) cells we observed are set to be leaves (sometimes called terminal nodes). (After all, we sequence all the cells at once, so we don’t actually observe the “parent” cell that divided to yield the two daughter cells we sequenced. Remember, over time, cells undergo mitosis to split into 2 cells.)\nFully connected and directed: All \\(n\\) leaves are connected by one graph. These \\(n\\) nodes are connected by \\(n-1\\) intermediate (unobserved) nodes.\nBinary and rooted: Every one of the \\(n-1\\) intermediate nodes has 2 children nodes. These children nodes could be one of the \\(n\\) leaves or one of the other intermediate nodes. Furthermore, every node has a parent except one special node called the “root node.” You can think of the root node as the common (unobserved) ancestor that spawned all the \\(n\\) cells.\n\n\n\n\n\n\n\n\nFigure 9.8: From https://microbenotes.com/phylogenetic-tree/\n\n\n\n\nWith these ground rules in place, we can prove the following result.\n\nGiven \\(n\\) named leaves, there are \\((2n - 3)!!\\) (where the \\(!!\\) denotes a double factorial1) possible rooted binary trees.\n\nHere is an informal sketch of the proof.\n\nWe prove that the number of fully resolved (binary) rooted phylogenetic trees on \\(n\\) labeled taxa (leaves) is given by\n\\[\nT_n = (2n - 3)!! = 1 \\times 3 \\times 5 \\times \\cdots \\times (2n - 3),\n\\tag{9.1}\\]\nvia induction.\nBase Case (\\(n=2\\)):\nFor \\(n=2\\), there is exactly one fully resolved rooted tree, consisting of a root node with two children (the two labeled leaves). Hence,\n\\[\nT_2 = 1.\n\\]\nInductive Step:\nAssume that for \\(n-1\\) leaves, the number of fully resolved rooted trees is given by \\(T_{n-1}\\). We show that the number of such trees for \\(n\\) leaves satisfies the recurrence relation\n\\[\nT_n = (2n - 3) \\times T_{n-1}.\n\\]\nTo form an \\(n\\)-leaf tree from a \\((n-1)\\)-leaf tree, we consider a particular \\((n-1)\\)-leaf tree and “split” one node. (By splitting, think of a “cherry” — a node with 2 children. We will take a node, set that to be a new internal node where one of its children is the original sub-tree of the node we picked, and the other child is the new leaf node for the \\(n\\)-leaf tree.)\nHence, we need to count how many possible nodes are available to split. In a fully resolved tree with \\(n-1\\) leaves, we have \\(n-2\\) internal nodes (i.e., “unobserved cells”), one of which is the root, and therefore, we have a total of \\((n-1)+(n-2) = 2n - 3\\) nodes.\nTherefore, there are \\((2n - 3)\\) such choices how to “split” a \\((n-1)\\)-leaf tree.\nSince there are \\(T_{n-1}\\) possible \\((n-1)\\)-leaf trees, (of which we have \\((2n - 3)\\) choices on how to form a \\(n\\)-leaf tree2), we have the relation,\n\\[\nT_n = (2n - 3) \\times T_{n-1}.\n\\]\n\nFor example, this means\n\\[\n\\begin{aligned}\nT_3 &= (2 \\times 3 - 3) \\times \\underbrace{T_2}_{=1} = 3, \\\\\nT_4 &= (2 \\times 4 - 3) \\times \\underbrace{T_3}_{=3} = (2 \\times 4 - 3) \\times (2 \\times 3 - 3) \\times 1 = 15.\n\\end{aligned}\n\\]\nSee Figure 9.9 for the trees enumerated.\nUsing the base case \\(T_2 = 1\\), repeated application of this recurrence gives\n\\[\nT_n = (2n - 3)!!.\n\\]\n:::\n\n\n\n\n\n\n\nFigure 9.9: From https://www.megasoftware.net/mega1_manual/Phylogeny.html\n\n\n\n\nSee (and related papers) for more context.\nSo… why is this result important? Observe that \\(n!!\\) is super exponential (i.e., it grows faster than an exponential3). So if you have \\(n=1000\\) cells, the number of possible trees you’ll try to enumerate is on the order of \\(1000^{1000} = 10^{3000}\\), which is way too many. See Figure 9.10.\nTherefore, when constructing phylogenetic trees, we need to be mathematically clever (probably with the help of some heuristic). Can we use some heuristic to drastically reduce the number of trees we’re going to even consider, and we can use our sequencing data of these \\(n\\) cells to help us in this endeavor?\n\n\n\n\n\n\n\nFigure 9.10: From https://calla.rnet.missouri.edu/cheng_courses/slides9.pdf\n\n\n\n\n\n\n9.4.2 Camin-Sokal maximum parsimony method\nThe Camin-Sokal maximum parsimony method is a phylogenetic reconstruction technique that aims to infer evolutionary relationships by minimizing the number of changes required to explain observed character states. (You’ll see this come up a lot when reading papers that reconstruct the phylogenetic tree from scLT data with mutating barcodes. You can think of this as the “baseline method” that every sc-phylogenetic method compares itself to.)\nThis method assumes that character states can only evolve in one direction, meaning once a trait is gained, it cannot be lost. Given a set of taxa and their character states, the algorithm constructs a tree that explains these states with the fewest evolutionary steps. While this method is computationally efficient for small datasets, it may oversimplify biological reality by enforcing irreversible character changes, limiting its applicability in cases where traits can reappear or revert.",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Single-cell lineage tracing</span>"
    ]
  },
  {
    "objectID": "chapter8_lineage.html#lentiviral-lineage-tracing",
    "href": "chapter8_lineage.html#lentiviral-lineage-tracing",
    "title": "9  Single-cell lineage tracing",
    "section": "9.5 Lentiviral lineage tracing",
    "text": "9.5 Lentiviral lineage tracing\n\n9.5.1 About the technology and application\nLentiviral approaches offer a more controlled way to label and track cell lineages. By inserting a known genetic barcode into cells, scientists can reliably follow how these labeled cells expand and diversify over time. See ?fig-barcode1, ?fig-barcode2, and ?fig-barcode3.\n\nIn static lineage barcoding, a lentivirus delivers a stable transgene (for example, GFP or RFP) containing a unique sequence in its untranslated region (UTR) to be integrated into the cell’s DNA. All progeny of an infected cell inherit this same sequence, making it straightforward to group related cells.\n(This won’t be the focus of the following sections. In static lineage barcoding, there is no phylogenetic tree. All the cell lineage information is relative to when the lentivirus was introduced to your cells.)\nIn mutating barcoding (or also called evolving barcode), a guide RNA (via CRISPR-Cas9) can introduce variations sometimes into a transgene reporter (a gene artificially integrated into the cell’s DNA) at various target sites.\nThis creates barcodes as “genetic scars” in descendant cells. This dynamic approach can provide a richer record of how cells diverge and acquire distinct identities.\n(There’s a lot more complexity to this. Here are some concerns that are a bit easier to explain:\n\nYou need make sure the Cas9 protein is continually being expressed over the course of the experiment.\n\nYou need to make sure you have enough diversity in the genetic scars that it’s unlikely two unrelated cells happened to acquire the same set of scars.\n\nThese CRISPR double-stranded breaks can lead to sometimes large deletion events. If there’s not a lot of different locations the transgene was integrated into the genome, or if the target sites are too close, then the multiple target sites might be deleted at once4.)\n\n\n\n  \n\nSee for fantastic overviews on both types of technologies.\nWhat can we do with this? As shown in Figure 9.11, in the cancer setting, we can use lineage barcoding to directly observe many qualities of cancer cells. See Figure 9.12 for a broader overview of different technologies and what biological insights they can reveal (based on what kind of information we can reconstruct from the barcode).\n\n\n\n\n\n\n\nFigure 9.11: From\n\n\n\n\n\n\n\n\n\n\n\nFigure 9.12: From\n\n\n\n\n\n\n9.5.2 For more reading on this technology\nSee , all of which are reviews that document the various ways labs have designed systems to record cellular history.\n\n\n9.5.3 Cassiopeia, for scLT barcodes: Illustrating a non-probabilistic modeling approach\nIn many CRISPR-lineage systems, each target site transitions exactly once from unedited to some specific indel state, and cannot revert (i.e., irreversible). This constraint helps reduce the multi-state problem to something akin to a binary “perfect phylogeny” assumption. However, real data can deviate from a true perfect phylogeny due to parallel evolution of the same indel or missing data.\n\nInput/Output. The input to Cassiopeia is the \\(\\{\\texttt{NA}, 0, 1, 2, \\ldots\\} \\in \\mathbb{R}^{n \\times m}\\) matrix of \\(n\\) cells and \\(m\\) possible target sites (i.e., Cas9-induced heritable insertions or deletions happened, also called indels). This is sometimes called the “character matrix”. Here, NA refers to “missing” (sometimes encoded as \\(-1\\) instead). 0 refers to the baseline sequence (i.e., unedited). Any positive integer (\\(1, 2, \\ldots\\)) denotes a categorical variable, that is, the type of indel mutation that happened at this site.\nThe output is a phylogenetic tree that is rooted binary where each of the \\(n\\) sequenced cells is a leaf, but this tree does not contain any temporal information about how “far in the past” the cell divisions happened (i.e., it’s a cladogram, not a phylogram).\nNotice that no scRNA-seq (gene expression) matrix is needed. All the sequencing that’s needed was to determine the genetic modifications at the target sites for these \\(n\\) cells.\n\nCassiopeia offers a couple different ways to construct its trees. We highlight two of these options below.\n\nCassiopeia-ILP (Steiner Tree Formulation):\nFirst, Cassiopeia-ILP constructs a directed acyclic “potential graph” whose vertices represent all plausible ancestral states (including the \\(n\\) observed leaves), and edges represent possible single-step mutations. The algorithm repeatedly merges pairs of nodes with a shared ancestor if they differ by a valid mutation, generating internal vertices. A user-defined parameter controls how large this potential graph may grow (to avoid excessive computational cost).\nOnce the potential graph \\(G\\) is built, the algorithm solves the Steiner tree problem on \\(G\\) with a flow-based integer linear programming (ILP). The ILP ensures each observed cell is reached from the root (the unmutated state) by a minimal set of edges, minimizing the total number of mutation events. This method is exact but can be computationally slow for large \\(n\\).\n\n\nThe Steiner tree problem is a combinatorial optimization problem that seeks the shortest possible network connecting a given set of points (terminals) while allowing additional intermediate points (Steiner nodes) to reduce the total length. In the context of evolutionary biology and phylogenetics, the Steiner tree approach can be used to infer ancestral relationships by identifying the most parsimonious connections between observed species. The problem is NP-hard, meaning exact solutions are computationally infeasible for large datasets. However, various heuristic and approximation algorithms have been developed to efficiently construct near-optimal Steiner trees in practical applications.\nThis is different from computing the minimal spanning tree because we don’t need the Steiner tree to include every node in \\(G\\). We just need it to contain the \\(n\\) leaves (i.e., the cells we actually observed). There might be hypothetical intermediate nodes (i.e., ancestral cells) in \\(G\\) that are not deemed necessary to be included in the output Steiner tree. See ?fig-cassiopeia1 and ?fig-cassiopeia2.\n\n(In short, you can imagine the first step of forming the potential graph $G$ is to limit the space of possible phylogenetic trees — the returned tree must be a tree formed by the edges in $G$. Then, in the second step, we formulate an ILP reminiscent of the Steiner tree problem to find the most \"appropriate\" tree.)\n\nCassiopeia-Greedy:\nThis algorithm builds the tree top-down, repeatedly choosing the most “frequent” or highest-priority mutation (unmutated \\(\\to\\) indel) to partition the cells into two subsets: those that carry that mutation vs. those that do not (i.e., it’s “greedy”).\nBecause CRISPR edits are irreversible, each multi-state site behaves effectively like a one-time event from an uncut state. Thus, one can treat each new indel as a potential splitting event. Cells with missing values at the chosen splitting site are assigned to whichever subset their non-missing edits best match. This step recurses until subsets become single cells or until all characters are used.\nGreedy is fast and scales to tens of thousands of cells, but may produce suboptimal solutions if extensive parallel evolution exists.\n\n\n \n\n\n\n9.5.4 Some implementation notes\n\nPriors on Indel Frequencies. Optionally, Cassiopeia can leverage empirical estimates of each indel’s probability to prioritize rare-but-frequent states (mitigating parallel evolution).\nMissing Data. Both ILP and greedy approaches accommodate missing data by enumerating or heuristically assigning cells to the most compatible subset.\n\n\n\n9.5.5 I’m very confused. Can you give me some more details?\nThere’s a lot of moving components since the lineage barcode data for mutating barcodes is quite unlike anything else we’ve seen in this course so far. Let me go through an example from https://cassiopeia-lineage.readthedocs.io/en/latest/notebooks/reconstruct.html (the Cassiopeia tutorial itself) to tell you what the “input data” for Cassiopeia is. (Once you understand the input data and how it was preprocessed, it’ll become clear what the output is.)\nIn a typical mutating lineage barcoding experiment, you get a bunch of gDNA or gRNA reads about the sequences of the barcodes that integrated into each cell. Then, you run bioinformatics code to align these sequences to a known reference genome to determine what happened at each target site of a cell’s barcode (i.e., did a mutation happen, if so, what was the insertion or deletion event, etc.). This is described in https://cassiopeia-lineage.readthedocs.io/en/latest/notebooks/preprocess.html. The output of this is an allele table that might look like Figure 9.13.\n\n\n\n\n\n\n\nFigure 9.13: From https://cassiopeia-lineage.readthedocs.io/en/latest/notebooks/reconstruct.html. We are showing 10 different integrated barcodes intBC (each with three target sites, r1 to r3) for the cell with RW.TTTGCGCCAAGAAAGG.\nSo you should expect every unique cell (i.e., unique cellBC) to have one or more integrated barcodes (for example, 10, as shown here). Furthermore, you hope that many different cells have the same integrated barcode, such as CTAGGGCATCTACG. (This is because you’re going to compare what happened at different target sites for cells that have the same integrated barcode to determine how these cells are related.)\nFor instance, in integrated barcode CTAGGGCATCTACG, we see at the first target site, CCGAA[None]AAATG, the None means there was no insertion or deletion event found at this site (relative to all the other sequences at the r1 region of this integrated barcode in the other cells).\nIn contrast, at the third target site r3, we see ATTCG[221:1D]GGAGG. This means at relative position 221 in this target site, there was a deletion that resulted in 1 base pair being deleted. (You can see in this screenshot that some of the deletion events can go up to 80+ base pairs, such as TGGCG[86:81D]CTCTG.) This large deletion event is okay (as long as it didn’t result in the deletion of a different target site) if the sequence alignment step could still determine that the flanking sequences to the deletion (in this case, TGGCG to the left and CTCTG to the right) still aligned to the reasonable positions to the target site for this barcode. Remember, you know what the full sequences of all these integrated barcodes are because these are all sequences you designed to be integrated into the cell’s DNA. See PCT48.ref.fasta in https://cassiopeia-lineage.readthedocs.io/en/latest/notebooks/preprocess.html.\n\n\n\n\nThis character matrix is the input to Cassiopeia — it now knows the type of mutation at each of the target sites for every cell, and then it’s going to try to estimate a phylogenetic tree from this.\n\n\n9.5.6 A brief note on other approaches\nCassiopeia doesn’t directly tell you some crucial pieces of information that you might want to know:\n1) how far in the past was the division (i.e., the “branch length”), and\n2) how fast are mutations happening (i.e., the “mutation rate”)?\nFor these, you could invoke more involved methods such as GAPML or ICE-FASE . On a different line of thinking, methods like LinTIMaT rely on using the lineage barcoding data alongside the scRNA-seq data (which tells you how similar two cells are based on either their annotated cell-types or expressed pathways) to construct phylogenetic trees.",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Single-cell lineage tracing</span>"
    ]
  },
  {
    "objectID": "chapter8_lineage.html#natural-lineage-barcodes-via-copy-number-alterations-cna",
    "href": "chapter8_lineage.html#natural-lineage-barcodes-via-copy-number-alterations-cna",
    "title": "9  Single-cell lineage tracing",
    "section": "9.6 Natural lineage barcodes via copy number alterations (CNA)",
    "text": "9.6 Natural lineage barcodes via copy number alterations (CNA)\n\n9.6.1 About the technology and application\nOne of the goals of why studying copy number variation in Section 8.3 was to understand cellular dynamics. So… how is this done?\nCopy number alterations (CNAs) are a hallmark of many cancers and arise due to genomic instability within tumor cells (refer back to ?fig-copy-number-cancer). Because cancer is often driven by such genomic instabilities, CNAs serve as a natural “barcode” of lineage. By tracking which genes or regions of chromosomes have been duplicated or lost over time, researchers can infer how subclones evolve and expand. These aberrations not only reveal how aggressive a tumor might be, but can also hint at its capacity for metastasis. Indeed, it is quite common to see particular copy number events that are associated with advanced disease states or resistance to therapy.\nAnother key advantage of using CNAs in cancer research is the ability to reconstruct phylogenetic trees of tumor evolution at single-cell resolution. Traditional bulk sequencing can obscure the heterogeneity of a tumor by averaging out signals across thousands or millions of cells, making it difficult to identify rare but important subpopulations. By examining individual cells, we can trace how specific lineages emerged, which mutations or copy number changes appeared first, and how these have proliferated. This level of detail helps us pinpoint the subclones that might be the most aggressive or metastatic, and may reveal new therapeutic targets based on the genetic changes that drove each lineage.\nFurthermore, once a phylogenetic tree is built from copy number data, the specific chromosomal regions that underwent duplication or deletion can yield insight into the biology of the tumor. Some genomic loci harbor oncogenes or tumor suppressors, so gains or losses in these regions can be especially detrimental—or beneficial, from the tumor’s perspective. Such events might correlate with faster growth, immune evasion, or other clinically significant traits. By focusing on these recurrently altered regions, researchers and clinicians can identify potential biomarkers for prognosis or drug targets for personalized therapy. See Figure 9.14 as an example of what this workflow looks like.\n\n\n\n\n\n\n\nFigure 9.14: From . Imagine we have longitudinal samples of a person. Those tissue samples get single-cell sequenced. Then a variant calling happens, and then we want to learn a clone tree, which is the focus for the type of tree we’re discussing in these notes.\n\n\n\n\nThese output phylogenetic trees might look like the ones in ?fig-dice1 and ?fig-dice2.\n(As a sidenote: be sure to understand what the branch lengths mean in a phylogenetic tree. Here, these branch lengths denote the “distance” between two cells’ CNA profiles. (The longer the branch, the more it’s different.) Other methods use the branch length to denote time, i.e., the longer the branch, the more time has elapsed since the branching event. Most methods (in my experience) do not give you branch lengths relative to time, since this would require you (the data analyst) to provide the method with more biological information. For example, how fast do certain CNA events happen? You would need to provide this additional information to your phylogenetic method for it to know how to estimate branch lengths that denote time.)\n\n \n\n\n\n9.6.2 COMPASS, for scDNA copy number: Illustrating a probabilistic approach\nCOMPASS (Joint Copy Number and Mutation Phylogeny from Amplicon Single-Cell DNA Sequencing) is a probabilistic model designed to reconstruct a branching evolutionary tree of SNVs (single-nucleotide variants) and CNAs (copy number alterations) from single-cell DNA sequencing data. It accommodates both allele-specific copy number changes (loss, gain, copy-neutral loss of heterozygosity) and single-nucleotide events, all integrated into a single phylogenetic structure.\n(In COMPASS, there are meaningful branch lengths. The output is simply a cladogram.)\n\n\n\n\n\n\n\nFigure 9.15: From .\nSome basic terminology: 1) SNV (Single Nucleotide Variant): A change in a single nucleotide of the DNA sequence.\n2) Loss: (Not shown in this figure) A deletion of one copy of a chromosomal region. For instance, in the usual 23 pairs of human chromosomes, one region could be deleted from one copy of Chromosome 1, while remaining intact on the other copy.\n3) CNLOH (Copy-Neutral Loss of Heterozygosity): A copy number alteration that preserves the total number of chromosome copies but still removes heterozygosity. In other words, the cell ends up with the same number of copies overall, yet the two copies become identical (losing heterozygosity).\n4) Gain: The opposite of a “loss.” This could involve duplicating a specific chromosomal region (thus elongating that chromosome) or duplicating the entire chromosome (leading to three copies of Chromosome 1, instead of the usual two).\n\n\n\n\n\nInput/Output. The input to COMPASS is\n1) \\(D \\in \\mathbb{Z}_+^{n \\times d}\\) denoting the total read count per DNA region (among \\(d\\) regions) for each of the \\(n\\) cells, and\ntwo matrices \\(X, Y \\in \\mathbb{Z}_+^{n \\times d}\\) denoting the number of DNA reads containing each SNV (among \\(d\\) SNVs) among the \\(n\\) cells.\nFor example, let \\(X_{ij}\\) denote the number of DNA reads from cell \\(i\\) that contained the major allele (i.e., “reference”) for SNV \\(j\\), and \\(Y_{ij}\\) denote likewise but for the minor allele (i.e., “alternative”) for SNV \\(j\\).\nThe output is a cladogram among the \\(n\\) cells. More specifically, COMPASS outputs a tree where the “internal nodes” denote what type of mutation happened, and cells are “attached” to these internal nodes (denoting that this cell followed this specific sequence of mutations, starting from the root of the tree).\n\nHere are the overall ideas of COMPASS. Both total coverage (for copy number inference) and allele-specific coverage (for LOH and SNV calling) are going to be part of the likelihood to help model the likelihood of a particular tree (which will be used to determine the tree that best fits the data).\n\nModel constraints:\nCOMPASS models four classes of mutations:\n\nSNVs, each occurring exactly once in the tree,\n\nLoss, which removes one copy of an allele in a region,\n\nGain, which increases the copy number of a region, and\n\nCNLOH (copy-neutral LOH), which replaces one allele with another while keeping total copy number constant.\n\nEach region can undergo CNAs at most once per lineage. When subclones exhibit multiple consecutive CNAs in a region, COMPASS in practice uses a single-event approximation to avoid ambiguous high copy numbers. (This is a parsimonious principle, in some sense. We’re dramatically limiting the number of trees that are going to be considered with these constraints.)\nCoverage and allelic likelihoods:\nThere are two components to model the likelihood, one for the SNVs, one for the CNAs.\n\nFor the CNAs, we have a coverage model. COMPASS uses a negative binomial distribution for each region’s total reads to capture overdispersion. Each region \\(j \\in \\{1,\\ldots,d\\}\\) is assigned a baseline coverage weight \\(\\rho_k\\) (reflecting primer efficiency, etc.), so if a cell’s node in the phylogeny has copy number \\(\\text{cn}_k\\), the expected read depth is scaled accordingly.\nFor the SNVs, we have an allelic model. For each locus \\(j \\in \\{1,\\ldots,p\\}\\), COMPASS directly uses read counts \\((\\text{REF}_i, \\text{ALT}_i)\\) under a Beta-Binomial model, allowing for overdispersion in allele fraction. Each variant has a dropout rate \\(\\mu_i\\), reflecting the probability that a given allele is lost (PCR failure), and the method marginalizes over all possible dropout configurations (\\(k\\) reference copies vs. \\(l\\) alternate copies).\n\nCell-to-node assignments:\n(Here, “node” refers to a mutation event, which are internal nodes in our tree.) COMPASS marginalizes over cell attachments to genotype nodes. Let \\(\\pi_k\\) be a prior probability that any cell is attached to node \\(k\\). The algorithm thus sums\n\\[\n\\sum_{k} \\pi_k \\, \\prod_{i=1}^{p} P(\\text{region reads}|\\dots) \\,\\prod_{i=1}^{d} P(\\text{allelic reads}|\\dots)\n\\]\nfor each cell.\nSimulated annealing:\nSimulated annealing is a useful statistical technique for reconstructing a phylogenetic tree from single-cell DNA data because we want to search through a vast space of possible evolutionary histories5. Each candidate tree is defined by how individual copy number events and mutations are arranged and passed down through successive subclones.\nA naive or purely greedy search might easily get stuck in suboptimal solutions, given the noisy nature of single-cell data and the combinatorial explosion of possible trees. By gradually “cooling” the exploration of this space — starting from more random moves and then narrowing down to finer adjustments — simulated annealing helps ensure that the final solution is not merely a local optimum. In other words, this strategy balances the need for broad exploration early on with the requirement of a precise, fine-grained search later, thereby increasing the likelihood of discovering a high-probability lineage structure.\n\nCOMPASS employs a simulated annealing approach over the discrete space of trees:\n\nStart with a random initial tree (random parent pointers, random SNV allocation, no CNAs).\nPropose local “moves” (adding or removing a node, reassigning mutations, introducing or removing a CNA, etc.).\nAccept or reject based on the ratio of posterior probabilities at a current “temperature” to allow exploration; gradually decrease the temperature to refine solutions.\n\nTo simulate potential trees, we need a prior distribution over trees. COMPASS will pick a prior to discourage trees with excessive branching or excessive CNA events. Specifically, it penalizes the total number of nodes and the number of CNA events. Longer CNAs across consecutive amplicons are treated as a single event. CNLOH events may be penalized more due to their strong effect on the allelic fraction.\nParameter Updates. Node weights \\(\\{\\pi_k\\}\\) (i.e., the probability any cell is attached to an internal node) and other parameters are estimated by an Expectation-Maximization (EM) step:\n\nE-step: Compute the posterior probabilities that cell \\(i\\) belongs to node \\(k\\), given the current tree and parameters.\nM-step: Update \\(\\pi_k\\) as the average posterior membership across cells.\n\nThis EM routine is invoked each time we propose or accept a new tree in the simulated annealing.\n(The EM algorithm is another useful statistical technique whenever you’re dealing with a model with unobserved variables. Here, our unobserved variable is whether or not a cell \\(i\\) is attached to node \\(k\\).)\nSee Figure 9.16 for an illustration of what the results could look like.\n\n\n\n\n\n\n\nFigure 9.16: From .\n\n\n\n\n\n\n9.6.3 A brief note on other approaches\nSo… what exactly are these trees good for?\nAs we’ve mentioned, you can see in Figure 9.16 that COMPASS is trying to learn the mutation event that happened at each node. (This gives us a clue on how deleterious the mutation event is. As a simple example, if there was a loss in copy number in a region that contains a cancer suppressive gene, we might expect rapid proliferation of this cancer cell.)\nOn the other hand, what we will talk more about in Chapter 9 is combining these phylogenetic trees with spatial information about these cells. See Figure 9.17.\n\n\n\n\n\n\n\nFigure 9.17: From . Panel a is the copy number events for each cell (here, this is actually based on spatial transcriptomics), and panel b is the estimated phylogenetic tree. From the tree, they can look at the spatial position of each clone and literally see on the 2D tissue slice how cancer clones (potentially aggressively) expanded in this tissue slice. The phylogenetic information gave us clues on which cancer subclone originated from which.\n\n\n\n\n\n\n\n\nAshouri, Arghavan, Chufan Zhang, and Federico Gaiti. 2023. “Decoding Cancer Evolution: Integrating Genetic and Non-Genetic Insights.” Genes 14 (10): 1856.\n\n\nFu, Aikun, Bingqing Yao, Tingting Dong, and Shang Cai. 2023. “Emerging Roles of Intratumor Microbiota in Cancer Metastasis.” Trends in Cell Biology 33 (7): 583–93.\n\n\nMarine, Jean-Christophe, Sarah-Jane Dawson, and Mark A Dawson. 2020. “Non-Genetic Mechanisms of Therapeutic Resistance in Cancer.” Nature Reviews Cancer 20 (12): 743–56.\n\n\nStephenson, Emily, Gary Reynolds, Rachel A Botting, Fernando J Calero-Nieto, Michael D Morgan, Zewen Kelvin Tuong, Karsten Bach, et al. 2021. “Single-Cell Multi-Omics Analysis of the Immune Response in COVID-19.” Nature Medicine 27 (5): 904–16.\n\n\nWeinreb, Caleb, Alejo Rodriguez-Fraticelli, Fernando D Camargo, and Allon M Klein. 2020. “Lineage Tracing on Transcriptional Landscapes Links State to Fate During Differentiation.” Science 367 (6479).",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Single-cell lineage tracing</span>"
    ]
  },
  {
    "objectID": "chapter8_lineage.html#footnotes",
    "href": "chapter8_lineage.html#footnotes",
    "title": "9  Single-cell lineage tracing",
    "section": "",
    "text": "See https://en.wikipedia.org/wiki/Simulated_annealing↩︎\nFormally, you would also need to prove that all the unique \\(n\\)-leaf trees formed this way from one particular \\((n-1)\\)-leaf tree is distinct from any possible \\(n\\)-leaf tree formed from a different \\((n-1)\\)-leaf tree.↩︎\nYou can approximate \\(n!\\) by \\(n^n\\). See https://en.wikipedia.org/wiki/Stirlings_approximation.↩︎\nSee https://en.wikipedia.org/wiki/Simulated_annealing↩︎\nSee https://en.wikipedia.org/wiki/Simulated_annealing↩︎",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Single-cell lineage tracing</span>"
    ]
  },
  {
    "objectID": "chapter9_spatial.html",
    "href": "chapter9_spatial.html",
    "title": "10  ‘Single-cell’ spatial transcriptomics",
    "section": "",
    "text": "10.1 The broad categorization of spatial transcriptomic technologies\nSingle-cell spatial transcriptomics is an emerging technology that enables the measurement of gene expression while preserving the spatial organization of cells within a tissue. See Figure 10.1 for a useful schematic I like. Unlike traditional single-cell RNA sequencing, which dissociates cells and loses spatial context, spatial transcriptomics allows researchers to analyze gene expression in relation to cellular neighborhoods, tissue architecture, and microenvironments, see Figure 10.2.\nThe spatial arrangement of cells is fundamental to understanding cell biology, as cellular functions are often influenced by their local microenvironment:\nAs one concrete example of how spatial transcriptomics advances cell biology beyond what other sequencing technologies offers: spatial transcriptomics is particularly valuable for studying cell-cell communication, as it enables the identification of ligand-receptor interactions that mediate signaling between neighboring cells. By integrating spatial data with single-cell transcriptomics, researchers can infer functional relationships between different cell types, uncovering regulatory networks that drive biological processes.\nNote: Spatial information in cell biology has been studied for decades, long before single-cell sequencing became commercially feasible. Techniques like fluorescence in situ hybridization (FISH) have been used to visualize the spatial localization of specific RNA molecules within cells, providing crucial insights into gene expression patterns. Microscopy-based methods, including confocal and super-resolution imaging, have also been instrumental in understanding cellular structures and interactions. The key novelty of modern spatial transcriptomics is its ability to scale these analyses – rather than measuring just a few genes at a time, we can now capture the spatial expression patterns of hundreds to thousands of genes simultaneously, enabling a much more comprehensive view of cellular organization and function.\nSpatial transcriptomic technologies can be broadly categorized into two main approaches: spot-based methods and imaging-based methods, see Figure 10.4 and Figure 10.5.\nSee Figure 10.6, Figure 10.7, and Figure 10.9 for examples of what these datasets look like, and how spot- and imaging-based spatial transcriptomics could yield quite dramatically different datasets.\nSee Figure 10.10 for a table of many possible technologies to perform spatial transcriptomics.",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>'Single-cell' spatial transcriptomics</span>"
    ]
  },
  {
    "objectID": "chapter9_spatial.html#the-broad-categorization-of-spatial-transcriptomic-technologies",
    "href": "chapter9_spatial.html#the-broad-categorization-of-spatial-transcriptomic-technologies",
    "title": "10  ‘Single-cell’ spatial transcriptomics",
    "section": "",
    "text": "Figure 10.4: Left: From https://hutchdatascience.org/Choosing_Genomics_Tools/spatial-transcriptomics-1.html\n\n\n\n\n\n\n\n\n\n\n\nFigure 10.5: Right: From https://geneviatechnologies.com/bioinformatics-analyses/spatial-transcriptomic-data-analysis/\n\n\n\n\n\nSpot-based technologies utilize sequencing-based approaches to capture gene expression across a tissue section. These methods typically involve placing spatially barcoded capture spots on a slide, allowing RNA molecules from the tissue to be sequenced while retaining their spatial information. Spot-based techniques offer broad coverage across the entire transcriptome, making them well-suited for large tissue sections and unbiased gene discovery. However, they have relatively low spatial resolution due to the size of the capture spots and may lack sufficient depth for detecting lowly expressed but biologically significant genes.\nImaging-based technologies rely on multiplexed imaging methods to visualize gene expression directly within tissues. These approaches build upon fluorescence in situ hybridization (FISH) and other imaging techniques, enabling subcellular resolution of RNA molecules. By using sequential hybridization cycles with fluorescent probes, imaging-based methods can measure the expression of dozens to hundreds of preselected genes. While this high-resolution approach provides detailed spatial maps at the single-molecule level, it requires prior selection of target genes and computationally intensive methods to delineate cell boundaries from dense tissue images.\n\n\n\n\n\n\n\n\n\nFigure 10.6: Top: From https://www.trillium.de/en/journals/trillium-pathology/archive/2024/tp-1/2024/ai-in-pathology/integration-of-spatially-resolved-transcriptomics-into-pathological-research-opportunities-and-challenges.html\n\n\n\n\n\n\n\n\n\n\n\nFigure 10.7: Bottom: From Figiel et al. (2024)\n\n\n\n\n\n\n\n\n\n\n\nFigure 10.8: From Longo et al. (2021)\n\n\n\n\n\n\n\n\n\n\n\nFigure 10.9: From Rademacher et al. (2024)\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 10.10: From https://rubd.github.io/Giotto_site/. (This figure is rapidly becoming out-dated. I would argue and say this figure is already nearly unrepresentative of the field.)\n\n\n\n\n\nRemark 10.1. These are all 2D tissue slices! Our body is three-dimensional (unsurprisingly). However, all the spatial information we are collecting is typically 2D. (Some really rich consortiums have sequenced many cross-sectional 2D slices to reconstruct the 3D organ, for example M. Zhang et al. (2023). However, most single-PI labs do not have the budget to do this. Therefore, it’s important you ask yourself: “Is it possible I am misleading myself by analyzing a 2D tissue slice when my question is about the 3D organ?”\nIt’s entirely possible that the cellular organization/dynamics on a 2D tissue slice is representative of the overall tissue. It’s also entirely possible that it’s not. Knowing how the 2D tissue was selected (i.e., how did someone even choose this specific cross-section in the first place?) is an important question to answer before you can even start thinking mathematically on how your 2D findings relate back to the 3D shape.\n\n\n10.1.1 Sequencing-based: Visium (10x)\nVisium by 10x Genomics is a widely used spot-based spatial transcriptomics technology. See Figure 10.11 for a cartoon on how it works. Visium captures transcriptomic information within predefined spatial spots on a tissue section, allowing for spatially resolved gene expression profiling. However, each spot is relatively large (usually around 55 µm in diameter), often encompassing multiple cells. To infer cellular composition within each spot, computational deconvolution methods are typically applied. In addition to transcriptomic data, Visium also provides an H&E (hematoxylin and eosin) stained image of the tissue, which is valuable for histological context, aiding in the interpretation of spatial gene expression patterns and tissue architecture. Figure 10.12 and Figure 10.13 provide examples of this spot-based spatial transcriptomics.\n\n\n\n\n\n\n\nFigure 10.11: From Duan, Cheng, and Cheng (2023)\n\n\n\n\n\n\n\n\n\n\n\nFigure 10.12: Left: From Kim, Choi, and Lee (2023)\n\n\n\n\n\n\n\n\n\n\n\nFigure 10.13: Right: From https://satijalab.org/seurat/articles/spatial_vignette\n\n\n\n\n\n\n10.1.2 Sequencing-based: Visium HD (10x)\nVisium HD is an advanced version of Visium that significantly improves spatial resolution, see Figure 10.14 and Figure 10.15. Unlike standard Visium, which has relatively large spots, Visium HD features smaller spots, allowing for higher spatial resolution and better separation of individual cells. This enhancement enables more precise mapping of transcriptomic data to tissue morphology. However, the increased resolution comes at a higher cost, as sequencing expenses rise due to the need for greater sequencing depth to capture the finer spatial granularity.\n\n\n\n\n\n\n\nFigure 10.14: Left: From https://imaging.as.uky.edu/visium-hd-spatial-transcriptomics. See more at https://www.10xgenomics.com/spatial-transcriptomics#what-is-spatial-transcriptomics.\n\n\n\n\n\n\n\n\n\n\n\nFigure 10.15: Right: From https://x.com/AlbertVilella/status/1367028429300916225\n\n\n\n\n\n\n10.1.3 Imaging-based: MERFISH/MERSCOPE (Vizgen)\nMultiplexed Error-Robust Fluorescence In Situ Hybridization (MERFISH) is an imaging-based spatial transcriptomics method that enables the detection of hundreds to thousands of preselected RNA transcripts in a tissue section. It operates by hybridizing barcoded probes to RNA molecules, followed by multiple rounds of imaging to decode the transcript identities, see Figure 10.16. Since MERFISH provides subcellular resolution, it allows precise localization of transcripts within individual cells, but it requires computational cell segmentation to assign transcripts to specific cells. MERSCOPE is a commercial platform for MERFISH, providing an integrated solution for sample preparation, imaging, and data analysis. See Figure 10.17 and Figure 10.18 for examples of the data.\n\n\n\n\n\n\n\nFigure 10.16: From Chen et al. (2015)\n\n\n\n\n\n\n\n\n\n\n\nFigure 10.17: Top: From M. Zhang et al. (2023). Here, each “dot” is a cell colored by its cell type (after a cell segmentation was run to determine which RNA transcripts belonged to which cell).\n\n\n\n\n\n\n\n\n\n\n\nFigure 10.18: Bottom: From Chen et al. (2015). Here, each “dot” is an RNA transcript colored by the different genes that the RNA transcript came from. (This figure is more representative of what the “raw data” looks like.)\n\n\n\n\n\n\n10.1.4 Imaging-based: Xenium (10x)\nXenium by 10x Genomics is another imaging-based spatial transcriptomics platform, designed to profile a targeted set of transcripts with subcellular resolution. Unlike sequencing-based approaches, Xenium relies on fluorescence imaging to detect preselected RNA targets within tissue sections. See Figure 10.19 for a comparison. It enables high-throughput spatial mapping of gene expression while preserving tissue morphology. As with other imaging-based methods, accurate cell segmentation is essential to delineate individual cells and associate detected transcripts with them. (There are many papers that try comparing Xenium and MERSCOPE. See Figure 10.20 for one paper.)\n\n\n\n\n\n\n\nFigure 10.19: From Lee et al. (2024)\n\n\n\n\n\n\n\n\n\n\n\nFigure 10.20: From Hartman and Satija (2024)\n\n\n\n\nSee more at https://www.10xgenomics.com/blog/optimizing-your-spatial-transcriptomics-research-with-visium-hd-and-xenium-in-situ.\n\n\n10.1.5 So, what should I use?\nIf you are about to collect spatial transcriptomics data yourself, it’s important to first consider what you’re trying to biologically investigate (since this data will be quite expensive to collect). Are you trying to explore the complexity of a tissue, or are you trying to definitively prove the existence (or lack thereof) of something? The nature of your biological question might make it apparent which technology best suits your needs. See Figure 10.21.\n\n\n\n\n\n\n\nFigure 10.21: From Williams et al. (2022). (I think “CosMx” is incorrectly labeled in this figure? It is more of an imaging-based method.)\n\n\n\n\nSee a massive review of the benefits and drawbacks of different spatial transcriptomics technologies in Lee et al. (2024), Liao et al. (2021), Duan, Cheng, and Cheng (2023).",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>'Single-cell' spatial transcriptomics</span>"
    ]
  },
  {
    "objectID": "chapter9_spatial.html#a-whirlwind-of-other-tasks",
    "href": "chapter9_spatial.html#a-whirlwind-of-other-tasks",
    "title": "10  ‘Single-cell’ spatial transcriptomics",
    "section": "10.2 A whirlwind of other tasks",
    "text": "10.2 A whirlwind of other tasks\nBeyond generating spatial transcriptomic data, a variety of computational tasks are necessary to ensure accurate interpretation and integration with other biological information. These tasks broadly fall into two categories: preprocessing and statistical analysis.\n\n10.2.1 Preprocessing\nRaw spatial transcriptomic data often require substantial preprocessing to correct for technical artifacts and enhance interpretability. One key step is integration, where spatial data are aligned with other tissue slides or combined with histological information, such as the H&E stain, to provide morphological context. Contamination removal is another crucial step, as transcripts may originate from neighboring cells or ambient RNA, especially in spot-based approaches. Additionally, imputation techniques can be applied to recover missing gene expression values, particularly in spot-based methods where some spots may have low or undetectable expression due to sequencing depth limitations.\n\n\n10.2.2 Statistical analyses\nOnce preprocessed, spatial transcriptomic data can be analyzed using various statistical approaches to uncover biological insights. Identifying spatially variable genes helps determine which genes exhibit spatially structured expression patterns, highlighting key regulators of tissue organization. Another common analysis involves defining spatial domains, where clustering techniques identify tissue regions with distinct gene expression profiles while accounting for spatial proximity. For spot-based methods, cell-type deconvolution is used to estimate the composition of different cell types within each spot, given that multiple cells may contribute to a single measurement. In imaging-based methods, cell segmentation is a critical computational step, where individual cells are delineated based on transcript localization and morphological features to achieve single-cell resolution.\nSee Figure 10.22, Figure 10.23, Figure 10.24, and Figure 10.25 (and the papers these figures come from) for a broad overview of all the different types of analyses you can do with spatial transcriptomics.\n\n\n\n\n\n\n\nFigure 10.22: Left: From https://geneviatechnologies.com/bioinformatics-analyses/spatial-transcriptomic-data-analysis/\n\n\n\n\n\n\n\n\n\n\n\nFigure 10.23: Right: From Kiessling and Kuppe (2024)\n\n\n\n\n\n\n\n\n\n\n\nFigure 10.24: Top: From Park et al. (2023)\n\n\n\n\n\n\n\n\n\n\n\nFigure 10.25: Bottom: From Zhou et al. (2023)\n\n\n\n\n\nRemark 10.2. Remember, after we collect the tissue from a donor, we don’t really care about the donor anymore. We care about the biology One of the trickiest (statistical) philosophical roadblocks you’ll encounter when you work on spatial transcriptomics is: “What on earth is the ‘population’ I’m studying?” You’ll need to think really hard about variation that might occur within an individual or between different individuals. (Spatial transcriptomics by itself is currently financially unrealistic to be a reliable tool for biomarker detection, unlike other biomedical technologies such as MRI, PET scans, CT scans, staining of tissue slices, etc.)\nIt’s not uncommon to only have one or two spatial transcriptomic tissue slices for an entire study. (This is really a reflection about how expensive and laborious getting this data is.) In that case, are you really just learning biology about this one specific person? How do you know that the donor’s biology is representative of overall human biology?\nBroadly speaking, there are two philosophical approaches to handle this:\n\nYou don’t: Some papers simply show “existence.” That is, they have a statement that is of the flavor, “Our paper demonstrates that this phenomenon can occur in tissue, because we have found evidence of it existing in our tissue.” The benefit of this strategy is that you can always claim this, and there is still room for scientific novelty. However, you cannot make any statement that generalizes beyond your specific tissue. Hence, it’s really important you pick really “interesting” tissue slices for this approach.\nRelate everything back to the omics: It’s difficult to “integrate” tissue slices from two completely different people together. (You can think about how impossibly hard this is, especially if you have familiarity with MRI data. How would you “align” my lung tissue slice with your lung tissue slice? What if my lungs are slightly bigger/smaller in certain regions than yours?) Unlike single-cell data (where we can just combine the cells across many donors), in spatial transcriptomics, you are usually instead relating all your findings on\n\n\nFor examples of what type of analyses you can do with spatial transcriptomics data (beyond what we’ll discuss in these notes), see: https://hutchdatascience.org/Choosing_Genomics_Tools/spatial-transcriptomics-1.html, https://squidpy.readthedocs.io/en/stable/, and https://giottosuite.readthedocs.io/en/master/.",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>'Single-cell' spatial transcriptomics</span>"
    ]
  },
  {
    "objectID": "chapter9_spatial.html#cell-cell-communication",
    "href": "chapter9_spatial.html#cell-cell-communication",
    "title": "10  ‘Single-cell’ spatial transcriptomics",
    "section": "10.3 Cell-cell communication",
    "text": "10.3 Cell-cell communication\nCell-cell communication is a fundamental process in biology that enables cells to coordinate their behavior, maintain homeostasis, and respond to environmental stimuli. Through various signaling mechanisms, cells transmit biochemical signals that regulate development, immune responses, tissue repair, and disease progression. The ability to understand and map these communication networks is crucial for uncovering mechanisms underlying diseases such as cancer, neurodegenerative disorders, and immune dysfunctions. With advances in spatial transcriptomics and single-cell technologies, researchers can now investigate cell-cell communication at unprecedented resolution, allowing for insights into how cells interact in complex tissue environments.\n\n10.3.1 How do cells communicate with one another?\nCells communicate using multiple signaling modalities, each suited for different biological contexts:\n\nAutocrine signaling: A cell releases signaling molecules that bind to its own receptors, allowing it to regulate its own behavior. This is common in immune responses and cancer progression.\nGap junction signaling: Cells directly exchange ions and small molecules through specialized intercellular channels called gap junctions. This form of communication is rapid and crucial in electrically excitable tissues like the heart and nervous system.\nParacrine signaling: Cells secrete signaling molecules that diffuse over short distances to affect neighboring cells. This is commonly seen in tissue development and inflammation.\nEndocrine signaling: Hormones are released into the bloodstream and travel long distances to regulate distant target cells. This is a key mechanism in systemic physiological regulation, such as insulin signaling in metabolism.\n\nSee these illustrated in Figure 10.26.\n\n\n\n\n\n\n\nFigure 10.26: From https://frontlinegenomics.com/methods-to-study-cell-cell-communication/\n\n\n\n\nWhat do we do with these results? There are many types of results we could publish. Visually, these are summarized in Figure 10.27.\n\n\n\n\n\n\n\nFigure 10.27: From Armingol et al. (2021)\n\n\n\n\n\n\n10.3.2 Brief aside: Ligand-receptor pairs\nCell-cell communication often relies on ligand-receptor interactions. A ligand is a signaling molecule (such as a protein, peptide, or small molecule) that binds to a receptor, a transmembrane or intracellular protein that mediates a cellular response, see Figure 10.28, Figure 10.29, and Figure 10.30. Ligand-receptor interactions trigger cascades of intracellular signaling events, leading to diverse functional outcomes.\n\n\n\n\n\n\n\nFigure 10.28: From https://commons.wikimedia.org/wiki/File:Ligand-receptor_interaction.png\n\n\n\n\n\n\n\n\n\n\n\nFigure 10.29: Top: From https://www.khanacademy.org/science/biology/cell-signaling/mechanisms-of-cell-signaling/a/introduction-to-cell-signaling\n\n\n\n\n\n\n\n\n\n\n\nFigure 10.30: Bottom: From https://biocircuits.github.io/chapters/13_promiscuous_binding.html. Notice: Ligand-receptor pairs are not one to one! A ligand can bind to many different types of receptors, and vice versa.\n\n\n\n\nTo systematically study these interactions, several databases compile known ligand-receptor pairs:\n\nCellChatDB Jin et al. (2021): A curated database that includes signaling pathways and interactions inferred from literature and experimental data.\nCellPhoneDB Efremova et al. (2020): A database that maps ligand-receptor interactions based on transcriptomic data and protein complex structures, see Figure 10.31. See https://cellphonedb.readthedocs.io/.\nFANTOM5: A large-scale functional annotation project that includes information on secreted ligands and their corresponding receptors.\n\n\n\n\n\n\n\n\nFigure 10.31: From Efremova et al. (2020). Here, the rows represent different ligand-receptor pairs, and the columns represent different cell types.\n\n\n\n\nGene expression data plays a critical role in understanding cell-cell communication. By measuring the expression levels of ligands and receptors across different cell types, researchers can infer potential signaling interactions. Advances in spatial transcriptomics further enhance this analysis by preserving spatial context, allowing for the reconstruction of communication networks within tissues. Computational tools, such as COMMOT, integrate gene expression data with spatial information to infer cell-cell signaling and its functional consequences.\n\n\n10.3.3 Using spatial transcriptomics to study cell-cell communication\n\n10.3.3.1 Pause: We’ve actually been studying cell-cell communication long before spatial transcriptomics became commercially viable. It just relied on some leaps of faith.\nBefore the advent of spatial transcriptomics, researchers inferred cell-cell communication primarily from single-cell RNA sequencing (scRNA-seq) data. By identifying which cells expressed specific ligands and which expressed corresponding receptors, computational methods could predict potential signaling interactions, see Figure 10.32 and Figure 10.33. However, this approach required a key assumption: that interacting cells were in close spatial proximity, even though spatial relationships were not directly measured. Furthermore, we assumed that there was a close relation between high gene expression and high abundance of the corresponding ligand (or receptor).\n\n\n\n\n\n\n\nFigure 10.32: Top: From Armingol et al. (2021)\n\n\n\n\n\n\n\n\n\n\n\nFigure 10.33: Bottom: From Armingol et al. (2021)\n\n\n\n\nAdditional information, such as histological staining or known tissue structures, sometimes provided indirect spatial context. For example, in well-characterized tissues like the intestine or brain, researchers could infer likely cell-cell interactions based on prior anatomical knowledge. However, these inferences were often imprecise and required validation through techniques like immunohistochemistry or in situ hybridization.\nWith spatial transcriptomics, these leaps of faith are no longer necessary. We can now directly observe which cells are adjacent or within signaling range, making it possible to study cell-cell communication with much higher confidence, see Figure 10.34 and Figure 10.35. This allows researchers to investigate how signaling networks vary across different tissue regions, uncover spatially organized signaling niches, and refine our understanding of how tissue structure influences intercellular communication.\n\n\n\n\n\n\n\nFigure 10.34: From Almet et al. (2021)\n\n\n\n\n\n\n\n\n\n\n\nFigure 10.35: From Longo et al. (2021)\n\n\n\n\nCOMMOT (COMMunication analysis by Optimal Transport) Cang et al. (2023) is a computational framework designed to infer cell-cell communication (CCC) from spatial transcriptomic data. Unlike traditional methods that examine ligand-receptor interactions independently, COMMOT considers multiple ligand-receptor pairs simultaneously while incorporating spatial constraints. See Figure 10.36.\n\nInput/Output. The input to COMMOT is 1) a spatial transcriptomics dataset (can be spot-level or cell-segmented image data) \\(X \\in \\mathbb{R}^{n \\times p}\\) for \\(n\\) cells (or spots) and \\(p\\) genes alongside \\(Z \\in \\mathbb{R}^{n\\times 2}\\) denoting the \\((x,y)\\) spatial coordinates of each of the \\(n\\) cells, and 2) a database of known ligand-receptor pairs for \\(n_l\\) ligands and \\(n_r\\) receptors (alongside which ligands are known to bind to which receptors), of which the \\(n_l+n_r\\) ligand and receptors should correspond to some of the \\(p\\) genes. The output is: for each ligand \\(i\\) and receptor \\(j\\), a map among the 2D tissue slice of how much “mass” of each ligand is transported to each receptor.\n\n\n\n\n\n\n\n\nFigure 10.36: From Cang et al. (2023)\n\n\n\n\n\nOptimal transport for a single ligand-receptor pair: Given a ligand \\(i\\) and receptor \\(j\\), COMMOT formulates the inference of CCC as an optimal transport problem. The goal is to determine the transport plan \\(P_{\\ell,r} \\in \\mathbb{R}^{n\\times n}_+\\) for \\(n\\) cells, where \\([P_{\\ell,r}]_{k,l}\\) quantifies the strength of signaling from sender cell \\(i\\) to receiver cell \\(j\\) through the ligand-receptor pair \\((\\ell,r)\\). This is achieved by minimizing the transport cost:\n\\[\n\\min_{P_{\\ell,r} \\in \\Gamma_{\\ell,r}} \\langle P_{\\ell,r}, C_{\\ell,r} \\rangle_F\n\\tag{10.1}\\]\nwhere \\(C_{\\ell,r} \\in \\mathbb{R}^{n \\times n}_+\\) is a spatially constrained cost matrix encoding the physical distances between cells (think: Euclidean distance between any two cells along this 2D plane), and \\(\\Gamma_{\\ell,r}\\) is the set of allowable transport plans:\n\\[\n\\Gamma_{\\ell,r} = \\Big\\{P_{\\ell,r} :  \\sum_{j} [P_{\\ell,r}]_{i,j} \\leq X_{i,\\ell}, \\quad \\sum_{i} [P_{\\ell,r}]_{i,j} \\leq X_{j,r}\\Big\\}\n\\tag{10.2}\\]\nwhere \\(X_{i,\\ell}\\) and \\(X_{j,r}\\) represent the expression levels of the ligand and receptor in the respective cells.1\nGeneralization to multiple ligand-receptor pairs: COMMOT extends the optimal transport framework to simultaneously infer multiple ligand-receptor interactions, rather than treating them separately. This is formulated as a collective optimal transport problem, where multiple ligand and receptor species interact within spatial constraints while competing for signaling resources.\nGiven \\(n_l\\) ligand species and \\(n_r\\) receptor species, the method optimizes a transport plan \\(P \\in \\mathbb{R}^{n_l \\times n_r \\times n \\times n}_+\\), where \\([P_{\\ell,r}]_{k,l}\\) quantifies the signaling strength from sender cell \\(i\\) to receiver cell \\(j\\) through ligand \\(\\ell\\) and receptor \\(r\\). The optimization problem is formulated as:\n\\[\n\\min_{P} \\sum_{(\\ell,r) \\in I} \\langle P_{\\ell,r}, C_{\\ell,r} \\rangle_F + \\rho (\\|\\mu\\|_1 + \\|\\nu\\|_1),\n\\tag{10.3}\\]\nwhere:\n\n\\(C_{\\ell,r} \\in \\mathbb{R}^{n \\times n}_+\\) is a spatial cost matrix encoding distances between cells for ligand-receptor pair \\((\\ell,r)\\),\n\\(\\mu_{i,\\ell} = X_{i,\\ell} - \\sum_{r,j} [P_{\\ell,r}]_{i,j}\\) represents the untransported mass of ligand \\(\\ell\\) at sender cell \\(i\\),\n\\(\\nu_{j,r} = X_{j,r} - \\sum_{\\ell,i} [P_{\\ell,r}]_{i,j}\\) represents the untransported mass of receptor \\(r\\) at receiver cell \\(j\\).\n\nThe L1 penalty term \\(\\rho (\\|\\mu\\|_1 + \\|\\nu\\|_1)\\), for some tuning parameter \\(\\rho\\), discourages excessive untransported mass, ensuring that ligands and receptors are optimally assigned to communication pathways while allowing some flexibility when spatial constraints prevent full utilization.\nThe feasible transport plans must satisfy:\n\\[\n\\sum_{r,j} [P_{\\ell,r}]_{i,j} \\leq X_{i,\\ell}, \\quad \\sum_{\\ell,i} [P_{\\ell,r}]_{i,j} \\leq X_{j,r}\n\\tag{10.4}\\]\nensuring that transported mass does not exceed ligand and receptor expression levels.\nThis multi-species framework introduces competition between ligand-receptor interactions: when multiple ligands target the same receptor, or when a receptor has limited capacity, the transport plan balances the signaling mass across competing interactions.\n\nJust to give you some examples of what the result of a cell-cell communication analysis for spatial transcriptomics looks like, see Figure 10.37 and Figure 10.38.\n\n\n\n\n\n\n\nFigure 10.37: Left: From He et al. (2024), for the signaling cascade starting from a particular T cell type.\n\n\n\n\n\n\n\n\n\n\n\nFigure 10.38: Right: From H. Li et al. (2024), for the signaling originating from the tumor (“invasive”) to the receiving immune cells that are responding to the tumor.\n\n\n\n\n\n\n\n10.3.4 A brief note on other approaches\nIn a way, cell-cell communication is a particular flavor of spatial co-expression of certain genes (i.e., genes for the ligands and receptors), if you really are going to believe that a high expression of a gene means high abundance of the corresponding ligand or receptor. In this sense, there are many methods that can do cell-cell communication. See SpatialDM Z. Li et al. (2023) as one example for this usage.",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>'Single-cell' spatial transcriptomics</span>"
    ]
  },
  {
    "objectID": "chapter9_spatial.html#integrationalignment-of-spatial-slices",
    "href": "chapter9_spatial.html#integrationalignment-of-spatial-slices",
    "title": "10  ‘Single-cell’ spatial transcriptomics",
    "section": "10.4 Integration/alignment of spatial slices",
    "text": "10.4 Integration/alignment of spatial slices\nIntegration in spatial transcriptomics is essential for ensuring accurate, comprehensive, and biologically meaningful analyses. One of the primary reasons for integration is to rigorously compare data across different donors, similar to batch correction in single-cell RNA sequencing. Variability introduced by differences in sample preparation, sequencing depth, and experimental conditions can obscure true biological signals. By aligning spatial transcriptomics data across donors, researchers can mitigate technical noise and ensure that observed patterns reflect genuine biological variation rather than artifacts of sample processing.\n\nRemark 10.3. We are still far from doing spatial transcriptomics analyses from large cohorts of donors!\nDespite recent advancements in spatial transcriptomics, we are still far from being able to perform large-scale analyses across cohorts of donors. One major limitation is the small size of tissue sections compared to whole-organ imaging modalities like PET, CT, or MRI. Unlike these imaging technologies, which allow for consistent anatomical registration across individuals, spatial transcriptomic data lacks a straightforward way to ensure alignment across different donors. Another fundamental challenge is the invasive nature of tissue collection, requiring surgical procedures that necessitate careful consideration of the timepoints at which samples are obtained. In diseases like neurodegeneration, where disease progression is highly dynamic, comparing spatial transcriptomic profiles across donors is going to make you go crazy. Even if multiple donors contribute tissue from the same anatomical region, variability in disease stage and molecular signaling could make direct comparisons unreliable. You want to say something along the lines of “the spatial signaling dynamics in Alzhemier’s disease is disrupted in this brain region,” but how are you so sure you’re finding similar spatial dynamics across all your donors?\nAdditionally, the cost of generating spatial transcriptomic data remains prohibitively high, limiting large-scale studies.\n\nFortunately, there are two other big reasons to do integrations:\n\nAnother critical application of integration is combining data from different spatial transcriptomics technologies, such as MERFISH and Visium. Each platform has its own strengths—MERFISH provides high-resolution, single-molecule imaging of a limited gene set, while Visium captures genome-wide expression but at lower spatial resolution. By integrating data across these platforms, researchers can leverage the strengths of both, enabling a more complete understanding of cellular organization, gene expression, and interactions within a tissue. This cross-modality alignment allows for deeper biological insights that would be difficult to achieve using a single technology alone.\nIntegration is crucial for constructing three-dimensional spatial transcriptomics datasets from multiple tissue slices. Aligning and stitching tissue slices is essential for constructing three-dimensional molecular profiles. Since spatial transcriptomics data is often collected as two-dimensional slices, aligning and stitching these slices together is necessary to reconstruct a holistic, 3D molecular map of a tissue. This process enables researchers to study tissue architecture in its native three-dimensional context, facilitating discoveries about developmental processes, tumor microenvironments, and disease progression. By integrating slices into a unified 3D model, researchers can more accurately analyze spatial relationships between cells, study molecular gradients, and gain a deeper understanding of how cellular interactions shape tissue function. See Figure 10.39, Figure 10.40, and Figure 10.41 as examples.\n\n\n\n\n\n\n\n\nFigure 10.39: Left: From Cang et al. (2023)\n\n\n\n\n\n\n\n\n\n\n\nFigure 10.40: Right: From Moffitt et al. (2018)\n\n\n\n\n\n\n\n\n\n\n\nFigure 10.41: From Schott et al. (2024)\n\n\n\n\n\n10.4.1 Brief aside: Image registration (in contexts for broader biomedical imaging)\nImage registration is the process of aligning multiple images into a common coordinate system, allowing for meaningful comparisons across different imaging modalities, timepoints, or subjects. In biomedical imaging, registration is widely used in modalities such as MRI, CT, PET, and histological imaging to ensure that anatomical structures from different scans are spatially aligned. This is particularly important when integrating data from different sources, such as aligning a patient’s pre- and post-treatment scans or fusing anatomical (MRI) and functional (PET) imaging for comprehensive analysis.\nRegistration is necessary because biological tissues can exhibit variations due to differences in patient positioning, tissue deformation, or even individual anatomical differences. In neuroimaging, for example, brain MRI scans from different individuals must be warped onto a standardized brain atlas to enable group-level statistical analysis. Similarly, in histopathology, adjacent tissue sections must be aligned to reconstruct a 3D representation of tissue morphology. Without accurate registration, direct comparisons across images would be unreliable, leading to misinterpretations in clinical diagnoses, disease progression studies, and biomarker discovery.\n\n\n\n\n\n\n\nFigure 10.42: From X. Zhang et al. (2019)\n\n\n\n\n\n\n10.4.2 A current choice for aligning slices in spatial transcriptomics: SANTO\nThe SANTO (coarse-to-fine alignment and stitching) H. Li et al. (2024) method aligns two spatial transcriptomics datasets in a two-step process: coarse alignment followed by fine alignment. (We’ll describe this for spot-level data, but this can be used for imaging data once you’ve done a cell segmentation.)\n\n\n\n\n\n\n\nFigure 10.43: From Schott et al. (2024)\n\n\n\n\n\nInput/Output. The input to SANTO is 1) a spatial transcriptomics dataset (can be spot-level or cell-segmented image data) \\(X \\in \\mathbb{R}^{n_X \\times p}\\) for \\(n_X\\) cells (or spots) and \\(p\\) genes alongside \\(Z \\in \\mathbb{R}^{n_X\\times 2}\\) denoting the \\((x,y)\\) spatial coordinates of each of the \\(n_X\\) cells, and 2) a second spatial transcriptomics dataset (can be spot-level or cell-segmented image data) \\(Y \\in \\mathbb{R}^{n_Y \\times p}\\) for \\(n_Y\\) cells (or spots) and \\(p\\) genes alongside \\(Z \\in \\mathbb{R}^{n_Y\\times 2}\\) denoting the \\((x,y)\\) spatial coordinates of each of the \\(n_Y\\) cells. The output is a rotated and translated spatial transcriptomics dataset \\(X'\\) where all the expression values among the \\(n_X\\) cells in \\(X\\) are the same, but now there’s a rotation and translation of all the spatial coordinates of these \\(n_X\\) spots to best align with slice \\(Y\\).\n\n\nCoarse alignment: SANTO first performs a coarse alignment by rapidly estimating the relative spatial positioning of two slices and identifying their overlapping regions. This is achieved by computing the Pearson Correlation Coefficient (PCC) of shared omics features:\n\\[\n\\text{PCC}(G_{X_i}, G_{Y_j}) = \\frac{\\sum (G_{X_i} - \\bar{G}_X)(G_{Y_j} - \\bar{G}_Y)}{\\sqrt{\\sum (G_{X_i} - \\bar{G}_X)^2 \\sum (G_{Y_j} - \\bar{G}_Y)^2}}\n\\tag{10.5}\\]\nwhere \\(G_{X_i}\\) and \\(G_{Y_j}\\) denote the gene expression vectors of spots \\(i\\) and \\(j\\) in slices \\(X\\) and \\(Y\\), respectively. Pairs with high PCC scores are used to estimate the transformation matrix via Singular Value Decomposition (SVD):\n\\[\nH = \\sum (S_{X_i} - \\bar{S}_X)(S_{Y_j} - \\bar{S}_Y)^\\top\n\\tag{10.6}\\]\nwhere \\(S_X\\) and \\(S_Y\\) represent spatial coordinates. The optimal rotation matrix \\(R\\) and translation \\(T\\) are computed as \\(R = VU^\\top\\) and \\(T = \\bar{S}_Y - R\\bar{S}_X\\). The new spatial coordinates of \\(S_X\\) then get set to be \\(S_X \\leftarrow RS_X + T\\).\n(You can think of this as: 1) using gene expression in both slides to find pairs of “anchors” (one anchor on each slide), and then 2) using the spatial coordinates of the anchor pairs, finding a shift and a rotation for slide \\(X\\).)\nFine alignment: For fine alignment, SANTO iteratively improves the alignment by a more nuanced approach that accounts for a “soft mapping” between spots in different slices. This is implemented with a Dynamic Graph Convolutional Neural Network (DGCNN).\nDuring training, all the spots are combined into one batch, so if there are \\(n_X\\) spots in slice \\(X\\) and \\(n_Y\\) spots in slice \\(Y\\), both slices are used in the network. The model learns spatial and expression embeddings, computes a probabilistic soft mapping\n\\[\nm(X, Y) = \\text{softmax}(F_Y F_X^\\top)\n\\tag{10.7}\\]\nand uses this to derive \\(X^{(Y)}\\), a “counterpart” slice of \\(X\\) generated via \\(Y\\). The network is trained with a loss function that balances omics similarity and spatial coordinate similarity:\n\\[\n\\mathcal{L} = \\frac{1}{n_X n_Y} \\sum_{\\text{spots } i \\in X} \\underset{j \\in Y}{\\text{softmin}} \\left[ \\alpha (1 - \\text{PCC}(G_{X_i}, G_{Y_j})) + (1-\\alpha) d(S_{X_i}, S_{Y_j}) \\right]\n\\tag{10.8}\\]\nwhere \\(d(S_{X_i}, S_{Y_j})\\) is the Euclidean distance between aligned spots, and \\(\\alpha\\) balances spatial and omics contributions.\n\n\n\n10.4.3 A brief note about other approaches\nYou’ll notice that SANTO did not ever “distort” the spatial coordinates. All it’s really doing is learning a global rotation and translation. If you want to see a procedure that can “shrink” and “stretch” spatial coordinates to better match slices, see STAlign Clifton et al. (2023), which relies on large deformation diffeomorphic metric mapping (LDDMM) (https://en.wikipedia.org/wiki/Large_deformation_diffeomorphic_metric_mapping).\n\n\n\n\nAlmet, Axel A, Zixuan Cang, Suoqin Jin, and Qing Nie. 2021. “The Landscape of Cell–Cell Communication Through Single-Cell Transcriptomics.” Current Opinion in Systems Biology 26: 12–23.\n\n\nArmingol, Erick, Adam Officer, Olivier Harismendy, and Nathan E Lewis. 2021. “Deciphering Cell–Cell Interactions and Communication from Gene Expression.” Nature Reviews Genetics 22 (2): 71–88.\n\n\nCang, Zixuan, Yanxiang Zhao, Axel A Almet, Adam Stabell, Raul Ramos, Maksim V Plikus, Scott X Atwood, and Qing Nie. 2023. “Screening Cell-Cell Communication in Spatial Transcriptomics via Collective Optimal Transport.” Nature Methods, 1–11.\n\n\nChen, Kok Hao, Alistair N Boettiger, Jeffrey R Moffitt, Siyuan Wang, and Xiaowei Zhuang. 2015. “Spatially Resolved, Highly Multiplexed RNA Profiling in Single Cells.” Science 348 (6233): aaa6090.\n\n\nClifton, Kalen, Manjari Anant, Gohta Aihara, Lyla Atta, Osagie K Aimiuwu, Justus M Kebschull, Michael I Miller, Daniel Tward, and Jean Fan. 2023. “STalign: Alignment of Spatial Transcriptomics Data Using Diffeomorphic Metric Mapping.” Nature Communications 14 (1): 8123.\n\n\nDuan, Honglin, Tao Cheng, and Hui Cheng. 2023. “Spatially Resolved Transcriptomics: Advances and Applications.” Blood Science 5 (1): 1–14.\n\n\nEfremova, Mirjana, Miquel Vento-Tormo, Sarah A Teichmann, and Roser Vento-Tormo. 2020. “CellPhoneDB: Inferring Cell–Cell Communication from Combined Expression of Multi-Subunit Ligand–Receptor Complexes.” Nature Protocols 15 (4): 1484–1506.\n\n\nFigiel, Sandy, Anthony Bates, David A Braun, Renu Eapen, Markus Eckstein, Brandon J Manley, Matthew I Milowsky, et al. 2024. “Clinical Implications of Basic Research: Exploring the Transformative Potential of Spatial’omics in Uro-Oncology.” European Urology.\n\n\nHartman, Austin, and Rahul Satija. 2024. “Comparative Analysis of Multiplexed in Situ Gene Expression Profiling Technologies.” bioRxiv, 2024–01.\n\n\nHe, Siyu, Yinuo Jin, Achille Nazaret, Lingting Shi, Xueer Chen, Sham Rampersaud, Bahawar S Dhillon, et al. 2024. “Starfysh Integrates Spatial Transcriptomic and Histologic Data to Reveal Heterogeneous Tumor–Immune Hubs.” Nature Biotechnology, 1–13.\n\n\nJin, Suoqin, Christian F Guerrero-Juarez, Lihua Zhang, Ivan Chang, Raul Ramos, Chen-Hsiang Kuan, Peggy Myung, Maksim V Plikus, and Qing Nie. 2021. “Inference and Analysis of Cell-Cell Communication Using CellChat.” Nature Communications 12 (1): 1088.\n\n\nKiessling, Paul, and Christoph Kuppe. 2024. “Spatial Multi-Omics: Novel Tools to Study the Complexity of Cardiovascular Diseases.” Genome Medicine 16 (1): 14.\n\n\nKim, Yoon-Seob, Jinyong Choi, and Sug Hyung Lee. 2023. “Single-Cell and Spatial Sequencing Application in Pathology.” Journal of Pathology and Translational Medicine 57 (1): 43–51.\n\n\nLee, Colin YC, James McCaffrey, Dominic McGovern, and Menna R Clatworthy. 2024. “Profiling Immune Cell Tissue Niches in the Spatial-Omics Era.” Journal of Allergy and Clinical Immunology.\n\n\nLi, Haoyang, Yingxin Lin, Wenjia He, Wenkai Han, Xiaopeng Xu, Chencheng Xu, Elva Gao, Hongyu Zhao, and Xin Gao. 2024. “SANTO: A Coarse-to-Fine Alignment and Stitching Method for Spatial Omics.” Nature Communications 15 (1): 6048.\n\n\nLi, Zhuoxuan, Tianjie Wang, Pentao Liu, and Yuanhua Huang. 2023. “SpatialDM for Rapid Identification of Spatially Co-Expressed Ligand–Receptor and Revealing Cell–Cell Communication Patterns.” Nature Communications 14 (1): 3995.\n\n\nLiao, Jie, Xiaoyan Lu, Xin Shao, Ling Zhu, and Xiaohui Fan. 2021. “Uncovering an Organ’s Molecular Architecture at Single-Cell Resolution by Spatially Resolved Transcriptomics.” Trends in Biotechnology 39 (1): 43–58.\n\n\nLongo, Sophia K, Margaret G Guo, Andrew L Ji, and Paul A Khavari. 2021. “Integrating Single-Cell and Spatial Transcriptomics to Elucidate Intercellular Tissue Dynamics.” Nature Reviews Genetics 22 (10): 627–44.\n\n\nMoffitt, Jeffrey R, Dhananjay Bambah-Mukku, Stephen W Eichhorn, Eric Vaughn, Karthik Shekhar, Julio D Perez, Nimrod D Rubinstein, et al. 2018. “Molecular, Spatial, and Functional Single-Cell Profiling of the Hypothalamic Preoptic Region.” Science 362 (6416): eaau5324.\n\n\nPark, Han-Eol, Song Hyun Jo, Rosalind H Lee, Christian P Macks, Taeyun Ku, Jihwan Park, Chung Whan Lee, Junho K Hur, and Chang Ho Sohn. 2023. “Spatial Transcriptomics: Technical Aspects of Recent Developments and Their Applications in Neuroscience and Cancer Research.” Advanced Science 10 (16): 2206939.\n\n\nRademacher, Anne, Alik Huseynov, Michele Bortolomeazzi, Sina Jasmin Wille, Sabrina Schumacher, Pooja Sant, Denise Keitel, et al. 2024. “Comparison of Spatial Transcriptomics Technologies Using Tumor Cryosections.” bioRxiv, 2024–04.\n\n\nSchott, Marie, Daniel León-Periñán, Elena Splendiani, Leon Strenger, Jan Robin Licha, Tancredi Massimo Pentimalli, Simon Schallenberg, et al. 2024. “Open-ST: High-Resolution Spatial Transcriptomics in 3D.” Cell 187 (15): 3953–72.\n\n\nWilliams, Cameron G, Hyun Jae Lee, Takahiro Asatsuma, Roser Vento-Tormo, and Ashraful Haque. 2022. “An Introduction to Spatial Transcriptomics for Biomedical Research.” Genome Medicine 14 (1): 68.\n\n\nZhang, Meng, Xingjie Pan, Won Jung, Aaron Halpern, Stephen W Eichhorn, Zhiyun Lei, Limor Cohen, et al. 2023. “A Molecularly Defined and Spatially Resolved Cell Atlas of the Whole Mouse Brain.” bioRxiv, 2023–03.\n\n\nZhang, Xinyuan, Yanqiu Feng, Wufan Chen, Xin Li, Andreia V Faria, Qianjin Feng, and Susumu Mori. 2019. “Linear Registration of Brain Mri Using Knowledge-Based Multiple Intermediator Libraries.” Frontiers in Neuroscience 13: 909.\n\n\nZhou, Ran, Gaoxia Yang, Yan Zhang, and Yuan Wang. 2023. “Spatial Transcriptomics in Development and Disease.” Molecular Biomedicine 4 (1): 32.",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>'Single-cell' spatial transcriptomics</span>"
    ]
  },
  {
    "objectID": "chapter9_spatial.html#footnotes",
    "href": "chapter9_spatial.html#footnotes",
    "title": "10  ‘Single-cell’ spatial transcriptomics",
    "section": "",
    "text": "The first constraint \\(\\sum_{j} [P_{\\ell,r}]_{i,j} \\leq X_{i,\\ell}\\) says, “Given that cell \\(i\\) has this much expression of ligand \\(\\ell\\), it should not be sending more than \\(X_{i,\\ell}\\) to all the other \\(n\\) cells.” The second constraint \\(\\sum_{i} [P_{\\ell,r}]_{i,j} \\leq X_{j,r}\\) says, “Given that cell \\(j\\) has this much expression of receptor \\(r\\), it should not be receiving more than \\(X_{j,r}\\) from all the other \\(n\\) cells.”↩︎",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>'Single-cell' spatial transcriptomics</span>"
    ]
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Abdelaal, Tamim, Lieke Michielsen, Davy Cats, Dylan Hoogduin, Hailiang\nMei, Marcel JT Reinders, and Ahmed Mahfouz. 2019. “A Comparison of\nAutomatic Cell Identification Methods for Single-Cell RNA\nSequencing Data.” Genome Biology 20 (1): 1–19.\n\n\nAdams, Levi, Min Kyung Song, Yoshiaki Tanaka, and Yoon-Seong Kim. 2022.\n“Single-Nuclei Paired Multiomic Analysis of Young, Aged, and\nParkinson’s Disease Human Midbrain Reveals Age-and Disease-Associated\nGlial Changes and Their Contribution to Parkinson’s Disease.”\nMedRxiv, 2022–01.\n\n\nAhlmann-Eltze, Constantin, and Wolfgang Huber. 2023. “Comparison\nof Transformations for Single-Cell RNA-Seq Data.” Nature\nMethods, 1–8.\n\n\nAibar, Sara, Carmen Bravo González-Blas, Thomas Moerman, Vân Anh\nHuynh-Thu, Hana Imrichova, Gert Hulselmans, Florian Rambow, et al. 2017.\n“SCENIC: Single-Cell Regulatory Network Inference and\nClustering.” Nature Methods 14 (11): 1083–86.\n\n\nAlmeida, Nathalia, Matthew WH Chung, Elena M Drudi, Elise N Engquist,\nEva Hamrud, Abigail Isaacson, Victoria SK Tsang, Fiona M Watt, and\nFrancesca M Spagnoli. 2021. “Employing Core Regulatory Circuits to\nDefine Cell Identity.” The EMBO Journal 40 (10):\ne106785.\n\n\nAlmet, Axel A, Zixuan Cang, Suoqin Jin, and Qing Nie. 2021. “The\nLandscape of Cell–Cell Communication Through Single-Cell\nTranscriptomics.” Current Opinion in Systems Biology 26:\n12–23.\n\n\nAlquicira-Hernandez, Jose, Anuja Sathe, Hanlee P Ji, Quan Nguyen, and\nJoseph E Powell. 2019. “scPred: Accurate Supervised Method for\nCell-Type Classification from Single-Cell RNA-Seq Data.”\nGenome Biology 20: 1–17.\n\n\nAncheta, Sarah, Leah Dorman, Guillaume Le Treut, Abel Gurung, Loic Alain\nRoyer, Alejandro Granados, and Merlin Lange. 2024. “Challenges and\nProgress in RNA Velocity: Comparative Analysis Across Multiple\nBiological Contexts.” bioRxiv, 2024–06.\n\n\nAndreatta, Massimo, and Santiago J Carmona. 2021. “UCell: Robust\nand Scalable Single-Cell Gene Signature Scoring.”\nComputational and Structural Biotechnology Journal 19: 3796–98.\n\n\nArabi, Tarek Ziad, Aliyah Abdulmohsen Alabdulqader, Belal Nedal Sabbah,\nand Abderrahman Ouban. 2023. “Brain-Inhabiting Bacteria and\nNeurodegenerative Diseases: The ‘Brain Microbiome’\nTheory.” Frontiers in Aging Neuroscience 15: 1240945.\n\n\nArgelaguet, Ricard, Anna SE Cuomo, Oliver Stegle, and John C Marioni.\n2021. “Computational Principles and Challenges in Single-Cell Data\nIntegration.” Nature Biotechnology 39 (10): 1202–15.\n\n\nArmingol, Erick, Adam Officer, Olivier Harismendy, and Nathan E Lewis.\n2021. “Deciphering Cell–Cell Interactions and Communication from\nGene Expression.” Nature Reviews Genetics 22 (2): 71–88.\n\n\nArora, Ankita, Raeann Goering, Hei Yong G Lo, Joelle Lo, Charlie\nMoffatt, and J Matthew Taliaferro. 2022. “The Role of Alternative\nPolyadenylation in the Regulation of Subcellular RNA\nLocalization.” Frontiers in Genetics 12: 818668.\n\n\nArora, Sanjeev, Wei Hu, and Pravesh K Kothari. 2018. “An Analysis\nof the t-Sne Algorithm for Data Visualization.” In Conference\non Learning Theory, 1455–62. PMLR.\n\n\nAshouri, Arghavan, Chufan Zhang, and Federico Gaiti. 2023.\n“Decoding Cancer Evolution: Integrating Genetic and Non-Genetic\nInsights.” Genes 14 (10): 1856.\n\n\nAshuach, Tal, Mariano I Gabitto, Rohan V Koodli, Giuseppe-Antonio Saldi,\nMichael I Jordan, and Nir Yosef. 2023. “MultiVI: Deep Generative\nModel for the Integration of Multimodal Data.” Nature\nMethods, 1–10.\n\n\nAshuach, Tal, Daniel A Reidenbach, Adam Gayoso, and Nir Yosef. 2022.\n“PeakVI: A Deep Generative Model for Single-Cell Chromatin\nAccessibility Analysis.” Cell Reports Methods 2 (3).\n\n\nAvsec, Žiga, Vikram Agarwal, Daniel Visentin, Joseph R Ledsam, Agnieszka\nGrabska-Barwinska, Kyle R Taylor, Yannis Assael, John Jumper, Pushmeet\nKohli, and David R Kelley. 2021. “Effective Gene Expression\nPrediction from Sequence by Integrating Long-Range Interactions.”\nNature Methods 18 (10): 1196–1203.\n\n\nBadia-i-Mompel, Pau, Lorna Wessels, Sophia Müller-Dott, Rémi Trimbour,\nRicardo O Ramirez Flores, Ricard Argelaguet, and Julio Saez-Rodriguez.\n2023. “Gene Regulatory Network Inference in the Era of Single-Cell\nMulti-Omics.” Nature Reviews Genetics 24 (11): 739–54.\n\n\nBae, Taejeong, Liana Fasching, Yifan Wang, Joo Heon Shin, Milovan\nSuvakov, Yeongjun Jang, Scott Norton, et al. 2022. “Analysis of\nSomatic Mutations in 131 Human Brains Reveals Aging-Associated\nHypermutability.” Science 377 (6605): 511–17.\n\n\nBallouz, Sara, Alexander Dobin, and Jesse A Gillis. 2019. “Is It\nTime to Change the Reference Genome?” Genome Biology 20\n(1): 1–9.\n\n\nBaran, Yael, Akhiad Bercovich, Arnau Sebe-Pedros, Yaniv Lubling, Amir\nGiladi, Elad Chomsky, Zohar Meir, Michael Hoichman, Aviezer Lifshitz,\nand Amos Tanay. 2019. “MetaCell: Analysis of Single-Cell\nRNA-Seq Data Using k-Nn Graph Partitions.”\nGenome Biology 20 (1): 1–19.\n\n\nBarry, Ciarrah, Junxi Liu, Rebecca Richmond, Martin K Rutter, Deborah A\nLawlor, Frank Dudbridge, and Jack Bowden. 2021. “Exploiting\nCollider Bias to Apply Two-Sample Summary Data Mendelian Randomization\nMethods to One-Sample Individual Level Data.” PLoS\nGenetics 17 (8): e1009703.\n\n\nBarry, Timothy, Kathryn Roeder, and Eugene Katsevich. 2024.\n“Exponential Family Measurement Error Models for Single-Cell\nCRISPR Screens.” Biostatistics 25 (4): 1254–72.\n\n\nBarry, Timothy, Xuran Wang, John A Morris, Kathryn Roeder, and Eugene\nKatsevich. 2021. “SCEPTRE Improves Calibration and\nSensitivity in Single-Cell CRISPR Screen Analysis.”\nGenome Biology 22 (1): 1–19.\n\n\nBecht, Etienne, Leland McInnes, John Healy, Charles-Antoine Dutertre,\nImmanuel WH Kwok, Lai Guan Ng, Florent Ginhoux, and Evan W Newell. 2019.\n“Dimensionality Reduction for Visualizing Single-Cell Data Using\nUMAP.” Nature Biotechnology 37 (1): 38.\n\n\nBenjamini, Yoav, and Daniel Yekutieli. 2001. “The Control of the\nFalse Discovery Rate in Multiple Testing Under Dependency.”\nAnnals of Statistics, 1165–88.\n\n\nBenner, Christian, Chris CA Spencer, Aki S Havulinna, Veikko Salomaa,\nSamuli Ripatti, and Matti Pirinen. 2016. “FINEMAP: Efficient\nVariable Selection Using Summary Data from Genome-Wide Association\nStudies.” Bioinformatics 32 (10): 1493–1501.\n\n\nBilous, Mariia, Léonard Hérault, Aurélie AG Gabriel, Matei Teleman, and\nDavid Gfeller. 2024. “Building and Analyzing Metacells in\nSingle-Cell Genomics Data.” Molecular Systems Biology,\n1–23.\n\n\nBlanco, Enrique, Mar González-Ramı́rez, Anna Alcaine-Colet, Sergi Aranda,\nand Luciano Di Croce. 2020. “The Bivalent Genome:\nCharacterization, Structure, and Regulation.” Trends in\nGenetics 36 (2): 118–31.\n\n\nBock, Christoph, Paul Datlinger, Florence Chardon, Matthew A Coelho,\nMatthew B Dong, Keith A Lawson, Tian Lu, et al. 2022.\n“High-Content CRISPR Screening.” Nature Reviews Methods\nPrimers 2 (1): 1–23.\n\n\nBouzid, Hind, Julia A Belk, Max Jan, Yanyan Qi, Chloé Sarnowski, Sara\nWirth, Lisa Ma, et al. 2023. “Clonal Hematopoiesis Is Associated\nwith Protection from Alzheimer’s Disease.” Nature\nMedicine 29 (7): 1662–70.\n\n\nBoyeau, Pierre, Jeffrey Regier, Adam Gayoso, Michael I Jordan, Romain\nLopez, and Nir Yosef. 2023. “An Empirical Bayes Method for\nDifferential Expression Analysis of Single Cells with Deep Generative\nModels.” Proceedings of the National Academy of Sciences\n120 (21): e2209124120.\n\n\nBravo González-Blas, Carmen, Seppe De Winter, Gert Hulselmans, Nikolai\nHecker, Irina Matetovici, Valerie Christiaens, Suresh Poovathingal,\nJasper Wouters, Sara Aibar, and Stein Aerts. 2023.\n“SCENIC+: Single-Cell Multiomic Inference of\nEnhancers and Gene Regulatory Networks.” Nature Methods\n20 (9): 1355–67.\n\n\nBruggeman-Everts, Fieke. 2008. “Using Mouse Models to Identify the\nMolecular Mechanisms Mediating Gene by Environment Interactions in\nDepressive Illness.” PhD thesis. https://www.researchgate.net/publication/233413663_Using_mouse_models_to_identify_the_molecular_mechanisms_mediating_gene_by_environment_interactions_in_depressive_illness.\n\n\nBuccitelli, Christopher, and Matthias Selbach. 2020. “mRNAs,\nProteins and the Emerging Principles of Gene Expression Control.”\nNature Reviews Genetics 21 (10): 630–44.\n\n\nBuenrostro, Jason D, Beijing Wu, Howard Y Chang, and William J\nGreenleaf. 2015. “ATAC-Seq: A Method for Assaying Chromatin\nAccessibility Genome-Wide.” Current Protocols in Molecular\nBiology 109 (1): 21–29.\n\n\nBurgess, Stephen, and Simon G Thompson. 2017. “Interpreting\nFindings from Mendelian Randomization Using the MR-Egger Method.”\nEuropean Journal of Epidemiology 32: 377–89.\n\n\nButler, Andrew, Paul Hoffman, Peter Smibert, Efthymia Papalexi, and\nRahul Satija. 2018. “Integrating Single-Cell Transcriptomic Data\nAcross Different Conditions, Technologies, and Species.”\nNature Biotechnology 36 (5): 411–20.\n\n\nCai, T Tony, and Rong Ma. 2022. “Theoretical Foundations of t-Sne\nfor Visualizing High-Dimensional Clustered Data.” Journal of\nMachine Learning Research 23 (301): 1–54.\n\n\nCang, Zixuan, Yanxiang Zhao, Axel A Almet, Adam Stabell, Raul Ramos,\nMaksim V Plikus, Scott X Atwood, and Qing Nie. 2023. “Screening\nCell-Cell Communication in Spatial Transcriptomics via Collective\nOptimal Transport.” Nature Methods, 1–11.\n\n\nCannoodt, Robrecht, Wouter Saelens, Louise Deconinck, and Yvan Saeys.\n2021. “Spearheading Future Omics Analyses Using Dyngen, a\nMulti-Modal Simulator of Single Cells.” Nature\nCommunications 12 (1): 3942.\n\n\nCao, Kai, Yiguang Hong, and Lin Wan. 2022. “Manifold Alignment for\nHeterogeneous Single-Cell Multi-Omics Data Integration Using\nPamona.” Bioinformatics 38 (1): 211–19.\n\n\nCao, Yingying, Simo Kitanovski, Ralf Küppers, and Daniel Hoffmann. 2021.\n“UMI or Not UMI, That Is the Question for scRNA-Seq\nZero-Inflation.” Nature Biotechnology, 1–2.\n\n\nCao, Zhi-Jie, and Ge Gao. 2022. “Multi-Omics Single-Cell Data\nIntegration and Regulatory Inference with Graph-Linked\nEmbedding.” Nature Biotechnology 40 (10): 1458–66.\n\n\nCarbonetto, Peter, Abhishek Sarkar, Zihao Wang, and Matthew Stephens.\n2021. “Non-Negative Matrix Factorization Algorithms Greatly\nImprove Topic Model Fits.” arXiv Preprint\narXiv:2105.13440.\n\n\nCha, Junha, and Insuk Lee. 2020. “Single-Cell Network Biology for\nResolving Cellular Heterogeneity in Human Diseases.”\nExperimental & Molecular Medicine 52 (11): 1798–808.\n\n\nChang, Lei, Yang Xie, Brett Taylor, Zhaoning Wang, Jiachen Sun, Ethan J\nArmand, Shreya Mishra, et al. 2024. “Droplet Hi-c Enables\nScalable, Single-Cell Profiling of Chromatin Architecture in\nHeterogeneous Tissues.” Nature Biotechnology, 1–14.\n\n\nChari, Tara, and Lior Pachter. 2023. “The Specious Art of\nSingle-Cell Genomics.” PLOS Computational Biology 19\n(8): e1011288.\n\n\nChen, Huidong, Jayoung Ryu, Michael E Vinyard, Adam Lerer, and Luca\nPinello. 2024. “SIMBA: Single-Cell Embedding Along with\nFeatures.” Nature Methods 21 (6): 1003–13.\n\n\nChen, J, and WA Weiss. 2015. “Alternative Splicing in Cancer:\nImplications for Biology and Therapy.” Oncogene 34 (1):\n1–14.\n\n\nChen, Kok Hao, Alistair N Boettiger, Jeffrey R Moffitt, Siyuan Wang, and\nXiaowei Zhuang. 2015. “Spatially Resolved, Highly Multiplexed RNA\nProfiling in Single Cells.” Science 348 (6233): aaa6090.\n\n\nChen, Shuxiao, Bokai Zhu, Sijia Huang, John W Hickey, Kevin Z Lin,\nMichael Snyder, William J Greenleaf, Garry P Nolan, Nancy R Zhang, and\nZongming Ma. 2024. “Integration of Spatial and Single-Cell Data\nAcross Modalities with Weakly Linked Features.” Nature\nBiotechnology 42 (7): 1096–106.\n\n\nChen, Wenan, Yan Li, John Easton, David Finkelstein, Gang Wu, and Xiang\nChen. 2018. “UMI-Count Modeling and Differential\nExpression Analysis for Single-Cell RNA Sequencing.”\nGenome Biology 19 (1): 70.\n\n\nChen, Xin, Li Tai Fang, Zhong Chen, Wanqiu Chen, Bin Zhu, Hongjin Wu,\nMalcom Moos Jr, et al. 2024. “A Benchmarking Study of Copy Number\nVariation Inference Methods Using Single-Cell RNA-Sequencing\nData.” bioRxiv, 2024–09.\n\n\nCheng, Junyun, Gaole Lin, Tianhao Wang, Yunzhu Wang, Wenbo Guo, Jie\nLiao, Penghui Yang, et al. 2023. “Massively Parallel CRISPR-Based\nGenetic Perturbation Screening at Single-Cell Resolution.”\nAdvanced Science 10 (4): 2204484.\n\n\nChintalaphani, Sanjog R, Sandy S Pineda, Ira W Deveson, and Kishore R\nKumar. 2021. “An Update on the Neurological Short Tandem Repeat\nExpansion Disorders and the Emergence of Long-Read Sequencing\nDiagnostics.” Acta Neuropathologica Communications 9\n(1): 98.\n\n\nClaringbould, Annique, and Judith B Zaugg. 2021. “Enhancers in\nDisease: Molecular Basis and Emerging Treatment Strategies.”\nTrends in Molecular Medicine 27 (11): 1060–73.\n\n\nClifton, Kalen, Manjari Anant, Gohta Aihara, Lyla Atta, Osagie K\nAimiuwu, Justus M Kebschull, Michael I Miller, Daniel Tward, and Jean\nFan. 2023. “STalign: Alignment of Spatial Transcriptomics Data\nUsing Diffeomorphic Metric Mapping.” Nature\nCommunications 14 (1): 8123.\n\n\nCobos, Francisco Avila, Mohammad Javad Najaf Panah, Jessica Epps,\nXiaochen Long, Tsz-Kwong Man, Hua-Sheng Chiu, Elad Chomsky, et al. 2023.\n“Effective Methods for Bulk RNA-Seq Deconvolution Using scnRNA-Seq\nTranscriptomes.” Genome Biology 24 (1): 177.\n\n\nConcordet, Jean-Paul, and Maximilian Haeussler. 2018. “CRISPOR:\nIntuitive Guide Selection for CRISPR/Cas9 Genome Editing Experiments and\nScreens.” Nucleic Acids Research 46 (W1): W242–45.\n\n\nDal Molin, Alessandra, Giacomo Baruzzo, and Barbara Di Camillo. 2017.\n“Single-Cell RNA-Sequencing: Assessment of\nDifferential Expression Analysis Methods.” Frontiers in\nGenetics 8: 62.\n\n\nDas, Samarendra, Anil Rai, and Shesh N Rai. 2022. “Differential\nExpression Analysis of Single-Cell Rna-Seq Data: Current Statistical\nApproaches and Outstanding Challenges.” Entropy 24 (7):\n995.\n\n\nDatlinger, Paul, André F Rendeiro, Christian Schmidl, Thomas\nKrausgruber, Peter Traxler, Johanna Klughammer, Linda C Schuster, Amelie\nKuchler, Donat Alpar, and Christoph Bock. 2017. “Pooled CRISPR\nScreening with Single-Cell Transcriptome Readout.” Nature\nMethods 14 (3): 297–301.\n\n\nDemetci, Pinar, Rebecca Santorella, Björn Sandstede, William Stafford\nNoble, and Ritambhara Singh. 2022. “SCOT: Single-Cell Multi-Omics\nAlignment with Optimal Transport.” Journal of Computational\nBiology 29 (1): 3–18.\n\n\nDenisenko, Elena, Belinda B Guo, Matthew Jones, Rui Hou, Leanne De Kock,\nTimo Lassmann, Daniel Poppe, et al. 2020. “Systematic Assessment\nof Tissue Dissociation and Storage Biases in Single-Cell and\nSingle-Nucleus RNA-Seq Workflows.” Genome Biology 21\n(1): 1–25.\n\n\nDing, Jiarui, Xian Adiconis, Sean K Simmons, Monika S Kowalczyk, Cynthia\nC Hession, Nemanja D Marjanovic, Travis K Hughes, et al. 2020.\n“Systematic Comparison of Single-Cell and Single-Nucleus\nRNA-Sequencing Methods.” Nature Biotechnology 38 (6):\n737–46.\n\n\nDinh, Laurent, Jascha Sohl-Dickstein, and Samy Bengio. 2016.\n“Density Estimation Using Real Nvp.” arXiv Preprint\narXiv:1605.08803.\n\n\nDixit, Atray, Oren Parnas, Biyu Li, Jenny Chen, Charles P Fulco, Livnat\nJerby-Arnon, Nemanja D Marjanovic, et al. 2016. “Perturb-Seq:\nDissecting Molecular Circuits with Scalable Single-Cell RNA Profiling of\nPooled Genetic Screens.” Cell 167 (7): 1853–66.\n\n\nDong, Xiao, Lei Zhang, Xiaoxiao Hao, Tao Wang, and Jan Vijg. 2020.\n“SCCNV: A Software Tool for Identifying Copy Number Variation from\nSingle-Cell Whole-Genome Sequencing.” Frontiers in\nGenetics 11: 505441.\n\n\nDoss, Rose M, Susana Lopez-Ignacio, Anna Dischler, Laurel Hiatt, Harriet\nDashnow, Martin W Breuss, and Caroline M Dias. 2025. “Mosaicism in\nShort Tandem Repeat Disorders: A Clinical Perspective.”\nGenes 16 (2): 216.\n\n\nDuan, Honglin, Tao Cheng, and Hui Cheng. 2023. “Spatially Resolved\nTranscriptomics: Advances and Applications.” Blood\nScience 5 (1): 1–14.\n\n\nEa, Vuthy, Marie-Odile Baudement, Annick Lesne, and Thierry Forné. 2015.\n“Contribution of Topological Domains and Loop Formation to 3D\nChromatin Organization.” Genes 6 (3): 734–50.\n\n\nEdrisi, Mohammadamin, Xiru Huang, Huw A Ogilvie, and Luay Nakhleh. 2023.\n“Accurate Integration of Single-Cell DNA and RNA for Analyzing\nIntratumor Heterogeneity Using MaCroDNA.” Nature\nCommunications 14 (1): 8262.\n\n\nEfremova, Mirjana, Miquel Vento-Tormo, Sarah A Teichmann, and Roser\nVento-Tormo. 2020. “CellPhoneDB: Inferring Cell–Cell Communication\nfrom Combined Expression of Multi-Subunit Ligand–Receptor\nComplexes.” Nature Protocols 15 (4): 1484–1506.\n\n\nEfron, Bradley, and Robert Tibshirani. 2002. “Empirical Bayes\nMethods and False Discovery Rates for Microarrays.” Genetic\nEpidemiology 23 (1): 70–86.\n\n\nEisenstein, Michael. 2020. “The Secret Life of Cells.”\nNature Methods 17: 7–10.\n\n\nElhaik, Eran. 2022. “Principal Component Analyses (PCA)-Based\nFindings in Population Genetic Studies Are Highly Biased and Must Be\nReevaluated.” Scientific Reports 12 (1): 14683.\n\n\nErgen, Can, Galen Xing, Chenling Xu, Martin Kim, Michael Jayasuriya,\nErin McGeever, Angela Oliveira Pisco, Aaron Streets, and Nir Yosef.\n2024. “Consensus Prediction of Cell Type Labels in Single-Cell\nData with popV.” Nature Genetics, 1–8.\n\n\nErickson, Andrew, Mengxiao He, Emelie Berglund, Maja Marklund, Reza\nMirzazadeh, Niklas Schultz, Linda Kvastad, et al. 2022. “Spatially\nResolved Clonal Copy Number Alterations in Benign and Malignant\nTissue.” Nature 608 (7922): 360–67.\n\n\nEsposito, Roberta, Núria Bosch, Andrés Lanzós, Taisia Polidori, Carlos\nPulido-Quetglas, and Rory Johnson. 2019. “Hacking the Cancer\nGenome: Profiling Therapeutically Actionable Long Non-Coding RNAs Using\nCRISPR-Cas9 Screening.” Cancer Cell 35 (4): 545–57.\n\n\nFigiel, Sandy, Anthony Bates, David A Braun, Renu Eapen, Markus\nEckstein, Brandon J Manley, Matthew I Milowsky, et al. 2024.\n“Clinical Implications of Basic Research: Exploring the\nTransformative Potential of Spatial’omics in Uro-Oncology.”\nEuropean Urology.\n\n\nFleck, Jonas Simon, Sophie Martina Johanna Jansen, Damian Wollny, Fides\nZenk, Makiko Seimiya, Akanksha Jain, Ryoko Okamoto, et al. 2023.\n“Inferring and Perturbing Cell Fate Regulomes in Human Brain\nOrganoids.” Nature 621 (7978): 365–72.\n\n\nFornes, Oriol, Jaime A Castro-Mondragon, Aziz Khan, Robin Van der Lee,\nXi Zhang, Phillip A Richmond, Bhavi P Modi, et al. 2020. “JASPAR\n2020: Update of the Open-Access Database of Transcription Factor Binding\nProfiles.” Nucleic Acids Research 48 (D1): D87–92.\n\n\nFotsing, Stephanie Feupe, Jonathan Margoliash, Catherine Wang, Shubham\nSaini, Richard Yanicky, Sharona Shleizer-Burko, Alon Goren, and Melissa\nGymrek. 2019. “The Impact of Short Tandem Repeat Variation on Gene\nExpression.” Nature Genetics 51 (11): 1652–59.\n\n\nFu, Aikun, Bingqing Yao, Tingting Dong, and Shang Cai. 2023.\n“Emerging Roles of Intratumor Microbiota in Cancer\nMetastasis.” Trends in Cell Biology 33 (7): 583–93.\n\n\nGabbutt, Calum, Ryan O. Schenck, Daniel J. Weisenberger, Christopher\nKimberley, Alison Berner, Jacob Househam, Eszter Lakatos, et al. 2022.\n“Fluctuating Methylation Clocks for Cell Lineage Tracing at High\nTemporal Resolution in Human Tissues.” Nature\nBiotechnology 40 (5): 720–30.\n\n\nGao, Ruli, Shanshan Bai, Ying C Henderson, Yiyun Lin, Aislyn Schalck,\nYun Yan, Tapsi Kumar, et al. 2021. “Delineating Copy Number and\nClonal Substructure in Human Tumors from Single-Cell\nTranscriptomes.” Nature Biotechnology 39 (5): 599–608.\n\n\nGarbulowski, Mateusz, Thomas Hillerton, Daniel Morgan, Deniz Seçilmiş,\nLisbet Sonnhammer, Andreas Tjärnberg, Torbjörn EM Nordling, and Erik LL\nSonnhammer. 2024. “GeneSPIDER2: Large Scale GRN Simulation and\nBenchmarking with Perturbed Single-Cell Data.” NAR Genomics\nand Bioinformatics 6 (3): lqae121.\n\n\nGarg, Shilpa. 2021. “Computational Methods for Chromosome-Scale\nHaplotype Reconstruction.” Genome Biology 22 (1): 101.\n\n\nGarrison, Erik, and Gabor Marth. 2012. “Haplotype-Based Variant\nDetection from Short-Read Sequencing.” arXiv Preprint\narXiv:1207.3907.\n\n\nGasperini, Molly, Andrew J Hill, José L McFaline-Figueroa, Beth Martin,\nSeungsoo Kim, Melissa D Zhang, Dana Jackson, et al. 2019. “A\nGenome-Wide Framework for Mapping Gene Regulation via Cellular Genetic\nScreens.” Cell 176 (1): 377–90.\n\n\nGauba, Kavya, Shruti Gupta, Jyoti Shekhawat, Praveen Sharma, Dharmveer\nYadav, and Mithu Banerjee. 2021. “Immunomodulation by Epigenome\nAlterations in Mycobacterium Tuberculosis Infection.”\nTuberculosis 128: 102077.\n\n\nGawad, Charles, Winston Koh, and Stephen R Quake. 2016.\n“Single-Cell Genome Sequencing: Current State of the\nScience.” Nature Reviews Genetics 17 (3): 175–88.\n\n\nGe, Tian, Chia-Yen Chen, Yang Ni, Yen-Chen Anne Feng, and Jordan W\nSmoller. 2019. “Polygenic Prediction via Bayesian Regression and\nContinuous Shrinkage Priors.” Nature Communications 10\n(1): 1776.\n\n\nGhojogh, Benyamin, Ali Ghodsi, Fakhri Karray, and Mark Crowley. 2021.\n“Factor Analysis, Probabilistic Principal Component Analysis,\nVariational Inference, and Variational Autoencoder: Tutorial and\nSurvey.” arXiv Preprint arXiv:2101.00734.\n\n\nGlancy, Eleanor, Natalie Choy, and Melanie A Eckersley-Maslin. 2024.\n“Bivalent Chromatin: A Developmental Balancing Act Tipped in\nCancer.” Biochemical Society Transactions 52 (1):\n217–29.\n\n\nGohil, Satyen H, J Bryan Iorgulescu, David A Braun, Derin B Keskin, and\nKenneth J Livak. 2021. “Applying High-Dimensional Single-Cell\nTechnologies to the Analysis of Cancer Immunotherapy.” Nature\nReviews Clinical Oncology 18 (4): 244–56.\n\n\nGolub, Todd R, Donna K Slonim, Pablo Tamayo, Christine Huard, Michelle\nGaasenbeek, Jill P Mesirov, Hilary Coller, et al. 1999. “Molecular\nClassification of Cancer: Class Discovery and Class Prediction by Gene\nExpression Monitoring.” Science 286 (5439): 531–37.\n\n\nGong, Boying, Yun Zhou, and Elizabeth Purdom. 2021. “Cobolt:\nIntegrative Analysis of Multimodal Single-Cell Sequencing Data.”\nGenome Biology 22: 1–21.\n\n\nGordeeva, Veronika, Elena Sharova, Konstantin Babalyan, Rinat Sultanov,\nVadim M Govorun, and Georgij Arapidi. 2021. “Benchmarking Germline\nCNV Calling Tools from Exome Sequencing Data.” Scientific\nReports 11 (1): 14416.\n\n\nGrishkevich, Vladislav, and Itai Yanai. 2014. “Gene Length and\nExpression Level Shape Genomic Novelties.” Genome\nResearch 24 (9): 1497–1503.\n\n\nGulati, Gunsagar S, Shaheen S Sikandar, Daniel J Wesche, Anoop\nManjunath, Anjan Bharadwaj, Mark J Berger, Francisco Ilagan, et al.\n2020. “Single-Cell Transcriptional Diversity Is a Hallmark of\nDevelopmental Potential.” Science 367 (6476): 405–11.\n\n\nGupta, Chirag, Jielin Xu, Ting Jin, Saniya Khullar, Xiaoyu Liu, Sayali\nAlatkar, Feixiong Cheng, and Daifeng Wang. 2022. “Single-Cell\nNetwork Biology Characterizes Cell Type Gene Regulation for Drug\nRepurposing and Phenotype Prediction in Alzheimer’s Disease.”\nPLOS Computational Biology 18 (7): e1010287.\n\n\nHabib, Naomi. 2007. Analysis of DNA Motifs Based on a Novel Motif\nComparison Method. Hebrew University of Jerusalem.\n\n\nHafemeister, Christoph, and Rahul Satija. 2019. “Normalization and\nVariance Stabilization of Single-Cell RNA-seq Data Using Regularized Negative Binomial\nRegression.” Genome Biology 20 (1): 1–15.\n\n\nHaghverdi, Laleh, Florian Buettner, and Fabian J Theis. 2015.\n“Diffusion Maps for High-Dimensional Single-Cell Analysis of\nDifferentiation Data.” Bioinformatics 31 (18): 2989–98.\n\n\nHaghverdi, Laleh, Aaron TL Lun, Michael D Morgan, and John C Marioni.\n2018. “Batch Effects in Single-Cell RNA-Sequencing\nData Are Corrected by Matching Mutual Nearest Neighbors.”\nNature Biotechnology 36 (5): 421–27.\n\n\nHamma, Tomoko, and Adrian R Ferré-D’Amaré. 2006. “Pseudouridine\nSynthases.” Chemistry & Biology 13 (11): 1125–35.\n\n\nHannan, Anthony J. 2018. “Tandem Repeats Mediating Genetic\nPlasticity in Health and Disease.” Nature Reviews\nGenetics 19 (5): 286–98.\n\n\nHansson, Oskar, Kaj Blennow, Henrik Zetterberg, and Jeffrey Dage. 2023.\n“Blood Biomarkers for Alzheimer’s Disease in Clinical Practice and\nTrials.” Nature Aging 3 (5): 506–19.\n\n\nHao, Yuhan, Stephanie Hao, Erica Andersen-Nissen, William M Mauck,\nShiwei Zheng, Andrew Butler, Maddie Jane Lee, et al. 2021.\n“Integrated Analysis of Multimodal Single-Cell Data.”\nCell 184 (13): 3573–87.\n\n\nHård, Joanna, Jeff E Mold, Jesper Eisfeldt, Christian Tellgren-Roth,\nSusana Häggqvist, Ignas Bunikis, Orlando Contreras-Lopez, et al. 2023.\n“Long-Read Whole-Genome Analysis of Human Single Cells.”\nNature Communications 14 (1): 5164.\n\n\nHartman, Austin, and Rahul Satija. 2024. “Comparative Analysis of\nMultiplexed in Situ Gene Expression Profiling Technologies.”\nbioRxiv, 2024–01.\n\n\nHartwig, Fernando Pires, Neil Martin Davies, Gibran Hemani, and George\nDavey Smith. 2016. “Two-Sample Mendelian Randomization: Avoiding\nthe Downsides of a Powerful, Widely Applicable but Potentially Fallible\nTechnique.” International Journal of Epidemiology.\nOxford University Press.\n\n\nHe, Liang, Jose Davila-Velderrain, Tomokazu S Sumida, David A Hafler,\nManolis Kellis, and Alexander M Kulminski. 2021.\n“NEBULA Is a Fast Negative Binomial Mixed Model for\nDifferential or Co-Expression Analysis of Large-Scale Multi-Subject\nSingle-Cell Data.” Communications Biology 4 (1): 629.\n\n\nHe, Siyu, Yinuo Jin, Achille Nazaret, Lingting Shi, Xueer Chen, Sham\nRampersaud, Bahawar S Dhillon, et al. 2024. “Starfysh Integrates\nSpatial Transcriptomic and Histologic Data to Reveal Heterogeneous\nTumor–Immune Hubs.” Nature Biotechnology, 1–13.\n\n\nHe, Zihuai, Linxi Liu, Michael E Belloy, Yann Le Guen, Aaron Sossin,\nXiaoxia Liu, Xinran Qi, et al. 2022. “GhostKnockoff Inference\nEmpowers Identification of Putative Causal Variants in Genome-Wide\nAssociation Studies.” Nature Communications 13 (1):\n7209.\n\n\nHeinz, Sven, Christopher Benner, Nathanael Spann, Eric Bertolino, Yin C\nLin, Peter Laslo, Jason X Cheng, Cornelis Murre, Harinder Singh, and\nChristopher K Glass. 2010. “Simple Combinations of\nLineage-Determining Transcription Factors Prime Cis-Regulatory Elements\nRequired for Macrophage and b Cell Identities.” Molecular\nCell 38 (4): 576–89.\n\n\nHernández-Beeftink, Tamara, Beatriz Guillen-Guio, Jesús Villar, and\nCarlos Flores. 2019. “Genomics and the Acute Respiratory Distress\nSyndrome: Current and Future Directions.” International\nJournal of Molecular Sciences 20 (16): 4004.\n\n\nHernando-Herraez, Irene, Brendan Evano, Thomas Stubbs, Pierre-Henri\nCommere, Marc Jan Bonder, Stephen Clark, Simon Andrews, Shahragim\nTajbakhsh, and Wolf Reik. 2019. “Ageing Affects DNA Methylation\nDrift and Transcriptional Cell-to-Cell Variability in Mouse Muscle Stem\nCells.” Nature Communications 10 (1): 4361.\n\n\nHeumos, Lukas, Anna C Schaar, Christopher Lance, Anastasia Litinetskaya,\nFelix Drost, Luke Zappia, Malte D Lücken, et al. 2023. “Best\nPractices for Single-Cell Analysis Across Modalities.” Nature\nReviews Genetics 24 (8): 550–72.\n\n\nHormozdiari, Farhad, Emrah Kostem, Eun Yong Kang, Bogdan Pasaniuc, and\nEleazar Eskin. 2014. “Identifying Causal Variants at Loci with\nMultiple Signals of Association.” In Proceedings of the 5th\nACM Conference on Bioinformatics, Computational Biology, and Health\nInformatics, 610–11.\n\n\nHou, Wenpin, Zhicheng Ji, Zeyu Chen, E John Wherry, Stephanie C Hicks,\nand Hongkai Ji. 2023. “A Statistical Framework for Differential\nPseudotime Analysis with Multiple Single-Cell RNA-Seq Samples.”\nNature Communications 14 (1): 7286.\n\n\nHou, Wenpin, Zhicheng Ji, Hongkai Ji, and Stephanie C Hicks. 2020.\n“A Systematic Evaluation of Single-Cell\nRNA-Sequencing Imputation Methods.” Genome\nBiology 21 (1): 1–30.\n\n\nHu, Zhirui, Pawel F Przytycki, and Katherine S Pollard. 2024.\n“CellWalker2: Multi-Omic Discovery of Hierarchical Cell Type\nRelationships and Their Associations with Genomic Annotations.”\nbioRxiv.\n\n\nHuang, Haiyang, Yingfan Wang, Cynthia Rudin, and Edward P Browne. 2022.\n“Towards a Comprehensive Evaluation of Dimension Reduction Methods\nfor Transcriptomic Data Visualization.” Communications\nBiology 5 (1): 719.\n\n\nIto, Shinsuke, Nando Dulal Das, Takashi Umehara, and Haruhiko Koseki.\n2022. “Factors and Mechanisms That Influence Chromatin-Mediated\nEnhancer–Promoter Interactions and Transcriptional Regulation.”\nCancers 14 (21): 5404.\n\n\nJaakkola, Maria K, Fatemeh Seyednasrollah, Arfa Mehmood, and Laura L\nElo. 2017. “Comparison of Methods to Detect Differentially\nExpressed Genes Between Single-Cell Populations.” Briefings\nin Bioinformatics 18 (5): 735–43.\n\n\nJaiswal, Siddhartha, Pierre Fontanillas, Jason Flannick, Alisa Manning,\nPeter V Grauman, Brenton G Mar, R Coleman Lindsley, et al. 2014.\n“Age-Related Clonal Hematopoiesis Associated with Adverse\nOutcomes.” New England Journal of Medicine 371 (26):\n2488–98.\n\n\nJiang, Ruochen, Tianyi Sun, Dongyuan Song, and Jingyi Jessica Li. 2022.\n“Statistics or Biology: The Zero-Inflation Controversy about\nscRNA-Seq Data.” Genome Biology 23 (1): 31.\n\n\nJiang, Yuchao, Nancy R Zhang, and Mingyao Li. 2017. “SCALE:\nModeling Allele-Specific Gene Expression by Single-Cell RNA\nSequencing.” Genome Biology 18: 1–15.\n\n\nJin, Suoqin, Christian F Guerrero-Juarez, Lihua Zhang, Ivan Chang, Raul\nRamos, Chen-Hsiang Kuan, Peggy Myung, Maksim V Plikus, and Qing Nie.\n2021. “Inference and Analysis of Cell-Cell Communication Using\nCellChat.” Nature Communications 12 (1): 1088.\n\n\nJohnson, Eric M, William Kath, and Madhav Mani. 2022.\n“EMBEDR: Distinguishing Signal from Noise in\nSingle-Cell Omics Data.” Patterns 3 (3).\n\n\nJumper, John, Richard Evans, Alexander Pritzel, Tim Green, Michael\nFigurnov, Olaf Ronneberger, Kathryn Tunyasuvunakool, et al. 2021.\n“Highly Accurate Protein Structure Prediction with\nAlphaFold.” Nature 596 (7873): 583–89.\n\n\nJunttila, Sini, Joahnnes Smolander, and Laura L Elo. 2022.\n“Benchmarking Methods for Detecting Differential States Between\nConditions from Multi-Subject Single-Cell RNA-Seq\nData.” Briefings in Bioinformatics 23 (5): bbac286.\n\n\nKaramveer, and Yasin Uzun. 2024. “Approaches for Benchmarking\nSingle-Cell Gene Regulatory Network Methods.” Bioinformatics\nand Biology Insights 18: 11779322241287120.\n\n\nKennedy, Hannah L, Lisa Dinkler, Martin A Kennedy, Cynthia M Bulik, and\nJennifer Jordan. 2022. “How Genetic Analysis May Contribute to the\nUnderstanding of Avoidant/Restrictive Food Intake Disorder\n(ARFID).” Journal of Eating Disorders 10 (1): 53.\n\n\nKent, JT, John Bibby, and KV Mardia. 1979. Multivariate\nAnalysis. Academic Press Amsterdam.\n\n\nKepchia, Devin, Ling Huang, Richard Dargusch, Robert A Rissman, Maxim N\nShokhirev, Wolfgang Fischer, and David Schubert. 2020. “Diverse\nProteins Aggregate in Mild Cognitive Impairment and Alzheimer’s Disease\nBrain.” Alzheimer’s Research & Therapy 12: 1–20.\n\n\nKhan, Faiza Shafique, Farhan Goher, Dapeng Zhang, Peng Shi, Zhiying Li,\nYin Min Htwe, and Yong Wang. 2022. “Is CRISPR/Cas9 a Way Forward\nto Fast-Track Genetic Improvement in Commercial Palms? Prospects and\nLimits.” Frontiers in Plant Science 13: 1042828.\n\n\nKharchenko, Peter V, Lev Silberstein, and David T Scadden. 2014.\n“Bayesian Approach to Single-Cell Differential Expression\nAnalysis.” Nature Methods 11 (7): 740.\n\n\nKhatri, Robin, and Stefan Bonn. 2022. “Uncertainty Estimation for\nSingle-Cell Label Transfer.” In Conformal and Probabilistic\nPrediction with Applications, 109–28. PMLR.\n\n\nKiessling, Paul, and Christoph Kuppe. 2024. “Spatial Multi-Omics:\nNovel Tools to Study the Complexity of Cardiovascular Diseases.”\nGenome Medicine 16 (1): 14.\n\n\nKim, Daniel, Andy Tran, Hani Jieun Kim, Yingxin Lin, Jean Yee Hwa Yang,\nand Pengyi Yang. 2023. “Gene Regulatory Network Reconstruction:\nHarnessing the Power of Single-Cell Multi-Omic Data.” NPJ\nSystems Biology and Applications 9 (1): 51.\n\n\nKim, Mirang, and Joseph Costello. 2017. “DNA\nMethylation: An Epigenetic Mark of Cellular Memory.”\nExperimental & Molecular Medicine 49 (4): e322–22.\n\n\nKim, Tae Hyun, Xiang Zhou, and Mengjie Chen. 2020. “Demystifying\n‘Drop-Outs’ in Single-Cell UMI Data.” Genome\nBiology 21 (1): 196.\n\n\nKim, Yoon-Seob, Jinyong Choi, and Sug Hyung Lee. 2023.\n“Single-Cell and Spatial Sequencing Application in\nPathology.” Journal of Pathology and Translational\nMedicine 57 (1): 43–51.\n\n\nKobyzev, Ivan, Simon JD Prince, and Marcus A Brubaker. 2020.\n“Normalizing Flows: An Introduction and Review of Current\nMethods.” IEEE Transactions on Pattern Analysis and Machine\nIntelligence 43 (11): 3964–79.\n\n\nKorsunsky, Ilya, Nghia Millard, Jean Fan, Kamil Slowikowski, Fan Zhang,\nKevin Wei, Yuriy Baglaenko, Michael Brenner, Po-ru Loh, and Soumya\nRaychaudhuri. 2019. “Fast, Sensitive and Accurate Integration of\nSingle-Cell Data with Harmony.” Nature Methods, 1–8.\n\n\nKuhn, Maria, António J Santinha, and Randall J Platt. 2021.\n“Moving from in Vitro to in Vivo CRISPR Screens.” Gene\nand Genome Editing 2: 100008.\n\n\nKunkle, Brian W, Benjamin Grenier-Boley, Rebecca Sims, Joshua C Bis,\nVincent Damotte, Adam C Naj, Anne Boland, et al. 2019. “Genetic\nMeta-Analysis of Diagnosed Alzheimer’s Disease Identifies New Risk Loci\nand Implicates aβ, Tau,\nImmunity and Lipid Processing.” Nature Genetics 51 (3):\n414–30.\n\n\nLa Manno, Gioele, Ruslan Soldatov, Amit Zeisel, Emelie Braun, Hannah\nHochgerner, Viktor Petukhov, Katja Lidschreiber, et al. 2018.\n“RNA Velocity of Single Cells.”\nNature 560 (7719): 494–98.\n\n\nLahnemann, David, Johannes Koster, Ewa Szczurek, Davis J McCarthy,\nStephanie C Hicks, Mark D Robinson, Catalina A Vallejos, et al. 2020.\n“Eleven Grand Challenges in Single-Cell Data Science.”\nGenome Biology 21 (1): 1–35.\n\n\nLance, Christopher, Malte D Luecken, Daniel B Burkhardt, Robrecht\nCannoodt, Pia Rautenstrauch, Anna Laddach, Aidyn Ubingazhibov, et al.\n2022. “Multimodal Single Cell Data Integration Challenge: Results\nand Lessons Learned.” BioRxiv, 2022–04.\n\n\nLause, Jan, Philipp Berens, and Dmitry Kobak. 2021. “Analytic\nPearson Residuals for Normalization of Single-Cell RNA-Seq UMI\nData.” Genome Biology 22: 1–20.\n\n\n———. 2024. “The Art of Seeing the Elephant in the Room: 2D\nEmbeddings of Single-Cell Data Do Make Sense.” bioRxiv.\n\n\nLeblanc, Francis JA, and Guillaume Lettre. 2023. “Major Cell-Types\nin Multiomic Single-Nucleus Datasets Impact Statistical Modeling of\nLinks Between Regulatory Sequences and Target Genes.”\nScientific Reports 13 (1): 3924.\n\n\nLee, Colin YC, James McCaffrey, Dominic McGovern, and Menna R\nClatworthy. 2024. “Profiling Immune Cell Tissue Niches in the\nSpatial-Omics Era.” Journal of Allergy and Clinical\nImmunology.\n\n\nLei, Yalan, Rong Tang, Jin Xu, Wei Wang, Bo Zhang, Jiang Liu, Xianjun\nYu, and Si Shi. 2021. “Applications of Single-Cell Sequencing in\nCancer Research: Progress and Perspectives.” Journal of\nHematology & Oncology 14 (1): 91.\n\n\nLeiz, Janna, Maria Rutkiewicz, Carmen Birchmeier, Udo Heinemann, and Kai\nM Schmidt-Ott. 2021. “Technologies for Profiling the Impact of\nGenomic Variants on Transcription Factor Binding.”\nMedizinische Genetik 33 (2): 147–55.\n\n\nLeung, Szi Kay, Aaron R Jeffries, Isabel Castanho, Ben T Jordan, Karen\nMoore, Jonathan P Davies, Emma L Dempster, et al. 2021.\n“Full-Length Transcript Sequencing of Human and Mouse Cerebral\nCortex Identifies Widespread Isoform Diversity and Alternative\nSplicing.” Cell Reports 37 (7).\n\n\nLi, Haoyang, Yingxin Lin, Wenjia He, Wenkai Han, Xiaopeng Xu, Chencheng\nXu, Elva Gao, Hongyu Zhao, and Xin Gao. 2024. “SANTO: A\nCoarse-to-Fine Alignment and Stitching Method for Spatial Omics.”\nNature Communications 15 (1): 6048.\n\n\nLi, Jingyi Jessica, Heather J Zhou, Peter J Bickel, and Xin Tong. 2024.\n“Dissecting Gene Expression Heterogeneity: Generalized Pearson\nCorrelation Squares and the k-Lines Clustering Algorithm.”\nJournal of the American Statistical Association, 1–14.\n\n\nLi, Lei, Yumei Li, Xudong Zou, Fuduan Peng, Ya Cui, Eric J Wagner, and\nWei Li. 2022. “Population-Scale Genetic Control of Alternative\nPolyadenylation and Its Association with Human Diseases.”\nQuantitative Biology 10 (1): 44–54.\n\n\nLi, Xintao, Shi Peng, Bo Guan, Songwen Chen, Genqing Zhou, Yong Wei,\nChao Gong, et al. 2021. “Genetically Determined Inflammatory\nBiomarkers and the Risk of Heart Failure: A Mendelian Randomization\nStudy.” Frontiers in Cardiovascular Medicine 8: 734400.\n\n\nLi, Yumei, Xinzhou Ge, Fanglue Peng, Wei Li, and Jingyi Jessica Li.\n2022. “Exaggerated False Positives by Popular Differential\nExpression Methods When Analyzing Human Population Samples.”\nGenome Biology 23 (1): 1–13.\n\n\nLi, Zhuoxuan, Tianjie Wang, Pentao Liu, and Yuanhua Huang. 2023.\n“SpatialDM for Rapid Identification of Spatially Co-Expressed\nLigand–Receptor and Revealing Cell–Cell Communication Patterns.”\nNature Communications 14 (1): 3995.\n\n\nLiao, Jie, Xiaoyan Lu, Xin Shao, Ling Zhu, and Xiaohui Fan. 2021.\n“Uncovering an Organ’s Molecular Architecture at Single-Cell\nResolution by Spatially Resolved Transcriptomics.” Trends in\nBiotechnology 39 (1): 43–58.\n\n\nLim, Jongsu, Chanho Park, Minjae Kim, Hyukhee Kim, Junil Kim, and\nDong-Sung Lee. 2024. “Advances in Single-Cell Omics and Multiomics\nfor High-Resolution Molecular Profiling.” Experimental &\nMolecular Medicine 56 (3): 515–26.\n\n\nLin, Kevin Z, Yixuan Qiu, and Kathryn Roeder. 2022. “eSVD: Cohort-Level Differential Expression in\nMulti-Individual Single-Cell RNA-Seq Data Using\nExponential-Family Embeddings.” (In Preparation).\n\n\n———. 2024. “eSVD-DE: Cohort-Wide\nDifferential Expression in Single-Cell RNA-Seq Data Using\nExponential-Family Embeddings.” BMC Bioinformatics 25\n(1): 113.\n\n\nLin, Xueqiu, Yanxia Liu, Shuai Liu, Xiang Zhu, Lingling Wu, Yanyu Zhu,\nDehua Zhao, et al. 2022. “Nested Epistasis Enhancer Networks for\nRobust Genome Regulation.” Science 377 (6610): 1077–85.\n\n\nLiu, Hanqing, Jingtian Zhou, Wei Tian, Chongyuan Luo, Anna Bartlett,\nAndrew Aldridge, Jacinta Lucero, et al. 2021. “DNA\nMethylation Atlas of the Mouse Brain at Single-Cell Resolution.”\nNature 598 (7879): 120–28.\n\n\nLiu, Jiayi, Anat Kreimer, and Wei Vivian Li. 2023. “Differential\nVariability Analysis of Single-Cell Gene Expression Data.”\nBriefings in Bioinformatics 24 (5): bbad294.\n\n\nLiu, Ning, Wai Yee Low, Hamid Alinejad-Rokny, Stephen Pederson, Timothy\nSadlon, Simon Barry, and James Breen. 2021. “Seeing the Forest\nThrough the Trees: Prioritising Potentially Functional Interactions from\nHi-c.” Epigenetics & Chromatin 14 (1): 41.\n\n\nLiu, Yunqing, Jiayi Zhao, Taylor S Adams, Ningya Wang, Jonas C Schupp,\nWeimiao Wu, John E McDonough, et al. 2023. “iDESC: Identifying Differential Expression in\nSingle-Cell RNA Sequencing Data with Multiple\nSubjects.” BMC Bioinformatics 24 (1): 318.\n\n\nLoers, Jens Uwe, and Vanessa Vermeirssen. 2024. “A Single-Cell\nMultimodal View on Gene Regulatory Network Inference from\nTranscriptomics and Chromatin Accessibility Data.” Briefings\nin Bioinformatics 25 (5): bbae382.\n\n\nLongo, Sophia K, Margaret G Guo, Andrew L Ji, and Paul A Khavari. 2021.\n“Integrating Single-Cell and Spatial Transcriptomics to Elucidate\nIntercellular Tissue Dynamics.” Nature Reviews Genetics\n22 (10): 627–44.\n\n\nLopes, Inês, Gulam Altab, Priyanka Raina, and JoãO Pedro De Magalhães.\n2021. “Gene Size Matters: An Analysis of Gene Length in the Human\nGenome.” Frontiers in Genetics 12: 559998.\n\n\nLopez, Romain, Jeffrey Regier, Michael B Cole, Michael I Jordan, and Nir\nYosef. 2018. “Deep Generative Modeling for Single-Cell\nTranscriptomics.” Nature Methods 15 (12): 1053.\n\n\nLotfollahi, Mohammad, Mohsen Naghipourfar, Malte D Luecken, Matin\nKhajavi, Maren Büttner, Marco Wagenstetter, Žiga Avsec, et al. 2022.\n“Mapping Single-Cell Data to Reference Atlases by Transfer\nLearning.” Nature Biotechnology 40 (1): 121–30.\n\n\nLotfollahi, Mohammad, F Alexander Wolf, and Fabian J Theis. 2019.\n“scGen Predicts Single-Cell Perturbation Responses.”\nNature Methods 16 (8): 715–21.\n\n\nLove, Michael I, Wolfgang Huber, and Simon Anders. 2014.\n“Moderated Estimation of Fold Change and Dispersion for\nRNA-Seq Data with DESeq2.” Genome\nBiology 15 (12): 550.\n\n\nLuecken, Malte D, Maren Büttner, Kridsadakorn Chaichoompu, Anna Danese,\nMarta Interlandi, Michaela F Müller, Daniel C Strobl, et al. 2022.\n“Benchmarking Atlas-Level Data Integration in Single-Cell\nGenomics.” Nature Methods 19 (1): 41–50.\n\n\nLuecken, Malte D, and Fabian J Theis. 2019. “Current Best\nPractices in Single-Cell RNA-Seq Analysis: A\nTutorial.” Molecular Systems Biology 15 (6): e8746.\n\n\nMa, Rong, Eric D Sun, David Donoho, and James Zou. 2024.\n“Principled and Interpretable Alignability Testing and Integration\nof Single-Cell Data.” Proceedings of the National Academy of\nSciences 121 (10): e2313719121.\n\n\nMa, Sai, Bing Zhang, Lindsay M LaFave, Andrew S Earl, Zachary Chiang,\nYan Hu, Jiarui Ding, et al. 2020. “Chromatin Potential Identified\nby Shared Single-Cell Profiling of RNA and\nChromatin.” Cell 183 (4): 1103–16.\n\n\nMa, Ying, Shiquan Sun, Xuequn Shang, Evan T Keller, Mengjie Chen, and\nXiang Zhou. 2020. “Integrative Differential Expression and Gene\nSet Enrichment Analysis Using Summary Statistics for scRNA-Seq Studies.” Nature\nCommunications 11 (1): 1–13.\n\n\nMacrae, Trisha A, Julie Fothergill-Robinson, and Miguel Ramalho-Santos.\n2023. “Regulation, Functions and Transmission of Bivalent\nChromatin During Mammalian Development.” Nature Reviews\nMolecular Cell Biology 24 (1): 6–26.\n\n\nMaden, Sean K, Sang Ho Kwon, Louise A Huuki-Myers, Leonardo\nCollado-Torres, Stephanie C Hicks, and Kristen R Maynard. 2023.\n“Challenges and Opportunities to Computationally Deconvolve\nHeterogeneous Tissue with Varying Cell Sizes Using Single-Cell\nRNA-Sequencing Datasets.” Genome Biology 24 (1): 288.\n\n\nMai, Jialin, Mingming Lu, Qianwen Gao, Jingyao Zeng, and Jingfa Xiao.\n2023. “Transcriptome-Wide Association Studies: Recent Advances in\nMethods, Applications and Available Databases.”\nCommunications Biology 6 (1): 899.\n\n\nMansisidor, Andrés R, and Viviana I Risca. 2022. “Chromatin\nAccessibility: Methods, Mechanisms, and Biological Insights.”\nNucleus 13 (1): 238–78.\n\n\nMao, Yanfei, Jose Ramon Botella, and Jian-Kang Zhu. 2017.\n“Heritability of Targeted Gene Modifications Induced by\nPlant-Optimized CRISPR Systems.” Cellular and Molecular Life\nSciences 74 (6): 1075–93.\n\n\nMarine, Jean-Christophe, Sarah-Jane Dawson, and Mark A Dawson. 2020.\n“Non-Genetic Mechanisms of Therapeutic Resistance in\nCancer.” Nature Reviews Cancer 20 (12): 743–56.\n\n\nMartens, Laura D, David S Fischer, Vicente A Yépez, Fabian J Theis, and\nJulien Gagneur. 2024. “Modeling Fragment Counts Improves\nSingle-Cell ATAC-Seq Analysis.” Nature Methods 21 (1):\n28–31.\n\n\nMartignano, Filippo, Uday Munagala, Stefania Crucitta, Alessandra\nMingrino, Roberto Semeraro, Marzia Del Re, Iacopo Petrini, Alberto Magi,\nand Silvestro G Conticello. 2021. “Nanopore Sequencing from Liquid\nBiopsy: Analysis of Copy Number Variations from Cell-Free DNA of Lung\nCancer Patients.” Molecular Cancer 20: 1–6.\n\n\nMartin, Alicia R, Masahiro Kanai, Yoichiro Kamatani, Yukinori Okada,\nBenjamin M Neale, and Mark J Daly. 2019. “Clinical Use of Current\nPolygenic Risk Scores May Exacerbate Health Disparities.”\nNature Genetics 51 (4): 584–91.\n\n\nMasood, Daniall, Luyao Ren, Cu Nguyen, Francesco G Brundu, Lily Zheng,\nYongmei Zhao, Erich Jaeger, et al. 2024. “Evaluation of Somatic\nCopy Number Variation Detection by NGS Technologies and Bioinformatics\nTools on a Hyper-Diploid Cancer Genome.” Genome Biology\n25 (1): 163.\n\n\nMattick, John S, Paulo P Amaral, Piero Carninci, Susan Carpenter, Howard\nY Chang, Ling-Ling Chen, Runsheng Chen, et al. 2023. “Long\nNon-Coding RNAs: Definitions, Functions, Challenges and\nRecommendations.” Nature Reviews Molecular Cell Biology\n24 (6): 430–47.\n\n\nMcGinnis, Christopher S, Lyndsay M Murrow, and Zev J Gartner. 2019.\n“DoubletFinder: Doublet Detection in Single-Cell RNA Sequencing\nData Using Artificial Nearest Neighbors.” Cell Systems 8\n(4): 329–37.\n\n\nMcKenna, Aaron, Matthew Hanna, Eric Banks, Andrey Sivachenko, Kristian\nCibulskis, Andrew Kernytsky, Kiran Garimella, et al. 2010. “The\nGenome Analysis Toolkit: A MapReduce Framework for Analyzing\nNext-Generation DNA Sequencing Data.” Genome Research 20\n(9): 1297–1303.\n\n\nMcLean, Cory Y, Dave Bristor, Michael Hiller, Shoa L Clarke, Bruce T\nSchaar, Craig B Lowe, Aaron M Wenger, and Gill Bejerano. 2010.\n“GREAT Improves Functional Interpretation of Cis-Regulatory\nRegions.” Nature Biotechnology 28 (5): 495–501.\n\n\nMiao, Zhen, Benjamin D Humphreys, Andrew P McMahon, and Junhyong Kim.\n2021. “Multiomics Integration in the Age of Million Single Cell\nData.” Nature Reviews Nephrology 17 (11): 710–24.\n\n\nMiao, Zhen, and Junhyong Kim. 2024. “Uniform Quantification of\nSingle-Nucleus ATAC-Seq Data with Paired-Insertion Counting (PIC) and a\nModel-Based Insertion Rate Estimator.” Nature Methods 21\n(1): 32–36.\n\n\nMichielsen, Lieke, Mohammad Lotfollahi, Daniel Strobl, Lisa Sikkema,\nMarcel JT Reinders, Fabian J Theis, and Ahmed Mahfouz. 2023.\n“Single-Cell Reference Mapping to Construct and Extend Cell-Type\nHierarchies.” NAR Genomics and Bioinformatics 5 (3):\nlqad070.\n\n\nMignone, Flavio, Carmela Gissi, Sabino Liuni, and Graziano Pesole. 2002.\n“Untranslated Regions of mRNAs.” Genome Biology 3:\n1–10.\n\n\nMihaylova, M, R Staneva, D Toncheva, M Pancheva, and S Hadjidekova.\n2017. “Benign, Pathogenic and Copy Number Variations of Unknown\nClinical Significance in Patients with Congenital Malformations and\nDevelopmental Delay.” Balkan Journal of Medical Genetics:\nBJMG 20 (1): 5.\n\n\nMilholland, Brandon, Xiao Dong, Lei Zhang, Xiaoxiao Hao, Yousin Suh, and\nJan Vijg. 2017. “Differences Between Germline and Somatic Mutation\nRates in Humans and Mice.” Nature Communications 8 (1):\n15183.\n\n\nMoerman, Thomas, Sara Aibar Santos, Carmen Bravo González-Blas, Jaak\nSimm, Yves Moreau, Jan Aerts, and Stein Aerts. 2019. “GRNBoost2\nand Arboreto: Efficient and Scalable Inference of Gene Regulatory\nNetworks.” Bioinformatics 35 (12): 2159–61.\n\n\nMoffitt, Jeffrey R, Dhananjay Bambah-Mukku, Stephen W Eichhorn, Eric\nVaughn, Karthik Shekhar, Julio D Perez, Nimrod D Rubinstein, et al.\n2018. “Molecular, Spatial, and Functional Single-Cell Profiling of\nthe Hypothalamic Preoptic Region.” Science 362 (6416):\neaau5324.\n\n\nMölbert, Carla, and Laleh Haghverdi. 2023. “Adjustments to the\nReference Dataset Design Improve Cell Type Label Transfer.”\nFrontiers in Bioinformatics 3: 1150099.\n\n\nMubeen, Sarah, Alpha Tom Kodamullil, Martin Hofmann-Apitius, and Daniel\nDomingo-Fernández. 2022. “On the Influence of Several Factors on\nPathway Enrichment Analysis.” Briefings in\nBioinformatics 23 (3): bbac143.\n\n\nNeufeld, Anna, Lucy L Gao, Joshua Popp, Alexis Battle, and Daniela\nWitten. 2022. “Inference After Latent Variable Estimation for\nSingle-Cell RNA Sequencing Data.” arXiv Preprint\narXiv:2207.00554.\n\n\nNg, Bernard, William Casazza, Nam Hee Kim, Chendi Wang, Farnush Farhadi,\nShinya Tasaki, David A Bennett, Philip L De Jager, Christopher Gaiteri,\nand Sara Mostafavi. 2021. “Cascading Epigenomic Analysis for\nIdentifying Disease Genes from the Regulatory Landscape of GWAS\nVariants.” PLoS Genetics 17 (11): e1009918.\n\n\nNg, Bernard, Charles C White, Hans-Ulrich Klein, Solveig K Sieberts,\nCristin McCabe, Ellis Patrick, Jishu Xu, et al. 2017. “An xQTL Map\nIntegrates the Genetic Architecture of the Human Brain’s Transcriptome\nand Epigenome.” Nature Neuroscience 20 (10): 1418–26.\n\n\nNguyen, Hai CT, Bukyung Baik, Sora Yoon, Taesung Park, and Dougu Nam.\n2023. “Benchmarking Integration of Single-Cell Differential\nExpression.” Nature Communications 14 (1): 1570.\n\n\nNguyen, Hung, Ha Nguyen, Duc Tran, Sorin Draghici, and Tin Nguyen. 2024.\n“Fourteen Years of Cellular Deconvolution: Methodology,\nApplications, Technical Evaluation and Outstanding Challenges.”\nNucleic Acids Research 52 (9): 4761–83.\n\n\nNiazi, Sarfaraz K. 2023. “RNA Therapeutics: A Healthcare Paradigm\nShift.” Biomedicines 11 (5): 1275.\n\n\nNovembre, John, Toby Johnson, Katarzyna Bryc, Zoltán Kutalik, Adam R\nBoyko, Adam Auton, Amit Indap, et al. 2008. “Genes Mirror\nGeography Within Europe.” Nature 456 (7218): 98–101.\n\n\nPan, Bohu, Rebecca Kusko, Wenming Xiao, Yuanting Zheng, Zhichao Liu,\nChunlin Xiao, Sugunadevi Sakkiah, et al. 2019. “Similarities and\nDifferences Between Variants Called with Human Reference Genome HG19 or\nHG38.” BMC Bioinformatics 20 (2): 17–29.\n\n\nPark, Han-Eol, Song Hyun Jo, Rosalind H Lee, Christian P Macks, Taeyun\nKu, Jihwan Park, Chung Whan Lee, Junho K Hur, and Chang Ho Sohn. 2023.\n“Spatial Transcriptomics: Technical Aspects of Recent Developments\nand Their Applications in Neuroscience and Cancer Research.”\nAdvanced Science 10 (16): 2206939.\n\n\nPeng, Minshi, Brie Wamsley, Andrew G Elkins, Daniel M Geschwind, Yuting\nWei, and Kathryn Roeder. 2021. “Cell Type Hierarchy Reconstruction\nvia Reconciliation of Multi-Resolution Cluster Tree.”\nbioRxiv.\n\n\nPratapa, Aditya, Amogh P Jalihal, Jeffrey N Law, Aditya Bharadwaj, and\nTM Murali. 2020. “Benchmarking Algorithms for Gene Regulatory\nNetwork Inference from Single-Cell Transcriptomic Data.”\nNature Methods 17 (2): 147–54.\n\n\nPrater, Katherine E, and Kevin Z Lin. 2024. “All the Single Cells:\nSingle-Cell Transcriptomics/Epigenomics Experimental Design and Analysis\nConsiderations for Glial Biologists.” Glia.\n\n\nPrivé, Florian, Julyan Arbel, and Bjarni J Vilhjálmsson. 2020.\n“LDpred2: Better, Faster, Stronger.”\nBioinformatics 36 (22-23): 5424–31.\n\n\nQian, Kun, Shiwei Fu, Hongwei Li, and Wei Vivian Li. 2022.\n“scINSIGHT for Interpreting Single-Cell Gene Expression from\nBiologically Heterogeneous Data.” Genome Biology 23 (1):\n1–23.\n\n\nRademacher, Anne, Alik Huseynov, Michele Bortolomeazzi, Sina Jasmin\nWille, Sabrina Schumacher, Pooja Sant, Denise Keitel, et al. 2024.\n“Comparison of Spatial Transcriptomics Technologies Using Tumor\nCryosections.” bioRxiv, 2024–04.\n\n\nRisso, Davide, John Ngai, Terence P Speed, and Sandrine Dudoit. 2014.\n“Normalization of RNA-Seq Data Using Factor Analysis\nof Control Genes or Samples.” Nature Biotechnology 32\n(9): 896–902.\n\n\nRobinson, Mark D, and Gordon K Smyth. 2007. “Moderated Statistical\nTests for Assessing Differences in Tag Abundance.”\nBioinformatics 23 (21): 2881–87.\n\n\nRobles-Espinoza, Carla Daniela, Pejman Mohammadi, Ximena Bonilla, and\nMaria Gutierrez-Arcelus. 2021. “Allele-Specific Expression:\nApplications in Cancer and Technical Considerations.” Current\nOpinion in Genetics & Development 66: 10–19.\n\n\nRusilowicz-Jones, Emma V, Sylvie Urbé, and Michael J Clague. 2022.\n“Protein Degradation on the Global Scale.” Molecular\nCell 82 (8): 1414–23.\n\n\nSaelens, Wouter, Robrecht Cannoodt, Helena Todorov, and Yvan Saeys.\n2019. “A Comparison of Single-Cell Trajectory Inference\nMethods.” Nature Biotechnology 37 (5): 547–54.\n\n\nSalzberg, Steven L. 2018. “Open Questions: How Many Genes Do We\nHave?” BMC Biology 16 (1): 94.\n\n\nSanderson, Eleanor, M Maria Glymour, Michael V Holmes, Hyunseung Kang,\nJean Morrison, Marcus R Munafò, Tom Palmer, et al. 2022.\n“Mendelian Randomization.” Nature Reviews Methods\nPrimers 2 (1): 6.\n\n\nSarkar, Abhishek, and Matthew Stephens. 2021. “Separating\nMeasurement and Expression Models Clarifies Confusion in Single Cell\nRNA-Seq Analysis.” Nature Genetics 53 (6):\n770–77.\n\n\nSasse, Alexander, Bernard Ng, Anna E Spiro, Shinya Tasaki, David A\nBennett, Christopher Gaiteri, Philip L De Jager, Maria Chikina, and Sara\nMostafavi. 2023. “Benchmarking of Deep Neural Networks for\nPredicting Personal Gene Expression from DNA Sequence Highlights\nShortcomings.” Nature Genetics 55 (12): 2060–64.\n\n\nSato, Yuma, Shumpei Watanabe, Yoshinari Fukuda, Takao Hashiguchi, Yusuke\nYanagi, and Shinji Ohno. 2018. “Cell-to-Cell Measles Virus Spread\nBetween Human Neurons Is Dependent on Hemagglutinin and Hyperfusogenic\nFusion Protein.” Journal of Virology 92 (6): 10–1128.\n\n\nSaunders, Lauren M, Sanjay R Srivatsan, Madeleine Duran, Michael W\nDorrity, Brent Ewing, Tor H Linbo, Jay Shendure, et al. 2023.\n“Embryo-Scale Reverse Genetics at Single-Cell Resolution.”\nNature 623 (7988): 782–91.\n\n\nSchaff, Dylan L, Aria J Fasse, Phoebe E White, Robert J Vander Velde,\nand Sydney M Shaffer. 2024. “Clonal Differences Underlie Variable\nResponses to Sequential and Prolonged Treatment.” Cell\nSystems 15 (3): 213–26.\n\n\nSchefzik, Roman, Julian Flesch, and Angela Goncalves. 2021. “Fast\nIdentification of Differential Distributions in Single-Cell\nRNA-Sequencing Data with waddR.” Bioinformatics 37 (19):\n3204–11.\n\n\nSchep, Alicia N, Beijing Wu, Jason D Buenrostro, and William J\nGreenleaf. 2017. “chromVAR: Inferring\nTranscription-Factor-Associated Accessibility from Single-Cell\nEpigenomic Data.” Nature Methods 14 (10): 975–78.\n\n\nSchnitzler, Gavin R, Helen Kang, Shi Fang, Ramcharan S Angom, Vivian S\nLee-Kim, X Rosa Ma, Ronghao Zhou, et al. 2024. “Convergence of\nCoronary Artery Disease Genes onto Endothelial Cell Programs.”\nNature 626 (8000): 799–807.\n\n\nSchott, Marie, Daniel León-Periñán, Elena Splendiani, Leon Strenger, Jan\nRobin Licha, Tancredi Massimo Pentimalli, Simon Schallenberg, et al.\n2024. “Open-ST: High-Resolution Spatial Transcriptomics in\n3D.” Cell 187 (15): 3953–72.\n\n\nSetty, Manu, Vaidotas Kiseliovas, Jacob Levine, Adam Gayoso, Linas\nMazutis, and Dana Pe’er. 2019. “Characterization of Cell Fate\nProbabilities in Single-Cell Data with Palantir.”\nNature Biotechnology 37 (4): 451–60.\n\n\nShalek, Alex K, and Mikael Benson. 2017. “Single-Cell Analyses to\nTailor Treatments.” Science Translational Medicine 9\n(408): eaan4730.\n\n\nShang, Renfu, Seungjae Lee, Gayan Senavirathne, and Eric C Lai. 2023.\n“microRNAs in Action: Biogenesis, Function and Regulation.”\nNature Reviews Genetics 24 (12): 816–33.\n\n\nSheth, Maya U, Wei-Lin Qiu, X Rosa Ma, Andreas R Gschwind, Evelyn\nJagoda, Anthony S Tan, Hjörleifur Einarsson, et al. 2024. “Mapping\nEnhancer-Gene Regulatory Interactions from Single-Cell Data.”\nbioRxiv, 2024–11.\n\n\nSiersbæk, Rasmus, Songjoon Baek, Atefeh Rabiee, Ronni Nielsen, Sofie\nTraynor, Nicholas Clark, Albin Sandelin, et al. 2014. “Molecular\nArchitecture of Transcription Factor Hotspots in Early\nAdipogenesis.” Cell Reports 7 (5): 1434–42.\n\n\nSiletti, Kimberly, Rebecca Hodge, Alejandro Mossi Albiach, Ka Wai Lee,\nSong-Lin Ding, Lijuan Hu, Peter Lönnerberg, et al. 2023.\n“Transcriptomic Diversity of Cell Types Across the Adult Human\nBrain.” Science 382 (6667): eadd7046.\n\n\nSilva, Paulo FL da, and Björn Schumacher. 2021. “Principles of the\nMolecular and Cellular Mechanisms of Aging.” Journal of\nInvestigative Dermatology 141 (4): 951–60.\n\n\nSingh, Ashish Kumar, Maren Fridtjofsen Olsen, Liss Anne Solberg Lavik,\nTrine Vold, Finn Drabløs, and Wenche Sjursen. 2021. “Detecting\nCopy Number Variation in Next Generation Sequencing Data from Diagnostic\nGene Panels.” BMC Medical Genomics 14 (1): 214.\n\n\nSong, Dongyuan, Kexin Li, Xinzhou Ge, and Jingyi Jessica Li. 2023.\n“ClusterDE: A Post-Clustering Differential Expression (DE) Method\nRobust to False-Positive Inflation Caused by Double Dipping.”\nResearch Square.\n\n\nSquair, Jordan W, Matthieu Gautier, Claudi Kathe, Mark A Anderson,\nNicholas D James, Thomas H Hutson, Rémi Hudelle, et al. 2021.\n“Confronting False Discoveries in Single-Cell Differential\nExpression.” Nature Communications 12 (1): 5692.\n\n\nStatello, Luisa, Chun-Jie Guo, Ling-Ling Chen, and Maite Huarte. 2021.\n“Gene Regulation by Long Non-Coding RNAs and Its Biological\nFunctions.” Nature Reviews Molecular Cell Biology 22\n(2): 96–118.\n\n\nSteele, Christopher D, Ammal Abbasi, SM Ashiqul Islam, Amy L Bowes,\nAzhar Khandekar, Kerstin Haase, Shadi Hames-Fathi, et al. 2022.\n“Signatures of Copy Number Alterations in Human Cancer.”\nNature 606 (7916): 984–91.\n\n\nStegle, Oliver, Leopold Parts, Richard Durbin, and John Winn. 2010.\n“A Bayesian Framework to Account for Complex Non-Genetic Factors\nin Gene Expression Levels Greatly Increases Power in eQTL\nStudies.” PLoS Computational Biology 6 (5): e1000770.\n\n\nSteinbach, Nicole. 2017. PTEN Affects Gene Expression and Histone\nModifications and Plays a Role in the Regulation of Transcription.\nColumbia University.\n\n\nStephenson, Emily, Gary Reynolds, Rachel A Botting, Fernando J\nCalero-Nieto, Michael D Morgan, Zewen Kelvin Tuong, Karsten Bach, et al.\n2021. “Single-Cell Multi-Omics Analysis of the Immune Response in\nCOVID-19.” Nature Medicine 27 (5): 904–16.\n\n\nStock, Marco, Niclas Popp, Jonathan Fiorentino, and Antonio Scialdone.\n2024. “Topological Benchmarking of Algorithms to Infer Gene\nRegulatory Networks from Single-Cell RNA-Seq Data.”\nBioinformatics, btae267.\n\n\nStreet, Kelly, Davide Risso, Russell B Fletcher, Diya Das, John Ngai,\nNir Yosef, Elizabeth Purdom, and Sandrine Dudoit. 2018.\n“Slingshot: Cell Lineage and Pseudotime Inference for Single-Cell\nTranscriptomics.” BMC Genomics 19 (1): 477.\n\n\nStuart, Tim, Andrew Butler, Paul Hoffman, Christoph Hafemeister,\nEfthymia Papalexi, William M Mauck III, Yuhan Hao, Marlon Stoeckius,\nPeter Smibert, and Rahul Satija. 2019. “Comprehensive Integration\nof Single-Cell Data.” Cell 177 (7): 1888–1902.\n\n\nSubramanian, Aravind, Pablo Tamayo, Vamsi K Mootha, Sayan Mukherjee,\nBenjamin L Ebert, Michael A Gillette, Amanda Paulovich, et al. 2005.\n“Gene Set Enrichment Analysis: A Knowledge-Based Approach for\nInterpreting Genome-Wide Expression Profiles.” Proceedings of\nthe National Academy of Sciences 102 (43): 15545–50.\n\n\nSvensson, Valentine. 2020. “Droplet scRNA-Seq Is Not\nZero-Inflated.” Nature Biotechnology 38 (2): 147–50.\n\n\n———. 2021. “Reply to: UMI or Not UMI, That Is the Question for\nscRNA-Seq Zero-Inflation.” Nature Biotechnology 39 (2):\n160–60.\n\n\nSwaminath, Sharmada, and Alistair B Russell. 2024. “The Use of\nSingle-Cell RNA-Seq to Study Heterogeneity at Varying Levels of\nVirus–Host Interactions.” PLoS Pathogens 20 (1):\ne1011898.\n\n\nSznajder, Łukasz J, and Maurice S Swanson. 2019. “Short Tandem\nRepeat Expansions and RNA-Mediated Pathogenesis in Myotonic\nDystrophy.” International Journal of Molecular Sciences\n20 (13): 3365.\n\n\nTang, Wenhao, Andreas Christ Sølvsten Jørgensen, Samuel Marguerat,\nPhilipp Thomas, and Vahid Shahrezaei. 2023. “Modelling Capture\nEfficiency of Single Cell RNA-Sequencing Data Improves Inference of\nTranscriptome-Wide Burst Kinetics.” bioRxiv, 2023–03.\n\n\nTangherloni, Andrea, Simone Spolaor, Leonardo Rundo, Marco S Nobile,\nPaolo Cazzaniga, Giancarlo Mauri, Pietro Liò, Ivan Merelli, and Daniela\nBesozzi. 2019. “GenHap: A Novel Computational Method Based on\nGenetic Algorithms for Haplotype Assembly.” BMC\nBioinformatics 20: 1–14.\n\n\nTanudisastro, Hope A, Ira W Deveson, Harriet Dashnow, and Daniel G\nMacArthur. 2024. “Sequencing and Characterizing Short Tandem\nRepeats in the Human Genome.” Nature Reviews Genetics 25\n(7): 460–75.\n\n\nTaylor, Rebecca C, Sean P Cullen, and Seamus J Martin. 2008.\n“Apoptosis: Controlled Demolition at the Cellular Level.”\nNature Reviews Molecular Cell Biology 9 (3): 231–41.\n\n\nTeichmann, Sarah, and Mirjana Efremova. 2020. “Method of the Year\n2019: Single-Cell Multimodal Omics.” Nature Methods 17\n(1): 2020.\n\n\nTheunissen, Lauren, Thomas Mortier, Yvan Saeys, and Willem Waegeman.\n2024. “Uncertainty-Aware Single-Cell Annotation with a\nHierarchical Reject Option.” Bioinformatics 40 (3):\nbtae128.\n\n\nTibshirani, Robert, Michael Saunders, Saharon Rosset, Ji Zhu, and Keith\nKnight. 2005. “Sparsity and Smoothness via the Fused\nLasso.” Journal of the Royal Statistical Society Series B:\nStatistical Methodology 67 (1): 91–108.\n\n\nTipping, Michael E, and Christopher M Bishop. 1999. “Probabilistic\nPrincipal Component Analysis.” Journal of the Royal\nStatistical Society: Series B (Statistical Methodology) 61 (3):\n611–22.\n\n\nTownes, F William, Stephanie C Hicks, Martin J Aryee, and Rafael A\nIrizarry. 2019. “Feature Selection and Dimension Reduction for\nSingle-Cell RNA-seq Based on a Multinomial\nModel.” Genome Biology 20 (1): 1–16.\n\n\nTraag, Vincent A, Ludo Waltman, and Nees Jan Van Eck. 2019. “From\nLouvain to Leiden: Guaranteeing Well-Connected Communities.”\nScientific Reports 9 (1): 1–12.\n\n\nTran, Hoa Thi Nhu, Kok Siong Ang, Marion Chevrier, Xiaomeng Zhang,\nNicole Yee Shin Lee, Michelle Goh, and Jinmiao Chen. 2020. “A\nBenchmark of Batch-Effect Correction Methods for Single-Cell\nRNA Sequencing Data.” Genome Biology 21\n(1): 1–32.\n\n\nTrapnell, Cole, Davide Cacchiarelli, Jonna Grimsby, Prapti Pokharel,\nShuqiang Li, Michael Morse, Niall J Lennon, Kenneth J Livak, Tarjei S\nMikkelsen, and John L Rinn. 2014. “The Dynamics and Regulators of\nCell Fate Decisions Are Revealed by Pseudotemporal Ordering of Single\nCells.” Nature Biotechnology 32 (4): 381.\n\n\nTrapp, Alexandre, Csaba Kerepesi, and Vadim N Gladyshev. 2021.\n“Profiling Epigenetic Age in Single Cells.” Nature\nAging 1 (12): 1189–1201.\n\n\nValecha, Monica, and David Posada. 2022. “Somatic Variant Calling\nfrom Single-Cell DNA Sequencing Data.” Computational and\nStructural Biotechnology Journal 20: 2978–85.\n\n\nVan Dijk, David, Roshan Sharma, Juozas Nainys, Kristina Yim, Pooja\nKathail, Ambrose J Carr, Cassandra Burdziak, et al. 2018.\n“Recovering Gene Interactions from Single-Cell Data Using Data\nDiffusion.” Cell 174 (3): 716–29.\n\n\nVerbanck, Marie, Chia-Yen Chen, Benjamin Neale, and Ron Do. 2018.\n“Detection of Widespread Horizontal Pleiotropy in Causal\nRelationships Inferred from Mendelian Randomization Between Complex\nTraits and Diseases.” Nature Genetics 50 (5): 693–98.\n\n\nVerschoor, Chris P, Alina Lelic, Jonathan L Bramson, and Dawn ME\nBowdish. 2015. “An Introduction to Automated Flow Cytometry Gating\nTools and Their Implementation.” Frontiers in Immunology\n6: 380.\n\n\nVon Bernhardi, Rommy, Laura Eugenı́n-von Bernhardi, and Jaime Eugenı́n.\n2015. “Microglial Cell Dysregulation in Brain Aging and\nNeurodegeneration.” Frontiers in Aging Neuroscience 7:\n124.\n\n\nWainberg, Michael, Nasa Sinnott-Armstrong, Nicholas Mancuso, Alvaro N\nBarbeira, David A Knowles, David Golan, Raili Ermel, et al. 2019.\n“Opportunities and Challenges for Transcriptome-Wide Association\nStudies.” Nature Genetics 51 (4): 592–99.\n\n\nWall, Jeffrey D, and Jonathan K Pritchard. 2003. “Haplotype Blocks\nand Linkage Disequilibrium in the Human Genome.” Nature\nReviews Genetics 4 (8): 587–97.\n\n\nWang, Gao, Abhishek Sarkar, Peter Carbonetto, and Matthew Stephens.\n2020. “A Simple New Approach to Variable Selection in Regression,\nwith Application to Genetic Fine Mapping.” Journal of the\nRoyal Statistical Society Series B: Statistical Methodology 82 (5):\n1273–1300.\n\n\nWang, Lingfei, Nikolaos Trasanidis, Ting Wu, Guanlan Dong, Michael Hu,\nDaniel E Bauer, and Luca Pinello. 2023. “Dictys: Dynamic Gene\nRegulatory Network Dissects Developmental Continuum with Single-Cell\nMultiomics.” Nature Methods 20: 1368–78.\n\n\nWang, Qingbo S, and Hailiang Huang. 2022. “Methods for Statistical\nFine-Mapping and Their Applications to Auto-Immune Diseases.” In\nSeminars in Immunopathology, 44:101–13. 1. Springer.\n\n\nWang, Tao, Yongzhuang Liu, Junpeng Ruan, Xianjun Dong, Yadong Wang, and\nJiajie Peng. 2021. “A Pipeline for RNA-Seq Based eQTL Analysis\nwith Automated Quality Control Procedures.” BMC\nBioinformatics 22: 1–18.\n\n\nWang, Tianyu, Boyang Li, Craig E Nelson, and Sheida Nabavi. 2019.\n“Comparative Analysis of Differential Gene Expression Analysis\nTools for Single-Cell RNA Sequencing Data.” BMC\nBioinformatics 20 (1): 1–16.\n\n\nWang, Yizhuo, Christopher R Flowers, Michael Wang, Xuelin Huang, and\nZiyi Li. 2024. “CASi: A Framework for Cross-Timepoint Analysis of\nSingle-Cell RNA Sequencing Data.” Scientific Reports 14\n(1): 10633.\n\n\nWang, Yulei, Chih Long Liu, John D Storey, Robert J Tibshirani, Daniel\nHerschlag, and Patrick O Brown. 2002. “Precision and Functional\nSpecificity in mRNA Decay.” Proceedings of the National\nAcademy of Sciences 99 (9): 5860–65.\n\n\nWei, Lai, Derek Lee, Cheuk-Ting Law, Misty Shuo Zhang, Jialing Shen, Don\nWai-Ching Chin, Allen Zhang, et al. 2019. “Genome-Wide CRISPR/Cas9\nLibrary Screening Identified PHGDH as a Critical Driver for Sorafenib\nResistance in HCC.” Nature Communications 10 (1): 4681.\n\n\nWeinreb, Caleb, Alejo Rodriguez-Fraticelli, Fernando D Camargo, and\nAllon M Klein. 2020. “Lineage Tracing on Transcriptional\nLandscapes Links State to Fate During Differentiation.”\nScience 367 (6479).\n\n\nWen, Lu, Guoqiang Li, Tao Huang, Wei Geng, Hao Pei, Jialiang Yang, Miao\nZhu, et al. 2022. “Single-Cell Technologies: From Research to\nApplication.” The Innovation 3 (6).\n\n\nWilliams, Cameron G, Hyun Jae Lee, Takahiro Asatsuma, Roser Vento-Tormo,\nand Ashraful Haque. 2022. “An Introduction to Spatial\nTranscriptomics for Biomedical Research.” Genome\nMedicine 14 (1): 68.\n\n\nWolf, F Alexander, Fiona K Hamey, Mireya Plass, Jordi Solana, Joakim S\nDahlin, Berthold Göttgens, Nikolaus Rajewsky, Lukas Simon, and Fabian J\nTheis. 2019. “PAGA: Graph Abstraction Reconciles Clustering with\nTrajectory Inference Through a Topology Preserving Map of Single\nCells.” Genome Biology 20 (1): 59.\n\n\nWong, Karen HY, Walfred Ma, Chun-Yu Wei, Erh-Chan Yeh, Wan-Jia Lin, Elin\nHF Wang, Jen-Ping Su, et al. 2020. “Towards a Reference Genome\nThat Captures Global Genetic Diversity.” Nature\nCommunications 11 (1): 5482.\n\n\nWright, Shannon E, and Peter K Todd. 2023. “Native Functions of\nShort Tandem Repeats.” Elife 12: e84043.\n\n\nWu, Kevin E, Kathryn E Yost, Howard Y Chang, and James Zou. 2021.\n“BABEL Enables Cross-Modality Translation Between\nMultiomic Profiles at Single-Cell Resolution.” Proceedings of\nthe National Academy of Sciences 118 (15).\n\n\nXi, Nan Miles, and Jingyi Jessica Li. 2021. “Benchmarking\nComputational Doublet-Detection Methods for Single-Cell RNA Sequencing\nData.” Cell Systems 12 (2): 176–94.\n\n\nXia, Lucy, Christy Lee, and Jingyi Jessica Li. 2024. “Statistical\nMethod scDEED for Detecting Dubious 2D Single-Cell Embeddings and\nOptimizing t-SNE and UMAP Hyperparameters.” Nature\nCommunications 15 (1): 1753.\n\n\nXie, Fangming, Ethan J Armand, Zizhen Yao, Hanqing Liu, Anna Bartlett, M\nMargarita Behrens, Yang Eric Li, et al. 2023. “Robust\nEnhancer-Gene Regulation Identified by Single-Cell Transcriptomes and\nEpigenomes.” Cell Genomics 3 (7).\n\n\nXing, Yue, Alan R Dabney, Xiao Li, Guosong Wang, Clare A Gill, and\nClaudio Casola. 2020. “SECNVs: A Simulator of Copy Number Variants\nand Whole-Exome Sequences from Reference Genomes.” Frontiers\nin Genetics 11: 82.\n\n\nXu, Chenling, Romain Lopez, Edouard Mehlman, Jeffrey Regier, Michael I\nJordan, and Nir Yosef. 2021. “Probabilistic Harmonization and\nAnnotation of Single-Cell Transcriptomics Data with Deep Generative\nModels.” Molecular Systems Biology 17 (1): e9620.\n\n\nXu, Yang, and Rachel Patton McCord. 2022. “Diagonal Integration of\nMultimodal Single-Cell Data: Potential Pitfalls and Paths\nForward.” Nature Communications 13 (1): 3505.\n\n\nYang, Zikun, Chen Wang, Linxi Liu, Atlas Khan, Annie Lee, Badri\nVardarajan, Richard Mayeux, Krzysztof Kiryluk, and Iuliana Ionita-Laza.\n2023. “CARMA Is a New Bayesian Model for Fine-Mapping in\nGenome-Wide Association Meta-Analyses.” Nature Genetics\n55 (6): 1057–65.\n\n\nYao, Douglas, Loic Binan, Jon Bezney, Brooke Simonton, Jahanara\nFreedman, Chris J Frangieh, Kushal Dey, et al. 2024. “Scalable\nGenetic Screening for Regulatory Circuits Using Compressed\nPerturb-Seq.” Nature Biotechnology 42 (8): 1282–95.\n\n\nYazar, Seyhan, Jose Alquicira-Hernandez, Kristof Wing, Anne Senabouth, M\nGrace Gordon, Stacey Andersen, Qinyi Lu, et al. 2022. “Single-Cell\neQTL Mapping Identifies Cell Type-Specific\nGenetic Control of Autoimmune Disease.” Science 376\n(6589): eabf3041.\n\n\nYoung, Matthew D, and Sam Behjati. 2020. “SoupX Removes Ambient\nRNA Contamination from Droplet-Based Single-Cell RNA Sequencing\nData.” Gigascience 9 (12): giaa151.\n\n\nYu, Hengshi, and Joshua D Welch. 2022. “Perturbnet Predicts\nSingle-Cell Responses to Unseen Chemical and Genetic\nPerturbations.” BioRxiv, 2022–07.\n\n\nYu, Lei, Xinlei Wang, Quanhua Mu, Sindy Sing Ting Tam, Danson Shek Chun\nLoi, Aden KY Chan, Wai Sang Poon, et al. 2023. “scONE-Seq: A\nSingle-Cell Multi-Omics Method Enables Simultaneous Dissection of\nPhenotype and Genotype Heterogeneity from Frozen Tumors.”\nScience Advances 9 (1): eabp8901.\n\n\nYu, Lijia, Yue Cao, Jean YH Yang, and Pengyi Yang. 2022.\n“Benchmarking Clustering Algorithms on Estimating the Number of\nCell Types from Single-Cell RNA-Sequencing Data.” Genome\nBiology 23 (1): 49.\n\n\nYuan, Qiuyue, and Zhana Duren. 2024. “Inferring Gene Regulatory\nNetworks from Single-Cell Multiome Data Using Atlas-Scale External\nData.” Nature Biotechnology, 1–11.\n\n\nZeng, Hongkui. 2022. “What Is a Cell Type and How to Define\nIt?” Cell 185 (15): 2739–55.\n\n\nZhang, Le, Wanyu Bai, Na Yuan, and Zhenglin Du. 2019.\n“Comprehensively Benchmarking Applications for Detecting Copy\nNumber Variation.” PLoS Computational Biology 15 (5):\ne1007069.\n\n\nZhang, Martin Jinye, Kangcheng Hou, Kushal K Dey, Saori Sakaue, Karthik\nA Jagadeesh, Kathryn Weinand, Aris Taychameekiatchai, et al. 2022.\n“Polygenic Enrichment Distinguishes Disease Associations of\nIndividual Cells in Single-Cell RNA-Seq Data.” Nature\nGenetics 54 (10): 1572–80.\n\n\nZhang, Meng, Xingjie Pan, Won Jung, Aaron Halpern, Stephen W Eichhorn,\nZhiyun Lei, Limor Cohen, et al. 2023. “A Molecularly Defined and\nSpatially Resolved Cell Atlas of the Whole Mouse Brain.”\nbioRxiv, 2023–03.\n\n\nZhang, Mengqi, Si Liu, Zhen Miao, Fang Han, Raphael Gottardo, and Wei\nSun. 2022. “IDEAS: Individual Level Differential\nExpression Analysis for Single-Cell RNA-Seq Data.”\nGenome Biology 23 (1): 1–17.\n\n\nZhang, Qiuyu, Wenjie Cao, Jiaqi Wang, Yihao Yin, Rui Sun, Zunyi Tian,\nYuhan Hu, Yalan Tan, and Ben-gong Zhang. 2024. “Transcriptional\nBursting Dynamics in Gene Expression.” Frontiers in\nGenetics 15: 1451461.\n\n\nZhang, Ran, Laetitia Meng-Papaxanthos, Jean-philippe Vert, and William\nStafford Noble. 2022. “Multimodal Single-Cell Translation and\nAlignment with Semi-Supervised Learning.” Journal of\nComputational Biology 29 (11): 1198–1212.\n\n\nZhang, Shixiong, Xiangtao Li, Qiuzhen Lin, and Ka-Chun Wong. 2020.\n“Review of Single-Cell RNA-Seq Data Clustering for\nCell Type Identification and Characterization.” arXiv\nPreprint arXiv:2001.01006.\n\n\nZhang, Xinyuan, Yanqiu Feng, Wufan Chen, Xin Li, Andreia V Faria,\nQianjin Feng, and Susumu Mori. 2019. “Linear Registration of Brain\nMri Using Knowledge-Based Multiple Intermediator Libraries.”\nFrontiers in Neuroscience 13: 909.\n\n\nZhang, Yifan, Duc Tran, Tin Nguyen, Sergiu M Dascalu, and Frederick C\nHarris Jr. 2023. “A Robust and Accurate Single-Cell Data\nTrajectory Inference Method Using Ensemble Pseudotime.” BMC\nBioinformatics 24 (1): 55.\n\n\nZhang, Ying, and Marc-André Sirard. 2021. “Epigenetic Inheritance\nof Acquired Traits Through DNA Methylation.” Animal\nFrontiers 11 (6): 19–27.\n\n\nZhang, Yuqing, Giovanni Parmigiani, and W Evan Johnson. 2020.\n“ComBat-Seq: Batch Effect Adjustment for RNA-Seq Count\nData.” NAR Genomics and Bioinformatics 2 (3): lqaa078.\n\n\nZhang, Zhaojun, Divij Mathew, Tristan L Lim, Kaishu Mason, Clara Morral\nMartinez, Sijia Huang, E John Wherry, et al. 2024. “Recovery of\nBiological Signals Lost in Single-Cell Batch Integration with\nCellANOVA.” Nature Biotechnology, 1–17.\n\n\nZhang, Ziqi, Haoran Sun, Ragunathan Mariappan, Xi Chen, Xinyu Chen, Mika\nS Jain, Mirjana Efremova, Sarah A Teichmann, Vaibhav Rajan, and Xiuwei\nZhang. 2023. “scMoMaT Jointly Performs Single Cell Mosaic\nIntegration and Multi-Modal Bio-Marker Detection.” Nature\nCommunications 14 (1): 384.\n\n\nZhang, Ziqi, Chengkai Yang, and Xiuwei Zhang. 2022. “scDART:\nIntegrating Unmatched scRNA-Seq and scATAC-Seq Data and Learning\nCross-Modality Relationship Simultaneously.” Genome\nBiology 23 (1): 139.\n\n\nZhao, Ruzhang, Jiuyao Lu, Weiqiang Zhou, Ni Zhao, and Hongkai Ji. 2024.\n“A Systematic Evaluation of Highly Variable Gene Selection Methods\nfor Single-Cell RNA-Sequencing.” bioRxiv, 2024–08.\n\n\nZhou, Jessica L, Karthik Guruvayurappan, Shushan Toneyan, Hsiuyi V Chen,\nAaron R Chen, Peter Koo, and Graham McVicker. 2024. “Analysis of\nSingle-Cell CRISPR Perturbations Indicates That Enhancers Predominantly\nAct Multiplicatively.” Cell Genomics 4 (11).\n\n\nZhou, Ran, Gaoxia Yang, Yan Zhang, and Yuan Wang. 2023. “Spatial\nTranscriptomics in Development and Disease.” Molecular\nBiomedicine 4 (1): 32.\n\n\nZhou, Yichao, Temidayo Adeluwa, Lisha Zhu, Sofia Salazar, Sarah Sumner,\nHyunki Kim, Saideep Gona, et al. 2024. “scPrediXcan Integrates\nAdvances in Deep Learning and Single-Cell Data into a Powerful\nCell-Type–Specific Transcriptome-Wide Association Study\nFramework.” bioRxiv, 2024–11.\n\n\nZhou, Yifan, Kaixuan Luo, Lifan Liang, Mengjie Chen, and Xin He. 2023.\n“A New Bayesian Factor Analysis Method Improves Detection of Genes\nand Biological Processes Affected by Perturbations in Single-Cell CRISPR\nScreening.” Nature Methods 20 (11): 1693–703.\n\n\nZhou, Yi, Hongjun Song, and Guo-li Ming. 2024. “Genetics of Human\nBrain Development.” Nature Reviews Genetics 25 (1):\n26–45.\n\n\nZhu, Bokai, Shuxiao Chen, Yunhao Bai, Han Chen, Nilanjan Mukherjee,\nGustavo Vazquez, David R McIlwain, et al. 2021. “Robust\nSingle-Cell Matching and Multi-Modal Analysis Using Shared and Distinct\nFeatures Reveals Orchestrated Immune Responses.”\nbioRxiv.\n\n\nZhu, Chenxu, Yanxiao Zhang, Yang Eric Li, Jacinta Lucero, M Margarita\nBehrens, and Bing Ren. 2021. “Joint Profiling of Histone\nModifications and Transcriptome in Single Cells from Mouse\nBrain.” Nature Methods, 1–10.\n\n\nZhuang, Yonghua, Kristen Wade, Laura M Saba, and Katerina Kechris. 2019.\n“Development of a Tissue Augmented Bayesian Model for Expression\nQuantitative Trait Loci Analysis.” Mathematical Biosciences\nand Engineering: MBE 17 (1): 122.\n\n\nZiegler, Lukas M von, Amalia Floriou-Servou, Rebecca Waag, Rebecca R Das\nGupta, Oliver Sturman, Katharina Gapp, Christina A Maat, et al. 2022.\n“Multiomic Profiling of the Acute Stress Response in the Mouse\nHippocampus.” Nature Communications 13 (1): 1824.\n\n\nZou, Yuxin, Peter Carbonetto, Gao Wang, and Matthew Stephens. 2022.\n“Fine-Mapping from Summary Data with the ‘Sum of Single\nEffects’ Model.” PLoS Genetics 18 (7): e1010299.\n\n\nZverinova, Stepanka, and Victor Guryev. 2022. “Variant Calling:\nConsiderations, Practices, and Developments.” Human\nMutation 43 (8): 976–85.",
    "crumbs": [
      "References"
    ]
  }
]